var Ui=Object.defineProperty,Ii=Object.defineProperties;var Oi=Object.getOwnPropertyDescriptors;var Y0=Object.getOwnPropertySymbols;var zi=Object.prototype.hasOwnProperty,ji=Object.prototype.propertyIsEnumerable;var G0=(e,s,n)=>s in e?Ui(e,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[s]=n,dl=(e,s)=>{for(var n in s||(s={}))zi.call(s,n)&&G0(e,n,s[n]);if(Y0)for(var n of Y0(s))ji.call(s,n)&&G0(e,n,s[n]);return e},yl=(e,s)=>Ii(e,Oi(s));const Wi=function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))l(t);new MutationObserver(t=>{for(const a of t)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&l(o)}).observe(document,{childList:!0,subtree:!0});function n(t){const a={};return t.integrity&&(a.integrity=t.integrity),t.referrerpolicy&&(a.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?a.credentials="include":t.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function l(t){if(t.ep)return;t.ep=!0;const a=n(t);fetch(t.href,a)}};Wi();var N={exports:{}},L={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var nl=Symbol.for("react.element"),bi=Symbol.for("react.portal"),Hi=Symbol.for("react.fragment"),$i=Symbol.for("react.strict_mode"),Ki=Symbol.for("react.profiler"),qi=Symbol.for("react.provider"),Vi=Symbol.for("react.context"),Qi=Symbol.for("react.forward_ref"),Zi=Symbol.for("react.suspense"),Yi=Symbol.for("react.memo"),Gi=Symbol.for("react.lazy"),X0=Symbol.iterator;function Xi(e){return e===null||typeof e!="object"?null:(e=X0&&e[X0]||e["@@iterator"],typeof e=="function"?e:null)}var gr={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},hr=Object.assign,Er={};function yn(e,s,n){this.props=e,this.context=s,this.refs=Er,this.updater=n||gr}yn.prototype.isReactComponent={};yn.prototype.setState=function(e,s){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,s,"setState")};yn.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function Cr(){}Cr.prototype=yn.prototype;function s0(e,s,n){this.props=e,this.context=s,this.refs=Er,this.updater=n||gr}var n0=s0.prototype=new Cr;n0.constructor=s0;hr(n0,yn.prototype);n0.isPureReactComponent=!0;var J0=Array.isArray,Tr=Object.prototype.hasOwnProperty,l0={current:null},Br={key:!0,ref:!0,__self:!0,__source:!0};function kr(e,s,n){var l,t={},a=null,o=null;if(s!=null)for(l in s.ref!==void 0&&(o=s.ref),s.key!==void 0&&(a=""+s.key),s)Tr.call(s,l)&&!Br.hasOwnProperty(l)&&(t[l]=s[l]);var r=arguments.length-2;if(r===1)t.children=n;else if(1<r){for(var p=Array(r),u=0;u<r;u++)p[u]=arguments[u+2];t.children=p}if(e&&e.defaultProps)for(l in r=e.defaultProps,r)t[l]===void 0&&(t[l]=r[l]);return{$$typeof:nl,type:e,key:a,ref:o,props:t,_owner:l0.current}}function Ji(e,s){return{$$typeof:nl,type:e.type,key:s,ref:e.ref,props:e.props,_owner:e._owner}}function t0(e){return typeof e=="object"&&e!==null&&e.$$typeof===nl}function eu(e){var s={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(n){return s[n]})}var eo=/\/+/g;function Mt(e,s){return typeof e=="object"&&e!==null&&e.key!=null?eu(""+e.key):s.toString(36)}function Ll(e,s,n,l,t){var a=typeof e;(a==="undefined"||a==="boolean")&&(e=null);var o=!1;if(e===null)o=!0;else switch(a){case"string":case"number":o=!0;break;case"object":switch(e.$$typeof){case nl:case bi:o=!0}}if(o)return o=e,t=t(o),e=l===""?"."+Mt(o,0):l,J0(t)?(n="",e!=null&&(n=e.replace(eo,"$&/")+"/"),Ll(t,s,n,"",function(u){return u})):t!=null&&(t0(t)&&(t=Ji(t,n+(!t.key||o&&o.key===t.key?"":(""+t.key).replace(eo,"$&/")+"/")+e)),s.push(t)),1;if(o=0,l=l===""?".":l+":",J0(e))for(var r=0;r<e.length;r++){a=e[r];var p=l+Mt(a,r);o+=Ll(a,s,n,p,t)}else if(p=Xi(e),typeof p=="function")for(e=p.call(e),r=0;!(a=e.next()).done;)a=a.value,p=l+Mt(a,r++),o+=Ll(a,s,n,p,t);else if(a==="object")throw s=String(e),Error("Objects are not valid as a React child (found: "+(s==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":s)+"). If you meant to render a collection of children, use an array instead.");return o}function fl(e,s,n){if(e==null)return e;var l=[],t=0;return Ll(e,l,"","",function(a){return s.call(n,a,t++)}),l}function su(e){if(e._status===-1){var s=e._result;s=s(),s.then(function(n){(e._status===0||e._status===-1)&&(e._status=1,e._result=n)},function(n){(e._status===0||e._status===-1)&&(e._status=2,e._result=n)}),e._status===-1&&(e._status=0,e._result=s)}if(e._status===1)return e._result.default;throw e._result}var ce={current:null},Nl={transition:null},nu={ReactCurrentDispatcher:ce,ReactCurrentBatchConfig:Nl,ReactCurrentOwner:l0};L.Children={map:fl,forEach:function(e,s,n){fl(e,function(){s.apply(this,arguments)},n)},count:function(e){var s=0;return fl(e,function(){s++}),s},toArray:function(e){return fl(e,function(s){return s})||[]},only:function(e){if(!t0(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};L.Component=yn;L.Fragment=Hi;L.Profiler=Ki;L.PureComponent=s0;L.StrictMode=$i;L.Suspense=Zi;L.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nu;L.cloneElement=function(e,s,n){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var l=hr({},e.props),t=e.key,a=e.ref,o=e._owner;if(s!=null){if(s.ref!==void 0&&(a=s.ref,o=l0.current),s.key!==void 0&&(t=""+s.key),e.type&&e.type.defaultProps)var r=e.type.defaultProps;for(p in s)Tr.call(s,p)&&!Br.hasOwnProperty(p)&&(l[p]=s[p]===void 0&&r!==void 0?r[p]:s[p])}var p=arguments.length-2;if(p===1)l.children=n;else if(1<p){r=Array(p);for(var u=0;u<p;u++)r[u]=arguments[u+2];l.children=r}return{$$typeof:nl,type:e.type,key:t,ref:a,props:l,_owner:o}};L.createContext=function(e){return e={$$typeof:Vi,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:qi,_context:e},e.Consumer=e};L.createElement=kr;L.createFactory=function(e){var s=kr.bind(null,e);return s.type=e,s};L.createRef=function(){return{current:null}};L.forwardRef=function(e){return{$$typeof:Qi,render:e}};L.isValidElement=t0;L.lazy=function(e){return{$$typeof:Gi,_payload:{_status:-1,_result:e},_init:su}};L.memo=function(e,s){return{$$typeof:Yi,type:e,compare:s===void 0?null:s}};L.startTransition=function(e){var s=Nl.transition;Nl.transition={};try{e()}finally{Nl.transition=s}};L.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};L.useCallback=function(e,s){return ce.current.useCallback(e,s)};L.useContext=function(e){return ce.current.useContext(e)};L.useDebugValue=function(){};L.useDeferredValue=function(e){return ce.current.useDeferredValue(e)};L.useEffect=function(e,s){return ce.current.useEffect(e,s)};L.useId=function(){return ce.current.useId()};L.useImperativeHandle=function(e,s,n){return ce.current.useImperativeHandle(e,s,n)};L.useInsertionEffect=function(e,s){return ce.current.useInsertionEffect(e,s)};L.useLayoutEffect=function(e,s){return ce.current.useLayoutEffect(e,s)};L.useMemo=function(e,s){return ce.current.useMemo(e,s)};L.useReducer=function(e,s,n){return ce.current.useReducer(e,s,n)};L.useRef=function(e){return ce.current.useRef(e)};L.useState=function(e){return ce.current.useState(e)};L.useSyncExternalStore=function(e,s,n){return ce.current.useSyncExternalStore(e,s,n)};L.useTransition=function(){return ce.current.useTransition()};L.version="18.1.0";N.exports=L;var lu=N.exports,oa={},wr={exports:{}},Te={},Dr={exports:{}},xr={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function s(B,R){var P=B.length;B.push(R);e:for(;0<P;){var q=P-1>>>1,X=B[q];if(0<t(X,R))B[q]=R,B[P]=X,P=q;else break e}}function n(B){return B.length===0?null:B[0]}function l(B){if(B.length===0)return null;var R=B[0],P=B.pop();if(P!==R){B[0]=P;e:for(var q=0,X=B.length,ul=X>>>1;q<ul;){var ks=2*(q+1)-1,_t=B[ks],ws=ks+1,cl=B[ws];if(0>t(_t,P))ws<X&&0>t(cl,_t)?(B[q]=cl,B[ws]=P,q=ws):(B[q]=_t,B[ks]=P,q=ks);else if(ws<X&&0>t(cl,P))B[q]=cl,B[ws]=P,q=ws;else break e}}return R}function t(B,R){var P=B.sortIndex-R.sortIndex;return P!==0?P:B.id-R.id}if(typeof performance=="object"&&typeof performance.now=="function"){var a=performance;e.unstable_now=function(){return a.now()}}else{var o=Date,r=o.now();e.unstable_now=function(){return o.now()-r}}var p=[],u=[],f=1,v=null,y=3,E=!1,h=!1,D=!1,U=typeof setTimeout=="function"?setTimeout:null,c=typeof clearTimeout=="function"?clearTimeout:null,i=typeof setImmediate!="undefined"?setImmediate:null;typeof navigator!="undefined"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function d(B){for(var R=n(u);R!==null;){if(R.callback===null)l(u);else if(R.startTime<=B)l(u),R.sortIndex=R.expirationTime,s(p,R);else break;R=n(u)}}function F(B){if(D=!1,d(B),!h)if(n(p)!==null)h=!0,il(C);else{var R=n(u);R!==null&&Nt(F,R.startTime-B)}}function C(B,R){h=!1,D&&(D=!1,c(m),m=-1),E=!0;var P=y;try{for(d(R),v=n(p);v!==null&&(!(v.expirationTime>R)||B&&!O());){var q=v.callback;if(typeof q=="function"){v.callback=null,y=v.priorityLevel;var X=q(v.expirationTime<=R);R=e.unstable_now(),typeof X=="function"?v.callback=X:v===n(p)&&l(p),d(R)}else l(p);v=n(p)}if(v!==null)var ul=!0;else{var ks=n(u);ks!==null&&Nt(F,ks.startTime-R),ul=!1}return ul}finally{v=null,y=P,E=!1}}var k=!1,w=null,m=-1,A=5,x=-1;function O(){return!(e.unstable_now()-x<A)}function re(){if(w!==null){var B=e.unstable_now();x=B;var R=!0;try{R=w(!0,B)}finally{R?pe():(k=!1,w=null)}}else k=!1}var pe;if(typeof i=="function")pe=function(){i(re)};else if(typeof MessageChannel!="undefined"){var ns=new MessageChannel,Oe=ns.port2;ns.port1.onmessage=re,pe=function(){Oe.postMessage(null)}}else pe=function(){U(re,0)};function il(B){w=B,k||(k=!0,pe())}function Nt(B,R){m=U(function(){B(e.unstable_now())},R)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(B){B.callback=null},e.unstable_continueExecution=function(){h||E||(h=!0,il(C))},e.unstable_forceFrameRate=function(B){0>B||125<B?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):A=0<B?Math.floor(1e3/B):5},e.unstable_getCurrentPriorityLevel=function(){return y},e.unstable_getFirstCallbackNode=function(){return n(p)},e.unstable_next=function(B){switch(y){case 1:case 2:case 3:var R=3;break;default:R=y}var P=y;y=R;try{return B()}finally{y=P}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(B,R){switch(B){case 1:case 2:case 3:case 4:case 5:break;default:B=3}var P=y;y=B;try{return R()}finally{y=P}},e.unstable_scheduleCallback=function(B,R,P){var q=e.unstable_now();switch(typeof P=="object"&&P!==null?(P=P.delay,P=typeof P=="number"&&0<P?q+P:q):P=q,B){case 1:var X=-1;break;case 2:X=250;break;case 5:X=1073741823;break;case 4:X=1e4;break;default:X=5e3}return X=P+X,B={id:f++,callback:R,priorityLevel:B,startTime:P,expirationTime:X,sortIndex:-1},P>q?(B.sortIndex=P,s(u,B),n(p)===null&&B===n(u)&&(D?(c(m),m=-1):D=!0,Nt(F,P-q))):(B.sortIndex=X,s(p,B),h||E||(h=!0,il(C))),B},e.unstable_shouldYield=O,e.unstable_wrapCallback=function(B){var R=y;return function(){var P=y;y=R;try{return B.apply(this,arguments)}finally{y=P}}}})(xr);Dr.exports=xr;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ar=N.exports,Ce=Dr.exports;function g(e){for(var s="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)s+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+s+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Sr=new Set,zn={};function Os(e,s){on(e,s),on(e+"Capture",s)}function on(e,s){for(zn[e]=s,e=0;e<s.length;e++)Sr.add(s[e])}var Xe=!(typeof window=="undefined"||typeof window.document=="undefined"||typeof window.document.createElement=="undefined"),ra=Object.prototype.hasOwnProperty,tu=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,so={},no={};function au(e){return ra.call(no,e)?!0:ra.call(so,e)?!1:tu.test(e)?no[e]=!0:(so[e]=!0,!1)}function ou(e,s,n,l){if(n!==null&&n.type===0)return!1;switch(typeof s){case"function":case"symbol":return!0;case"boolean":return l?!1:n!==null?!n.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function ru(e,s,n,l){if(s===null||typeof s=="undefined"||ou(e,s,n,l))return!0;if(l)return!1;if(n!==null)switch(n.type){case 3:return!s;case 4:return s===!1;case 5:return isNaN(s);case 6:return isNaN(s)||1>s}return!1}function de(e,s,n,l,t,a,o){this.acceptsBooleans=s===2||s===3||s===4,this.attributeName=l,this.attributeNamespace=t,this.mustUseProperty=n,this.propertyName=e,this.type=s,this.sanitizeURL=a,this.removeEmptyString=o}var ne={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ne[e]=new de(e,0,!1,e,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var s=e[0];ne[s]=new de(s,1,!1,e[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(e){ne[e]=new de(e,2,!1,e.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ne[e]=new de(e,2,!1,e,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ne[e]=new de(e,3,!1,e.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(e){ne[e]=new de(e,3,!0,e,null,!1,!1)});["capture","download"].forEach(function(e){ne[e]=new de(e,4,!1,e,null,!1,!1)});["cols","rows","size","span"].forEach(function(e){ne[e]=new de(e,6,!1,e,null,!1,!1)});["rowSpan","start"].forEach(function(e){ne[e]=new de(e,5,!1,e.toLowerCase(),null,!1,!1)});var a0=/[\-:]([a-z])/g;function o0(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var s=e.replace(a0,o0);ne[s]=new de(s,1,!1,e,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var s=e.replace(a0,o0);ne[s]=new de(s,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(e){var s=e.replace(a0,o0);ne[s]=new de(s,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(e){ne[e]=new de(e,1,!1,e.toLowerCase(),null,!1,!1)});ne.xlinkHref=new de("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(e){ne[e]=new de(e,1,!1,e.toLowerCase(),null,!0,!0)});function r0(e,s,n,l){var t=ne.hasOwnProperty(s)?ne[s]:null;(t!==null?t.type!==0:l||!(2<s.length)||s[0]!=="o"&&s[0]!=="O"||s[1]!=="n"&&s[1]!=="N")&&(ru(s,n,t,l)&&(n=null),l||t===null?au(s)&&(n===null?e.removeAttribute(s):e.setAttribute(s,""+n)):t.mustUseProperty?e[t.propertyName]=n===null?t.type===3?!1:"":n:(s=t.attributeName,l=t.attributeNamespace,n===null?e.removeAttribute(s):(t=t.type,n=t===3||t===4&&n===!0?"":""+n,l?e.setAttributeNS(l,s,n):e.setAttribute(s,n))))}var ss=Ar.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,vl=Symbol.for("react.element"),bs=Symbol.for("react.portal"),Hs=Symbol.for("react.fragment"),p0=Symbol.for("react.strict_mode"),pa=Symbol.for("react.profiler"),Rr=Symbol.for("react.provider"),Pr=Symbol.for("react.context"),i0=Symbol.for("react.forward_ref"),ia=Symbol.for("react.suspense"),ua=Symbol.for("react.suspense_list"),u0=Symbol.for("react.memo"),ts=Symbol.for("react.lazy"),Lr=Symbol.for("react.offscreen"),lo=Symbol.iterator;function Fn(e){return e===null||typeof e!="object"?null:(e=lo&&e[lo]||e["@@iterator"],typeof e=="function"?e:null)}var $=Object.assign,Ut;function wn(e){if(Ut===void 0)try{throw Error()}catch(n){var s=n.stack.trim().match(/\n( *(at )?)/);Ut=s&&s[1]||""}return`
`+Ut+e}var It=!1;function Ot(e,s){if(!e||It)return"";It=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(s)if(s=function(){throw Error()},Object.defineProperty(s.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(s,[])}catch(u){var l=u}Reflect.construct(e,[],s)}else{try{s.call()}catch(u){l=u}e.call(s.prototype)}else{try{throw Error()}catch(u){l=u}e()}}catch(u){if(u&&l&&typeof u.stack=="string"){for(var t=u.stack.split(`
`),a=l.stack.split(`
`),o=t.length-1,r=a.length-1;1<=o&&0<=r&&t[o]!==a[r];)r--;for(;1<=o&&0<=r;o--,r--)if(t[o]!==a[r]){if(o!==1||r!==1)do if(o--,r--,0>r||t[o]!==a[r]){var p=`
`+t[o].replace(" at new "," at ");return e.displayName&&p.includes("<anonymous>")&&(p=p.replace("<anonymous>",e.displayName)),p}while(1<=o&&0<=r);break}}}finally{It=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?wn(e):""}function pu(e){switch(e.tag){case 5:return wn(e.type);case 16:return wn("Lazy");case 13:return wn("Suspense");case 19:return wn("SuspenseList");case 0:case 2:case 15:return e=Ot(e.type,!1),e;case 11:return e=Ot(e.type.render,!1),e;case 1:return e=Ot(e.type,!0),e;default:return""}}function ca(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case Hs:return"Fragment";case bs:return"Portal";case pa:return"Profiler";case p0:return"StrictMode";case ia:return"Suspense";case ua:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case Pr:return(e.displayName||"Context")+".Consumer";case Rr:return(e._context.displayName||"Context")+".Provider";case i0:var s=e.render;return e=e.displayName,e||(e=s.displayName||s.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case u0:return s=e.displayName||null,s!==null?s:ca(e.type)||"Memo";case ts:s=e._payload,e=e._init;try{return ca(e(s))}catch{}}return null}function iu(e){var s=e.type;switch(e.tag){case 24:return"Cache";case 9:return(s.displayName||"Context")+".Consumer";case 10:return(s._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=s.render,e=e.displayName||e.name||"",s.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return s;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return ca(s);case 8:return s===p0?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof s=="function")return s.displayName||s.name||null;if(typeof s=="string")return s}return null}function ms(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function Nr(e){var s=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(s==="checkbox"||s==="radio")}function uu(e){var s=Nr(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,s),l=""+e[s];if(!e.hasOwnProperty(s)&&typeof n!="undefined"&&typeof n.get=="function"&&typeof n.set=="function"){var t=n.get,a=n.set;return Object.defineProperty(e,s,{configurable:!0,get:function(){return t.call(this)},set:function(o){l=""+o,a.call(this,o)}}),Object.defineProperty(e,s,{enumerable:n.enumerable}),{getValue:function(){return l},setValue:function(o){l=""+o},stopTracking:function(){e._valueTracker=null,delete e[s]}}}}function Fl(e){e._valueTracker||(e._valueTracker=uu(e))}function _r(e){if(!e)return!1;var s=e._valueTracker;if(!s)return!0;var n=s.getValue(),l="";return e&&(l=Nr(e)?e.checked?"true":"false":e.value),e=l,e!==n?(s.setValue(e),!0):!1}function Hl(e){if(e=e||(typeof document!="undefined"?document:void 0),typeof e=="undefined")return null;try{return e.activeElement||e.body}catch{return e.body}}function da(e,s){var n=s.checked;return $({},s,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n!=null?n:e._wrapperState.initialChecked})}function to(e,s){var n=s.defaultValue==null?"":s.defaultValue,l=s.checked!=null?s.checked:s.defaultChecked;n=ms(s.value!=null?s.value:n),e._wrapperState={initialChecked:l,initialValue:n,controlled:s.type==="checkbox"||s.type==="radio"?s.checked!=null:s.value!=null}}function Mr(e,s){s=s.checked,s!=null&&r0(e,"checked",s,!1)}function ya(e,s){Mr(e,s);var n=ms(s.value),l=s.type;if(n!=null)l==="number"?(n===0&&e.value===""||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if(l==="submit"||l==="reset"){e.removeAttribute("value");return}s.hasOwnProperty("value")?fa(e,s.type,n):s.hasOwnProperty("defaultValue")&&fa(e,s.type,ms(s.defaultValue)),s.checked==null&&s.defaultChecked!=null&&(e.defaultChecked=!!s.defaultChecked)}function ao(e,s,n){if(s.hasOwnProperty("value")||s.hasOwnProperty("defaultValue")){var l=s.type;if(!(l!=="submit"&&l!=="reset"||s.value!==void 0&&s.value!==null))return;s=""+e._wrapperState.initialValue,n||s===e.value||(e.value=s),e.defaultValue=s}n=e.name,n!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,n!==""&&(e.name=n)}function fa(e,s,n){(s!=="number"||Hl(e.ownerDocument)!==e)&&(n==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var Dn=Array.isArray;function en(e,s,n,l){if(e=e.options,s){s={};for(var t=0;t<n.length;t++)s["$"+n[t]]=!0;for(n=0;n<e.length;n++)t=s.hasOwnProperty("$"+e[n].value),e[n].selected!==t&&(e[n].selected=t),t&&l&&(e[n].defaultSelected=!0)}else{for(n=""+ms(n),s=null,t=0;t<e.length;t++){if(e[t].value===n){e[t].selected=!0,l&&(e[t].defaultSelected=!0);return}s!==null||e[t].disabled||(s=e[t])}s!==null&&(s.selected=!0)}}function va(e,s){if(s.dangerouslySetInnerHTML!=null)throw Error(g(91));return $({},s,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oo(e,s){var n=s.value;if(n==null){if(n=s.children,s=s.defaultValue,n!=null){if(s!=null)throw Error(g(92));if(Dn(n)){if(1<n.length)throw Error(g(93));n=n[0]}s=n}s==null&&(s=""),n=s}e._wrapperState={initialValue:ms(n)}}function Ur(e,s){var n=ms(s.value),l=ms(s.defaultValue);n!=null&&(n=""+n,n!==e.value&&(e.value=n),s.defaultValue==null&&e.defaultValue!==n&&(e.defaultValue=n)),l!=null&&(e.defaultValue=""+l)}function ro(e){var s=e.textContent;s===e._wrapperState.initialValue&&s!==""&&s!==null&&(e.value=s)}function Ir(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Fa(e,s){return e==null||e==="http://www.w3.org/1999/xhtml"?Ir(s):e==="http://www.w3.org/2000/svg"&&s==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var ml,Or=function(e){return typeof MSApp!="undefined"&&MSApp.execUnsafeLocalFunction?function(s,n,l,t){MSApp.execUnsafeLocalFunction(function(){return e(s,n,l,t)})}:e}(function(e,s){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=s;else{for(ml=ml||document.createElement("div"),ml.innerHTML="<svg>"+s.valueOf().toString()+"</svg>",s=ml.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;s.firstChild;)e.appendChild(s.firstChild)}});function jn(e,s){if(s){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===3){n.nodeValue=s;return}}e.textContent=s}var Sn={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},cu=["Webkit","ms","Moz","O"];Object.keys(Sn).forEach(function(e){cu.forEach(function(s){s=s+e.charAt(0).toUpperCase()+e.substring(1),Sn[s]=Sn[e]})});function zr(e,s,n){return s==null||typeof s=="boolean"||s===""?"":n||typeof s!="number"||s===0||Sn.hasOwnProperty(e)&&Sn[e]?(""+s).trim():s+"px"}function jr(e,s){e=e.style;for(var n in s)if(s.hasOwnProperty(n)){var l=n.indexOf("--")===0,t=zr(n,s[n],l);n==="float"&&(n="cssFloat"),l?e.setProperty(n,t):e[n]=t}}var du=$({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ma(e,s){if(s){if(du[e]&&(s.children!=null||s.dangerouslySetInnerHTML!=null))throw Error(g(137,e));if(s.dangerouslySetInnerHTML!=null){if(s.children!=null)throw Error(g(60));if(typeof s.dangerouslySetInnerHTML!="object"||!("__html"in s.dangerouslySetInnerHTML))throw Error(g(61))}if(s.style!=null&&typeof s.style!="object")throw Error(g(62))}}function ga(e,s){if(e.indexOf("-")===-1)return typeof s.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ha=null;function c0(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var Ea=null,sn=null,nn=null;function po(e){if(e=al(e)){if(typeof Ea!="function")throw Error(g(280));var s=e.stateNode;s&&(s=ht(s),Ea(e.stateNode,e.type,s))}}function Wr(e){sn?nn?nn.push(e):nn=[e]:sn=e}function br(){if(sn){var e=sn,s=nn;if(nn=sn=null,po(e),s)for(e=0;e<s.length;e++)po(s[e])}}function Hr(e,s){return e(s)}function $r(){}var zt=!1;function Kr(e,s,n){if(zt)return e(s,n);zt=!0;try{return Hr(e,s,n)}finally{zt=!1,(sn!==null||nn!==null)&&($r(),br())}}function Wn(e,s){var n=e.stateNode;if(n===null)return null;var l=ht(n);if(l===null)return null;n=l[s];e:switch(s){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(l=!l.disabled)||(e=e.type,l=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!l;break e;default:e=!1}if(e)return null;if(n&&typeof n!="function")throw Error(g(231,s,typeof n));return n}var Ca=!1;if(Xe)try{var mn={};Object.defineProperty(mn,"passive",{get:function(){Ca=!0}}),window.addEventListener("test",mn,mn),window.removeEventListener("test",mn,mn)}catch{Ca=!1}function yu(e,s,n,l,t,a,o,r,p){var u=Array.prototype.slice.call(arguments,3);try{s.apply(n,u)}catch(f){this.onError(f)}}var Rn=!1,$l=null,Kl=!1,Ta=null,fu={onError:function(e){Rn=!0,$l=e}};function vu(e,s,n,l,t,a,o,r,p){Rn=!1,$l=null,yu.apply(fu,arguments)}function Fu(e,s,n,l,t,a,o,r,p){if(vu.apply(this,arguments),Rn){if(Rn){var u=$l;Rn=!1,$l=null}else throw Error(g(198));Kl||(Kl=!0,Ta=u)}}function zs(e){var s=e,n=e;if(e.alternate)for(;s.return;)s=s.return;else{e=s;do s=e,(s.flags&4098)!==0&&(n=s.return),e=s.return;while(e)}return s.tag===3?n:null}function qr(e){if(e.tag===13){var s=e.memoizedState;if(s===null&&(e=e.alternate,e!==null&&(s=e.memoizedState)),s!==null)return s.dehydrated}return null}function io(e){if(zs(e)!==e)throw Error(g(188))}function mu(e){var s=e.alternate;if(!s){if(s=zs(e),s===null)throw Error(g(188));return s!==e?null:e}for(var n=e,l=s;;){var t=n.return;if(t===null)break;var a=t.alternate;if(a===null){if(l=t.return,l!==null){n=l;continue}break}if(t.child===a.child){for(a=t.child;a;){if(a===n)return io(t),e;if(a===l)return io(t),s;a=a.sibling}throw Error(g(188))}if(n.return!==l.return)n=t,l=a;else{for(var o=!1,r=t.child;r;){if(r===n){o=!0,n=t,l=a;break}if(r===l){o=!0,l=t,n=a;break}r=r.sibling}if(!o){for(r=a.child;r;){if(r===n){o=!0,n=a,l=t;break}if(r===l){o=!0,l=a,n=t;break}r=r.sibling}if(!o)throw Error(g(189))}}if(n.alternate!==l)throw Error(g(190))}if(n.tag!==3)throw Error(g(188));return n.stateNode.current===n?e:s}function Vr(e){return e=mu(e),e!==null?Qr(e):null}function Qr(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var s=Qr(e);if(s!==null)return s;e=e.sibling}return null}var Zr=Ce.unstable_scheduleCallback,uo=Ce.unstable_cancelCallback,gu=Ce.unstable_shouldYield,hu=Ce.unstable_requestPaint,V=Ce.unstable_now,Eu=Ce.unstable_getCurrentPriorityLevel,d0=Ce.unstable_ImmediatePriority,Yr=Ce.unstable_UserBlockingPriority,ql=Ce.unstable_NormalPriority,Cu=Ce.unstable_LowPriority,Gr=Ce.unstable_IdlePriority,vt=null,be=null;function Tu(e){if(be&&typeof be.onCommitFiberRoot=="function")try{be.onCommitFiberRoot(vt,e,void 0,(e.current.flags&128)===128)}catch{}}var Ue=Math.clz32?Math.clz32:wu,Bu=Math.log,ku=Math.LN2;function wu(e){return e>>>=0,e===0?32:31-(Bu(e)/ku|0)|0}var gl=64,hl=4194304;function xn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function Vl(e,s){var n=e.pendingLanes;if(n===0)return 0;var l=0,t=e.suspendedLanes,a=e.pingedLanes,o=n&268435455;if(o!==0){var r=o&~t;r!==0?l=xn(r):(a&=o,a!==0&&(l=xn(a)))}else o=n&~t,o!==0?l=xn(o):a!==0&&(l=xn(a));if(l===0)return 0;if(s!==0&&s!==l&&(s&t)===0&&(t=l&-l,a=s&-s,t>=a||t===16&&(a&4194240)!==0))return s;if((l&4)!==0&&(l|=n&16),s=e.entangledLanes,s!==0)for(e=e.entanglements,s&=l;0<s;)n=31-Ue(s),t=1<<n,l|=e[n],s&=~t;return l}function Du(e,s){switch(e){case 1:case 2:case 4:return s+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return s+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function xu(e,s){for(var n=e.suspendedLanes,l=e.pingedLanes,t=e.expirationTimes,a=e.pendingLanes;0<a;){var o=31-Ue(a),r=1<<o,p=t[o];p===-1?((r&n)===0||(r&l)!==0)&&(t[o]=Du(r,s)):p<=s&&(e.expiredLanes|=r),a&=~r}}function Ba(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function Xr(){var e=gl;return gl<<=1,(gl&4194240)===0&&(gl=64),e}function jt(e){for(var s=[],n=0;31>n;n++)s.push(e);return s}function ll(e,s,n){e.pendingLanes|=s,s!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,s=31-Ue(s),e[s]=n}function Au(e,s){var n=e.pendingLanes&~s;e.pendingLanes=s,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=s,e.mutableReadLanes&=s,e.entangledLanes&=s,s=e.entanglements;var l=e.eventTimes;for(e=e.expirationTimes;0<n;){var t=31-Ue(n),a=1<<t;s[t]=0,l[t]=-1,e[t]=-1,n&=~a}}function y0(e,s){var n=e.entangledLanes|=s;for(e=e.entanglements;n;){var l=31-Ue(n),t=1<<l;t&s|e[l]&s&&(e[l]|=s),n&=~t}}var M=0;function Jr(e){return e&=-e,1<e?4<e?(e&268435455)!==0?16:536870912:4:1}var ep,f0,sp,np,lp,ka=!1,El=[],us=null,cs=null,ds=null,bn=new Map,Hn=new Map,os=[],Su="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function co(e,s){switch(e){case"focusin":case"focusout":us=null;break;case"dragenter":case"dragleave":cs=null;break;case"mouseover":case"mouseout":ds=null;break;case"pointerover":case"pointerout":bn.delete(s.pointerId);break;case"gotpointercapture":case"lostpointercapture":Hn.delete(s.pointerId)}}function gn(e,s,n,l,t,a){return e===null||e.nativeEvent!==a?(e={blockedOn:s,domEventName:n,eventSystemFlags:l,nativeEvent:a,targetContainers:[t]},s!==null&&(s=al(s),s!==null&&f0(s)),e):(e.eventSystemFlags|=l,s=e.targetContainers,t!==null&&s.indexOf(t)===-1&&s.push(t),e)}function Ru(e,s,n,l,t){switch(s){case"focusin":return us=gn(us,e,s,n,l,t),!0;case"dragenter":return cs=gn(cs,e,s,n,l,t),!0;case"mouseover":return ds=gn(ds,e,s,n,l,t),!0;case"pointerover":var a=t.pointerId;return bn.set(a,gn(bn.get(a)||null,e,s,n,l,t)),!0;case"gotpointercapture":return a=t.pointerId,Hn.set(a,gn(Hn.get(a)||null,e,s,n,l,t)),!0}return!1}function tp(e){var s=As(e.target);if(s!==null){var n=zs(s);if(n!==null){if(s=n.tag,s===13){if(s=qr(n),s!==null){e.blockedOn=s,lp(e.priority,function(){sp(n)});return}}else if(s===3&&n.stateNode.current.memoizedState.isDehydrated){e.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}e.blockedOn=null}function _l(e){if(e.blockedOn!==null)return!1;for(var s=e.targetContainers;0<s.length;){var n=wa(e.domEventName,e.eventSystemFlags,s[0],e.nativeEvent);if(n===null){n=e.nativeEvent;var l=new n.constructor(n.type,n);ha=l,n.target.dispatchEvent(l),ha=null}else return s=al(n),s!==null&&f0(s),e.blockedOn=n,!1;s.shift()}return!0}function yo(e,s,n){_l(e)&&n.delete(s)}function Pu(){ka=!1,us!==null&&_l(us)&&(us=null),cs!==null&&_l(cs)&&(cs=null),ds!==null&&_l(ds)&&(ds=null),bn.forEach(yo),Hn.forEach(yo)}function hn(e,s){e.blockedOn===s&&(e.blockedOn=null,ka||(ka=!0,Ce.unstable_scheduleCallback(Ce.unstable_NormalPriority,Pu)))}function $n(e){function s(t){return hn(t,e)}if(0<El.length){hn(El[0],e);for(var n=1;n<El.length;n++){var l=El[n];l.blockedOn===e&&(l.blockedOn=null)}}for(us!==null&&hn(us,e),cs!==null&&hn(cs,e),ds!==null&&hn(ds,e),bn.forEach(s),Hn.forEach(s),n=0;n<os.length;n++)l=os[n],l.blockedOn===e&&(l.blockedOn=null);for(;0<os.length&&(n=os[0],n.blockedOn===null);)tp(n),n.blockedOn===null&&os.shift()}var ln=ss.ReactCurrentBatchConfig,Ql=!0;function Lu(e,s,n,l){var t=M,a=ln.transition;ln.transition=null;try{M=1,v0(e,s,n,l)}finally{M=t,ln.transition=a}}function Nu(e,s,n,l){var t=M,a=ln.transition;ln.transition=null;try{M=4,v0(e,s,n,l)}finally{M=t,ln.transition=a}}function v0(e,s,n,l){if(Ql){var t=wa(e,s,n,l);if(t===null)Yt(e,s,l,Zl,n),co(e,l);else if(Ru(t,e,s,n,l))l.stopPropagation();else if(co(e,l),s&4&&-1<Su.indexOf(e)){for(;t!==null;){var a=al(t);if(a!==null&&ep(a),a=wa(e,s,n,l),a===null&&Yt(e,s,l,Zl,n),a===t)break;t=a}t!==null&&l.stopPropagation()}else Yt(e,s,l,null,n)}}var Zl=null;function wa(e,s,n,l){if(Zl=null,e=c0(l),e=As(e),e!==null)if(s=zs(e),s===null)e=null;else if(n=s.tag,n===13){if(e=qr(s),e!==null)return e;e=null}else if(n===3){if(s.stateNode.current.memoizedState.isDehydrated)return s.tag===3?s.stateNode.containerInfo:null;e=null}else s!==e&&(e=null);return Zl=e,null}function ap(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Eu()){case d0:return 1;case Yr:return 4;case ql:case Cu:return 16;case Gr:return 536870912;default:return 16}default:return 16}}var ps=null,F0=null,Ml=null;function op(){if(Ml)return Ml;var e,s=F0,n=s.length,l,t="value"in ps?ps.value:ps.textContent,a=t.length;for(e=0;e<n&&s[e]===t[e];e++);var o=n-e;for(l=1;l<=o&&s[n-l]===t[a-l];l++);return Ml=t.slice(e,1<l?1-l:void 0)}function Ul(e){var s=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&s===13&&(e=13)):e=s,e===10&&(e=13),32<=e||e===13?e:0}function Cl(){return!0}function fo(){return!1}function Be(e){function s(n,l,t,a,o){this._reactName=n,this._targetInst=t,this.type=l,this.nativeEvent=a,this.target=o,this.currentTarget=null;for(var r in e)e.hasOwnProperty(r)&&(n=e[r],this[r]=n?n(a):a[r]);return this.isDefaultPrevented=(a.defaultPrevented!=null?a.defaultPrevented:a.returnValue===!1)?Cl:fo,this.isPropagationStopped=fo,this}return $(s.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=Cl)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=Cl)},persist:function(){},isPersistent:Cl}),s}var fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},m0=Be(fn),tl=$({},fn,{view:0,detail:0}),_u=Be(tl),Wt,bt,En,Ft=$({},tl,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:g0,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==En&&(En&&e.type==="mousemove"?(Wt=e.screenX-En.screenX,bt=e.screenY-En.screenY):bt=Wt=0,En=e),Wt)},movementY:function(e){return"movementY"in e?e.movementY:bt}}),vo=Be(Ft),Mu=$({},Ft,{dataTransfer:0}),Uu=Be(Mu),Iu=$({},tl,{relatedTarget:0}),Ht=Be(Iu),Ou=$({},fn,{animationName:0,elapsedTime:0,pseudoElement:0}),zu=Be(Ou),ju=$({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Wu=Be(ju),bu=$({},fn,{data:0}),Fo=Be(bu),Hu={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},$u={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ku={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function qu(e){var s=this.nativeEvent;return s.getModifierState?s.getModifierState(e):(e=Ku[e])?!!s[e]:!1}function g0(){return qu}var Vu=$({},tl,{key:function(e){if(e.key){var s=Hu[e.key]||e.key;if(s!=="Unidentified")return s}return e.type==="keypress"?(e=Ul(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?$u[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:g0,charCode:function(e){return e.type==="keypress"?Ul(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?Ul(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),Qu=Be(Vu),Zu=$({},Ft,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),mo=Be(Zu),Yu=$({},tl,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:g0}),Gu=Be(Yu),Xu=$({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0}),Ju=Be(Xu),ec=$({},Ft,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),sc=Be(ec),nc=[9,13,27,32],h0=Xe&&"CompositionEvent"in window,Pn=null;Xe&&"documentMode"in document&&(Pn=document.documentMode);var lc=Xe&&"TextEvent"in window&&!Pn,rp=Xe&&(!h0||Pn&&8<Pn&&11>=Pn),go=String.fromCharCode(32),ho=!1;function pp(e,s){switch(e){case"keyup":return nc.indexOf(s.keyCode)!==-1;case"keydown":return s.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function ip(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var $s=!1;function tc(e,s){switch(e){case"compositionend":return ip(s);case"keypress":return s.which!==32?null:(ho=!0,go);case"textInput":return e=s.data,e===go&&ho?null:e;default:return null}}function ac(e,s){if($s)return e==="compositionend"||!h0&&pp(e,s)?(e=op(),Ml=F0=ps=null,$s=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(s.ctrlKey||s.altKey||s.metaKey)||s.ctrlKey&&s.altKey){if(s.char&&1<s.char.length)return s.char;if(s.which)return String.fromCharCode(s.which)}return null;case"compositionend":return rp&&s.locale!=="ko"?null:s.data;default:return null}}var oc={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Eo(e){var s=e&&e.nodeName&&e.nodeName.toLowerCase();return s==="input"?!!oc[e.type]:s==="textarea"}function up(e,s,n,l){Wr(l),s=Yl(s,"onChange"),0<s.length&&(n=new m0("onChange","change",null,n,l),e.push({event:n,listeners:s}))}var Ln=null,Kn=null;function rc(e){Cp(e,0)}function mt(e){var s=Vs(e);if(_r(s))return e}function pc(e,s){if(e==="change")return s}var cp=!1;if(Xe){var $t;if(Xe){var Kt="oninput"in document;if(!Kt){var Co=document.createElement("div");Co.setAttribute("oninput","return;"),Kt=typeof Co.oninput=="function"}$t=Kt}else $t=!1;cp=$t&&(!document.documentMode||9<document.documentMode)}function To(){Ln&&(Ln.detachEvent("onpropertychange",dp),Kn=Ln=null)}function dp(e){if(e.propertyName==="value"&&mt(Kn)){var s=[];up(s,Kn,e,c0(e)),Kr(rc,s)}}function ic(e,s,n){e==="focusin"?(To(),Ln=s,Kn=n,Ln.attachEvent("onpropertychange",dp)):e==="focusout"&&To()}function uc(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return mt(Kn)}function cc(e,s){if(e==="click")return mt(s)}function dc(e,s){if(e==="input"||e==="change")return mt(s)}function yc(e,s){return e===s&&(e!==0||1/e===1/s)||e!==e&&s!==s}var Ie=typeof Object.is=="function"?Object.is:yc;function qn(e,s){if(Ie(e,s))return!0;if(typeof e!="object"||e===null||typeof s!="object"||s===null)return!1;var n=Object.keys(e),l=Object.keys(s);if(n.length!==l.length)return!1;for(l=0;l<n.length;l++){var t=n[l];if(!ra.call(s,t)||!Ie(e[t],s[t]))return!1}return!0}function Bo(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ko(e,s){var n=Bo(e);e=0;for(var l;n;){if(n.nodeType===3){if(l=e+n.textContent.length,e<=s&&l>=s)return{node:n,offset:s-e};e=l}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=Bo(n)}}function yp(e,s){return e&&s?e===s?!0:e&&e.nodeType===3?!1:s&&s.nodeType===3?yp(e,s.parentNode):"contains"in e?e.contains(s):e.compareDocumentPosition?!!(e.compareDocumentPosition(s)&16):!1:!1}function fp(){for(var e=window,s=Hl();s instanceof e.HTMLIFrameElement;){try{var n=typeof s.contentWindow.location.href=="string"}catch{n=!1}if(n)e=s.contentWindow;else break;s=Hl(e.document)}return s}function E0(e){var s=e&&e.nodeName&&e.nodeName.toLowerCase();return s&&(s==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||s==="textarea"||e.contentEditable==="true")}function fc(e){var s=fp(),n=e.focusedElem,l=e.selectionRange;if(s!==n&&n&&n.ownerDocument&&yp(n.ownerDocument.documentElement,n)){if(l!==null&&E0(n)){if(s=l.start,e=l.end,e===void 0&&(e=s),"selectionStart"in n)n.selectionStart=s,n.selectionEnd=Math.min(e,n.value.length);else if(e=(s=n.ownerDocument||document)&&s.defaultView||window,e.getSelection){e=e.getSelection();var t=n.textContent.length,a=Math.min(l.start,t);l=l.end===void 0?a:Math.min(l.end,t),!e.extend&&a>l&&(t=l,l=a,a=t),t=ko(n,a);var o=ko(n,l);t&&o&&(e.rangeCount!==1||e.anchorNode!==t.node||e.anchorOffset!==t.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&(s=s.createRange(),s.setStart(t.node,t.offset),e.removeAllRanges(),a>l?(e.addRange(s),e.extend(o.node,o.offset)):(s.setEnd(o.node,o.offset),e.addRange(s)))}}for(s=[],e=n;e=e.parentNode;)e.nodeType===1&&s.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<s.length;n++)e=s[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var vc=Xe&&"documentMode"in document&&11>=document.documentMode,Ks=null,Da=null,Nn=null,xa=!1;function wo(e,s,n){var l=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;xa||Ks==null||Ks!==Hl(l)||(l=Ks,"selectionStart"in l&&E0(l)?l={start:l.selectionStart,end:l.selectionEnd}:(l=(l.ownerDocument&&l.ownerDocument.defaultView||window).getSelection(),l={anchorNode:l.anchorNode,anchorOffset:l.anchorOffset,focusNode:l.focusNode,focusOffset:l.focusOffset}),Nn&&qn(Nn,l)||(Nn=l,l=Yl(Da,"onSelect"),0<l.length&&(s=new m0("onSelect","select",null,s,n),e.push({event:s,listeners:l}),s.target=Ks)))}function Tl(e,s){var n={};return n[e.toLowerCase()]=s.toLowerCase(),n["Webkit"+e]="webkit"+s,n["Moz"+e]="moz"+s,n}var qs={animationend:Tl("Animation","AnimationEnd"),animationiteration:Tl("Animation","AnimationIteration"),animationstart:Tl("Animation","AnimationStart"),transitionend:Tl("Transition","TransitionEnd")},qt={},vp={};Xe&&(vp=document.createElement("div").style,"AnimationEvent"in window||(delete qs.animationend.animation,delete qs.animationiteration.animation,delete qs.animationstart.animation),"TransitionEvent"in window||delete qs.transitionend.transition);function gt(e){if(qt[e])return qt[e];if(!qs[e])return e;var s=qs[e],n;for(n in s)if(s.hasOwnProperty(n)&&n in vp)return qt[e]=s[n];return e}var Fp=gt("animationend"),mp=gt("animationiteration"),gp=gt("animationstart"),hp=gt("transitionend"),Ep=new Map,Do="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Cs(e,s){Ep.set(e,s),Os(s,[e])}for(var Vt=0;Vt<Do.length;Vt++){var Qt=Do[Vt],Fc=Qt.toLowerCase(),mc=Qt[0].toUpperCase()+Qt.slice(1);Cs(Fc,"on"+mc)}Cs(Fp,"onAnimationEnd");Cs(mp,"onAnimationIteration");Cs(gp,"onAnimationStart");Cs("dblclick","onDoubleClick");Cs("focusin","onFocus");Cs("focusout","onBlur");Cs(hp,"onTransitionEnd");on("onMouseEnter",["mouseout","mouseover"]);on("onMouseLeave",["mouseout","mouseover"]);on("onPointerEnter",["pointerout","pointerover"]);on("onPointerLeave",["pointerout","pointerover"]);Os("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Os("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Os("onBeforeInput",["compositionend","keypress","textInput","paste"]);Os("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Os("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Os("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var An="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),gc=new Set("cancel close invalid load scroll toggle".split(" ").concat(An));function xo(e,s,n){var l=e.type||"unknown-event";e.currentTarget=n,Fu(l,s,void 0,e),e.currentTarget=null}function Cp(e,s){s=(s&4)!==0;for(var n=0;n<e.length;n++){var l=e[n],t=l.event;l=l.listeners;e:{var a=void 0;if(s)for(var o=l.length-1;0<=o;o--){var r=l[o],p=r.instance,u=r.currentTarget;if(r=r.listener,p!==a&&t.isPropagationStopped())break e;xo(t,r,u),a=p}else for(o=0;o<l.length;o++){if(r=l[o],p=r.instance,u=r.currentTarget,r=r.listener,p!==a&&t.isPropagationStopped())break e;xo(t,r,u),a=p}}}if(Kl)throw e=Ta,Kl=!1,Ta=null,e}function z(e,s){var n=s[La];n===void 0&&(n=s[La]=new Set);var l=e+"__bubble";n.has(l)||(Tp(s,e,2,!1),n.add(l))}function Zt(e,s,n){var l=0;s&&(l|=4),Tp(n,e,l,s)}var Bl="_reactListening"+Math.random().toString(36).slice(2);function Vn(e){if(!e[Bl]){e[Bl]=!0,Sr.forEach(function(n){n!=="selectionchange"&&(gc.has(n)||Zt(n,!1,e),Zt(n,!0,e))});var s=e.nodeType===9?e:e.ownerDocument;s===null||s[Bl]||(s[Bl]=!0,Zt("selectionchange",!1,s))}}function Tp(e,s,n,l){switch(ap(s)){case 1:var t=Lu;break;case 4:t=Nu;break;default:t=v0}n=t.bind(null,s,n,e),t=void 0,!Ca||s!=="touchstart"&&s!=="touchmove"&&s!=="wheel"||(t=!0),l?t!==void 0?e.addEventListener(s,n,{capture:!0,passive:t}):e.addEventListener(s,n,!0):t!==void 0?e.addEventListener(s,n,{passive:t}):e.addEventListener(s,n,!1)}function Yt(e,s,n,l,t){var a=l;if((s&1)===0&&(s&2)===0&&l!==null)e:for(;;){if(l===null)return;var o=l.tag;if(o===3||o===4){var r=l.stateNode.containerInfo;if(r===t||r.nodeType===8&&r.parentNode===t)break;if(o===4)for(o=l.return;o!==null;){var p=o.tag;if((p===3||p===4)&&(p=o.stateNode.containerInfo,p===t||p.nodeType===8&&p.parentNode===t))return;o=o.return}for(;r!==null;){if(o=As(r),o===null)return;if(p=o.tag,p===5||p===6){l=a=o;continue e}r=r.parentNode}}l=l.return}Kr(function(){var u=a,f=c0(n),v=[];e:{var y=Ep.get(e);if(y!==void 0){var E=m0,h=e;switch(e){case"keypress":if(Ul(n)===0)break e;case"keydown":case"keyup":E=Qu;break;case"focusin":h="focus",E=Ht;break;case"focusout":h="blur",E=Ht;break;case"beforeblur":case"afterblur":E=Ht;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":E=vo;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":E=Uu;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":E=Gu;break;case Fp:case mp:case gp:E=zu;break;case hp:E=Ju;break;case"scroll":E=_u;break;case"wheel":E=sc;break;case"copy":case"cut":case"paste":E=Wu;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":E=mo}var D=(s&4)!==0,U=!D&&e==="scroll",c=D?y!==null?y+"Capture":null:y;D=[];for(var i=u,d;i!==null;){d=i;var F=d.stateNode;if(d.tag===5&&F!==null&&(d=F,c!==null&&(F=Wn(i,c),F!=null&&D.push(Qn(i,F,d)))),U)break;i=i.return}0<D.length&&(y=new E(y,h,null,n,f),v.push({event:y,listeners:D}))}}if((s&7)===0){e:{if(y=e==="mouseover"||e==="pointerover",E=e==="mouseout"||e==="pointerout",y&&n!==ha&&(h=n.relatedTarget||n.fromElement)&&(As(h)||h[Je]))break e;if((E||y)&&(y=f.window===f?f:(y=f.ownerDocument)?y.defaultView||y.parentWindow:window,E?(h=n.relatedTarget||n.toElement,E=u,h=h?As(h):null,h!==null&&(U=zs(h),h!==U||h.tag!==5&&h.tag!==6)&&(h=null)):(E=null,h=u),E!==h)){if(D=vo,F="onMouseLeave",c="onMouseEnter",i="mouse",(e==="pointerout"||e==="pointerover")&&(D=mo,F="onPointerLeave",c="onPointerEnter",i="pointer"),U=E==null?y:Vs(E),d=h==null?y:Vs(h),y=new D(F,i+"leave",E,n,f),y.target=U,y.relatedTarget=d,F=null,As(f)===u&&(D=new D(c,i+"enter",h,n,f),D.target=d,D.relatedTarget=U,F=D),U=F,E&&h)s:{for(D=E,c=h,i=0,d=D;d;d=js(d))i++;for(d=0,F=c;F;F=js(F))d++;for(;0<i-d;)D=js(D),i--;for(;0<d-i;)c=js(c),d--;for(;i--;){if(D===c||c!==null&&D===c.alternate)break s;D=js(D),c=js(c)}D=null}else D=null;E!==null&&Ao(v,y,E,D,!1),h!==null&&U!==null&&Ao(v,U,h,D,!0)}}e:{if(y=u?Vs(u):window,E=y.nodeName&&y.nodeName.toLowerCase(),E==="select"||E==="input"&&y.type==="file")var C=pc;else if(Eo(y))if(cp)C=dc;else{C=uc;var k=ic}else(E=y.nodeName)&&E.toLowerCase()==="input"&&(y.type==="checkbox"||y.type==="radio")&&(C=cc);if(C&&(C=C(e,u))){up(v,C,n,f);break e}k&&k(e,y,u),e==="focusout"&&(k=y._wrapperState)&&k.controlled&&y.type==="number"&&fa(y,"number",y.value)}switch(k=u?Vs(u):window,e){case"focusin":(Eo(k)||k.contentEditable==="true")&&(Ks=k,Da=u,Nn=null);break;case"focusout":Nn=Da=Ks=null;break;case"mousedown":xa=!0;break;case"contextmenu":case"mouseup":case"dragend":xa=!1,wo(v,n,f);break;case"selectionchange":if(vc)break;case"keydown":case"keyup":wo(v,n,f)}var w;if(h0)e:{switch(e){case"compositionstart":var m="onCompositionStart";break e;case"compositionend":m="onCompositionEnd";break e;case"compositionupdate":m="onCompositionUpdate";break e}m=void 0}else $s?pp(e,n)&&(m="onCompositionEnd"):e==="keydown"&&n.keyCode===229&&(m="onCompositionStart");m&&(rp&&n.locale!=="ko"&&($s||m!=="onCompositionStart"?m==="onCompositionEnd"&&$s&&(w=op()):(ps=f,F0="value"in ps?ps.value:ps.textContent,$s=!0)),k=Yl(u,m),0<k.length&&(m=new Fo(m,e,null,n,f),v.push({event:m,listeners:k}),w?m.data=w:(w=ip(n),w!==null&&(m.data=w)))),(w=lc?tc(e,n):ac(e,n))&&(u=Yl(u,"onBeforeInput"),0<u.length&&(f=new Fo("onBeforeInput","beforeinput",null,n,f),v.push({event:f,listeners:u}),f.data=w))}Cp(v,s)})}function Qn(e,s,n){return{instance:e,listener:s,currentTarget:n}}function Yl(e,s){for(var n=s+"Capture",l=[];e!==null;){var t=e,a=t.stateNode;t.tag===5&&a!==null&&(t=a,a=Wn(e,n),a!=null&&l.unshift(Qn(e,a,t)),a=Wn(e,s),a!=null&&l.push(Qn(e,a,t))),e=e.return}return l}function js(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function Ao(e,s,n,l,t){for(var a=s._reactName,o=[];n!==null&&n!==l;){var r=n,p=r.alternate,u=r.stateNode;if(p!==null&&p===l)break;r.tag===5&&u!==null&&(r=u,t?(p=Wn(n,a),p!=null&&o.unshift(Qn(n,p,r))):t||(p=Wn(n,a),p!=null&&o.push(Qn(n,p,r)))),n=n.return}o.length!==0&&e.push({event:s,listeners:o})}var hc=/\r\n?/g,Ec=/\u0000|\uFFFD/g;function So(e){return(typeof e=="string"?e:""+e).replace(hc,`
`).replace(Ec,"")}function kl(e,s,n){if(s=So(s),So(e)!==s&&n)throw Error(g(425))}function Gl(){}var Aa=null,Sa=null;function Ra(e,s){return e==="textarea"||e==="noscript"||typeof s.children=="string"||typeof s.children=="number"||typeof s.dangerouslySetInnerHTML=="object"&&s.dangerouslySetInnerHTML!==null&&s.dangerouslySetInnerHTML.__html!=null}var Pa=typeof setTimeout=="function"?setTimeout:void 0,Cc=typeof clearTimeout=="function"?clearTimeout:void 0,Ro=typeof Promise=="function"?Promise:void 0,Tc=typeof queueMicrotask=="function"?queueMicrotask:typeof Ro!="undefined"?function(e){return Ro.resolve(null).then(e).catch(Bc)}:Pa;function Bc(e){setTimeout(function(){throw e})}function Gt(e,s){var n=s,l=0;do{var t=n.nextSibling;if(e.removeChild(n),t&&t.nodeType===8)if(n=t.data,n==="/$"){if(l===0){e.removeChild(t),$n(s);return}l--}else n!=="$"&&n!=="$?"&&n!=="$!"||l++;n=t}while(n);$n(s)}function Qe(e){for(;e!=null;e=e.nextSibling){var s=e.nodeType;if(s===1||s===3)break;if(s===8){if(s=e.data,s==="$"||s==="$!"||s==="$?")break;if(s==="/$")return null}}return e}function Po(e){e=e.previousSibling;for(var s=0;e;){if(e.nodeType===8){var n=e.data;if(n==="$"||n==="$!"||n==="$?"){if(s===0)return e;s--}else n==="/$"&&s++}e=e.previousSibling}return null}var vn=Math.random().toString(36).slice(2),We="__reactFiber$"+vn,Zn="__reactProps$"+vn,Je="__reactContainer$"+vn,La="__reactEvents$"+vn,kc="__reactListeners$"+vn,wc="__reactHandles$"+vn;function As(e){var s=e[We];if(s)return s;for(var n=e.parentNode;n;){if(s=n[Je]||n[We]){if(n=s.alternate,s.child!==null||n!==null&&n.child!==null)for(e=Po(e);e!==null;){if(n=e[We])return n;e=Po(e)}return s}e=n,n=e.parentNode}return null}function al(e){return e=e[We]||e[Je],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function Vs(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(g(33))}function ht(e){return e[Zn]||null}var Na=[],Qs=-1;function Ts(e){return{current:e}}function j(e){0>Qs||(e.current=Na[Qs],Na[Qs]=null,Qs--)}function I(e,s){Qs++,Na[Qs]=e.current,e.current=s}var gs={},oe=Ts(gs),Fe=Ts(!1),Ns=gs;function rn(e,s){var n=e.type.contextTypes;if(!n)return gs;var l=e.stateNode;if(l&&l.__reactInternalMemoizedUnmaskedChildContext===s)return l.__reactInternalMemoizedMaskedChildContext;var t={},a;for(a in n)t[a]=s[a];return l&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=t),t}function me(e){return e=e.childContextTypes,e!=null}function Xl(){j(Fe),j(oe)}function Lo(e,s,n){if(oe.current!==gs)throw Error(g(168));I(oe,s),I(Fe,n)}function Bp(e,s,n){var l=e.stateNode;if(s=s.childContextTypes,typeof l.getChildContext!="function")return n;l=l.getChildContext();for(var t in l)if(!(t in s))throw Error(g(108,iu(e)||"Unknown",t));return $({},n,l)}function Jl(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||gs,Ns=oe.current,I(oe,e),I(Fe,Fe.current),!0}function No(e,s,n){var l=e.stateNode;if(!l)throw Error(g(169));n?(e=Bp(e,s,Ns),l.__reactInternalMemoizedMergedChildContext=e,j(Fe),j(oe),I(oe,e)):j(Fe),I(Fe,n)}var qe=null,Et=!1,Xt=!1;function kp(e){qe===null?qe=[e]:qe.push(e)}function Dc(e){Et=!0,kp(e)}function Bs(){if(!Xt&&qe!==null){Xt=!0;var e=0,s=M;try{var n=qe;for(M=1;e<n.length;e++){var l=n[e];do l=l(!0);while(l!==null)}qe=null,Et=!1}catch(t){throw qe!==null&&(qe=qe.slice(e+1)),Zr(d0,Bs),t}finally{M=s,Xt=!1}}return null}var xc=ss.ReactCurrentBatchConfig;function Le(e,s){if(e&&e.defaultProps){s=$({},s),e=e.defaultProps;for(var n in e)s[n]===void 0&&(s[n]=e[n]);return s}return s}var et=Ts(null),st=null,Zs=null,C0=null;function T0(){C0=Zs=st=null}function B0(e){var s=et.current;j(et),e._currentValue=s}function _a(e,s,n){for(;e!==null;){var l=e.alternate;if((e.childLanes&s)!==s?(e.childLanes|=s,l!==null&&(l.childLanes|=s)):l!==null&&(l.childLanes&s)!==s&&(l.childLanes|=s),e===n)break;e=e.return}}function tn(e,s){st=e,C0=Zs=null,e=e.dependencies,e!==null&&e.firstContext!==null&&((e.lanes&s)!==0&&(ve=!0),e.firstContext=null)}function Se(e){var s=e._currentValue;if(C0!==e)if(e={context:e,memoizedValue:s,next:null},Zs===null){if(st===null)throw Error(g(308));Zs=e,st.dependencies={lanes:0,firstContext:e}}else Zs=Zs.next=e;return s}var Me=null,as=!1;function k0(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function wp(e,s){e=e.updateQueue,s.updateQueue===e&&(s.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ge(e,s){return{eventTime:e,lane:s,tag:0,payload:null,callback:null,next:null}}function ys(e,s){var n=e.updateQueue;n!==null&&(n=n.shared,fi(e)?(e=n.interleaved,e===null?(s.next=s,Me===null?Me=[n]:Me.push(n)):(s.next=e.next,e.next=s),n.interleaved=s):(e=n.pending,e===null?s.next=s:(s.next=e.next,e.next=s),n.pending=s))}function Il(e,s,n){if(s=s.updateQueue,s!==null&&(s=s.shared,(n&4194240)!==0)){var l=s.lanes;l&=e.pendingLanes,n|=l,s.lanes=n,y0(e,n)}}function _o(e,s){var n=e.updateQueue,l=e.alternate;if(l!==null&&(l=l.updateQueue,n===l)){var t=null,a=null;if(n=n.firstBaseUpdate,n!==null){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};a===null?t=a=o:a=a.next=o,n=n.next}while(n!==null);a===null?t=a=s:a=a.next=s}else t=a=s;n={baseState:l.baseState,firstBaseUpdate:t,lastBaseUpdate:a,shared:l.shared,effects:l.effects},e.updateQueue=n;return}e=n.lastBaseUpdate,e===null?n.firstBaseUpdate=s:e.next=s,n.lastBaseUpdate=s}function nt(e,s,n,l){var t=e.updateQueue;as=!1;var a=t.firstBaseUpdate,o=t.lastBaseUpdate,r=t.shared.pending;if(r!==null){t.shared.pending=null;var p=r,u=p.next;p.next=null,o===null?a=u:o.next=u,o=p;var f=e.alternate;f!==null&&(f=f.updateQueue,r=f.lastBaseUpdate,r!==o&&(r===null?f.firstBaseUpdate=u:r.next=u,f.lastBaseUpdate=p))}if(a!==null){var v=t.baseState;o=0,f=u=p=null,r=a;do{var y=r.lane,E=r.eventTime;if((l&y)===y){f!==null&&(f=f.next={eventTime:E,lane:0,tag:r.tag,payload:r.payload,callback:r.callback,next:null});e:{var h=e,D=r;switch(y=s,E=n,D.tag){case 1:if(h=D.payload,typeof h=="function"){v=h.call(E,v,y);break e}v=h;break e;case 3:h.flags=h.flags&-65537|128;case 0:if(h=D.payload,y=typeof h=="function"?h.call(E,v,y):h,y==null)break e;v=$({},v,y);break e;case 2:as=!0}}r.callback!==null&&r.lane!==0&&(e.flags|=64,y=t.effects,y===null?t.effects=[r]:y.push(r))}else E={eventTime:E,lane:y,tag:r.tag,payload:r.payload,callback:r.callback,next:null},f===null?(u=f=E,p=v):f=f.next=E,o|=y;if(r=r.next,r===null){if(r=t.shared.pending,r===null)break;y=r,r=y.next,y.next=null,t.lastBaseUpdate=y,t.shared.pending=null}}while(1);if(f===null&&(p=v),t.baseState=p,t.firstBaseUpdate=u,t.lastBaseUpdate=f,s=t.shared.interleaved,s!==null){t=s;do o|=t.lane,t=t.next;while(t!==s)}else a===null&&(t.shared.lanes=0);Us|=o,e.lanes=o,e.memoizedState=v}}function Mo(e,s,n){if(e=s.effects,s.effects=null,e!==null)for(s=0;s<e.length;s++){var l=e[s],t=l.callback;if(t!==null){if(l.callback=null,l=n,typeof t!="function")throw Error(g(191,t));t.call(l)}}}var Dp=new Ar.Component().refs;function Ma(e,s,n,l){s=e.memoizedState,n=n(l,s),n=n==null?s:$({},s,n),e.memoizedState=n,e.lanes===0&&(e.updateQueue.baseState=n)}var Ct={isMounted:function(e){return(e=e._reactInternals)?zs(e)===e:!1},enqueueSetState:function(e,s,n){e=e._reactInternals;var l=ue(),t=vs(e),a=Ge(l,t);a.payload=s,n!=null&&(a.callback=n),ys(e,a),s=Ae(e,t,l),s!==null&&Il(s,e,t)},enqueueReplaceState:function(e,s,n){e=e._reactInternals;var l=ue(),t=vs(e),a=Ge(l,t);a.tag=1,a.payload=s,n!=null&&(a.callback=n),ys(e,a),s=Ae(e,t,l),s!==null&&Il(s,e,t)},enqueueForceUpdate:function(e,s){e=e._reactInternals;var n=ue(),l=vs(e),t=Ge(n,l);t.tag=2,s!=null&&(t.callback=s),ys(e,t),s=Ae(e,l,n),s!==null&&Il(s,e,l)}};function Uo(e,s,n,l,t,a,o){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(l,a,o):s.prototype&&s.prototype.isPureReactComponent?!qn(n,l)||!qn(t,a):!0}function xp(e,s,n){var l=!1,t=gs,a=s.contextType;return typeof a=="object"&&a!==null?a=Se(a):(t=me(s)?Ns:oe.current,l=s.contextTypes,a=(l=l!=null)?rn(e,t):gs),s=new s(n,a),e.memoizedState=s.state!==null&&s.state!==void 0?s.state:null,s.updater=Ct,e.stateNode=s,s._reactInternals=e,l&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),s}function Io(e,s,n,l){e=s.state,typeof s.componentWillReceiveProps=="function"&&s.componentWillReceiveProps(n,l),typeof s.UNSAFE_componentWillReceiveProps=="function"&&s.UNSAFE_componentWillReceiveProps(n,l),s.state!==e&&Ct.enqueueReplaceState(s,s.state,null)}function Ua(e,s,n,l){var t=e.stateNode;t.props=n,t.state=e.memoizedState,t.refs=Dp,k0(e);var a=s.contextType;typeof a=="object"&&a!==null?t.context=Se(a):(a=me(s)?Ns:oe.current,t.context=rn(e,a)),t.state=e.memoizedState,a=s.getDerivedStateFromProps,typeof a=="function"&&(Ma(e,s,a,n),t.state=e.memoizedState),typeof s.getDerivedStateFromProps=="function"||typeof t.getSnapshotBeforeUpdate=="function"||typeof t.UNSAFE_componentWillMount!="function"&&typeof t.componentWillMount!="function"||(s=t.state,typeof t.componentWillMount=="function"&&t.componentWillMount(),typeof t.UNSAFE_componentWillMount=="function"&&t.UNSAFE_componentWillMount(),s!==t.state&&Ct.enqueueReplaceState(t,t.state,null),nt(e,n,t,l),t.state=e.memoizedState),typeof t.componentDidMount=="function"&&(e.flags|=4194308)}var Ys=[],Gs=0,lt=null,tt=0,ke=[],we=0,_s=null,Ze=1,Ye="";function Ds(e,s){Ys[Gs++]=tt,Ys[Gs++]=lt,lt=e,tt=s}function Ap(e,s,n){ke[we++]=Ze,ke[we++]=Ye,ke[we++]=_s,_s=e;var l=Ze;e=Ye;var t=32-Ue(l)-1;l&=~(1<<t),n+=1;var a=32-Ue(s)+t;if(30<a){var o=t-t%5;a=(l&(1<<o)-1).toString(32),l>>=o,t-=o,Ze=1<<32-Ue(s)+t|n<<t|l,Ye=a+e}else Ze=1<<a|n<<t|l,Ye=e}function w0(e){e.return!==null&&(Ds(e,1),Ap(e,1,0))}function D0(e){for(;e===lt;)lt=Ys[--Gs],Ys[Gs]=null,tt=Ys[--Gs],Ys[Gs]=null;for(;e===_s;)_s=ke[--we],ke[we]=null,Ye=ke[--we],ke[we]=null,Ze=ke[--we],ke[we]=null}var Ee=null,fe=null,W=!1,_e=null;function Sp(e,s){var n=De(5,null,null,0);n.elementType="DELETED",n.stateNode=s,n.return=e,s=e.deletions,s===null?(e.deletions=[n],e.flags|=16):s.push(n)}function Oo(e,s){switch(e.tag){case 5:var n=e.type;return s=s.nodeType!==1||n.toLowerCase()!==s.nodeName.toLowerCase()?null:s,s!==null?(e.stateNode=s,Ee=e,fe=Qe(s.firstChild),!0):!1;case 6:return s=e.pendingProps===""||s.nodeType!==3?null:s,s!==null?(e.stateNode=s,Ee=e,fe=null,!0):!1;case 13:return s=s.nodeType!==8?null:s,s!==null?(n=_s!==null?{id:Ze,overflow:Ye}:null,e.memoizedState={dehydrated:s,treeContext:n,retryLane:1073741824},n=De(18,null,null,0),n.stateNode=s,n.return=e,e.child=n,Ee=e,fe=null,!0):!1;default:return!1}}function Ia(e){return(e.mode&1)!==0&&(e.flags&128)===0}function Oa(e){if(W){var s=fe;if(s){var n=s;if(!Oo(e,s)){if(Ia(e))throw Error(g(418));s=Qe(n.nextSibling);var l=Ee;s&&Oo(e,s)?Sp(l,n):(e.flags=e.flags&-4097|2,W=!1,Ee=e)}}else{if(Ia(e))throw Error(g(418));e.flags=e.flags&-4097|2,W=!1,Ee=e}}}function zo(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;Ee=e}function Cn(e){if(e!==Ee)return!1;if(!W)return zo(e),W=!0,!1;var s;if((s=e.tag!==3)&&!(s=e.tag!==5)&&(s=e.type,s=s!=="head"&&s!=="body"&&!Ra(e.type,e.memoizedProps)),s&&(s=fe)){if(Ia(e)){for(e=fe;e;)e=Qe(e.nextSibling);throw Error(g(418))}for(;s;)Sp(e,s),s=Qe(s.nextSibling)}if(zo(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(g(317));e:{for(e=e.nextSibling,s=0;e;){if(e.nodeType===8){var n=e.data;if(n==="/$"){if(s===0){fe=Qe(e.nextSibling);break e}s--}else n!=="$"&&n!=="$!"&&n!=="$?"||s++}e=e.nextSibling}fe=null}}else fe=Ee?Qe(e.stateNode.nextSibling):null;return!0}function pn(){fe=Ee=null,W=!1}function x0(e){_e===null?_e=[e]:_e.push(e)}function Tn(e,s,n){if(e=n.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(g(309));var l=n.stateNode}if(!l)throw Error(g(147,e));var t=l,a=""+e;return s!==null&&s.ref!==null&&typeof s.ref=="function"&&s.ref._stringRef===a?s.ref:(s=function(o){var r=t.refs;r===Dp&&(r=t.refs={}),o===null?delete r[a]:r[a]=o},s._stringRef=a,s)}if(typeof e!="string")throw Error(g(284));if(!n._owner)throw Error(g(290,e))}return e}function wl(e,s){throw e=Object.prototype.toString.call(s),Error(g(31,e==="[object Object]"?"object with keys {"+Object.keys(s).join(", ")+"}":e))}function jo(e){var s=e._init;return s(e._payload)}function Rp(e){function s(c,i){if(e){var d=c.deletions;d===null?(c.deletions=[i],c.flags|=16):d.push(i)}}function n(c,i){if(!e)return null;for(;i!==null;)s(c,i),i=i.sibling;return null}function l(c,i){for(c=new Map;i!==null;)i.key!==null?c.set(i.key,i):c.set(i.index,i),i=i.sibling;return c}function t(c,i){return c=hs(c,i),c.index=0,c.sibling=null,c}function a(c,i,d){return c.index=d,e?(d=c.alternate,d!==null?(d=d.index,d<i?(c.flags|=2,i):d):(c.flags|=2,i)):(c.flags|=1048576,i)}function o(c){return e&&c.alternate===null&&(c.flags|=2),c}function r(c,i,d,F){return i===null||i.tag!==6?(i=ta(d,c.mode,F),i.return=c,i):(i=t(i,d),i.return=c,i)}function p(c,i,d,F){var C=d.type;return C===Hs?f(c,i,d.props.children,F,d.key):i!==null&&(i.elementType===C||typeof C=="object"&&C!==null&&C.$$typeof===ts&&jo(C)===i.type)?(F=t(i,d.props),F.ref=Tn(c,i,d),F.return=c,F):(F=bl(d.type,d.key,d.props,null,c.mode,F),F.ref=Tn(c,i,d),F.return=c,F)}function u(c,i,d,F){return i===null||i.tag!==4||i.stateNode.containerInfo!==d.containerInfo||i.stateNode.implementation!==d.implementation?(i=aa(d,c.mode,F),i.return=c,i):(i=t(i,d.children||[]),i.return=c,i)}function f(c,i,d,F,C){return i===null||i.tag!==7?(i=Ls(d,c.mode,F,C),i.return=c,i):(i=t(i,d),i.return=c,i)}function v(c,i,d){if(typeof i=="string"&&i!==""||typeof i=="number")return i=ta(""+i,c.mode,d),i.return=c,i;if(typeof i=="object"&&i!==null){switch(i.$$typeof){case vl:return d=bl(i.type,i.key,i.props,null,c.mode,d),d.ref=Tn(c,null,i),d.return=c,d;case bs:return i=aa(i,c.mode,d),i.return=c,i;case ts:var F=i._init;return v(c,F(i._payload),d)}if(Dn(i)||Fn(i))return i=Ls(i,c.mode,d,null),i.return=c,i;wl(c,i)}return null}function y(c,i,d,F){var C=i!==null?i.key:null;if(typeof d=="string"&&d!==""||typeof d=="number")return C!==null?null:r(c,i,""+d,F);if(typeof d=="object"&&d!==null){switch(d.$$typeof){case vl:return d.key===C?p(c,i,d,F):null;case bs:return d.key===C?u(c,i,d,F):null;case ts:return C=d._init,y(c,i,C(d._payload),F)}if(Dn(d)||Fn(d))return C!==null?null:f(c,i,d,F,null);wl(c,d)}return null}function E(c,i,d,F,C){if(typeof F=="string"&&F!==""||typeof F=="number")return c=c.get(d)||null,r(i,c,""+F,C);if(typeof F=="object"&&F!==null){switch(F.$$typeof){case vl:return c=c.get(F.key===null?d:F.key)||null,p(i,c,F,C);case bs:return c=c.get(F.key===null?d:F.key)||null,u(i,c,F,C);case ts:var k=F._init;return E(c,i,d,k(F._payload),C)}if(Dn(F)||Fn(F))return c=c.get(d)||null,f(i,c,F,C,null);wl(i,F)}return null}function h(c,i,d,F){for(var C=null,k=null,w=i,m=i=0,A=null;w!==null&&m<d.length;m++){w.index>m?(A=w,w=null):A=w.sibling;var x=y(c,w,d[m],F);if(x===null){w===null&&(w=A);break}e&&w&&x.alternate===null&&s(c,w),i=a(x,i,m),k===null?C=x:k.sibling=x,k=x,w=A}if(m===d.length)return n(c,w),W&&Ds(c,m),C;if(w===null){for(;m<d.length;m++)w=v(c,d[m],F),w!==null&&(i=a(w,i,m),k===null?C=w:k.sibling=w,k=w);return W&&Ds(c,m),C}for(w=l(c,w);m<d.length;m++)A=E(w,c,m,d[m],F),A!==null&&(e&&A.alternate!==null&&w.delete(A.key===null?m:A.key),i=a(A,i,m),k===null?C=A:k.sibling=A,k=A);return e&&w.forEach(function(O){return s(c,O)}),W&&Ds(c,m),C}function D(c,i,d,F){var C=Fn(d);if(typeof C!="function")throw Error(g(150));if(d=C.call(d),d==null)throw Error(g(151));for(var k=C=null,w=i,m=i=0,A=null,x=d.next();w!==null&&!x.done;m++,x=d.next()){w.index>m?(A=w,w=null):A=w.sibling;var O=y(c,w,x.value,F);if(O===null){w===null&&(w=A);break}e&&w&&O.alternate===null&&s(c,w),i=a(O,i,m),k===null?C=O:k.sibling=O,k=O,w=A}if(x.done)return n(c,w),W&&Ds(c,m),C;if(w===null){for(;!x.done;m++,x=d.next())x=v(c,x.value,F),x!==null&&(i=a(x,i,m),k===null?C=x:k.sibling=x,k=x);return W&&Ds(c,m),C}for(w=l(c,w);!x.done;m++,x=d.next())x=E(w,c,m,x.value,F),x!==null&&(e&&x.alternate!==null&&w.delete(x.key===null?m:x.key),i=a(x,i,m),k===null?C=x:k.sibling=x,k=x);return e&&w.forEach(function(re){return s(c,re)}),W&&Ds(c,m),C}function U(c,i,d,F){if(typeof d=="object"&&d!==null&&d.type===Hs&&d.key===null&&(d=d.props.children),typeof d=="object"&&d!==null){switch(d.$$typeof){case vl:e:{for(var C=d.key,k=i;k!==null;){if(k.key===C){if(C=d.type,C===Hs){if(k.tag===7){n(c,k.sibling),i=t(k,d.props.children),i.return=c,c=i;break e}}else if(k.elementType===C||typeof C=="object"&&C!==null&&C.$$typeof===ts&&jo(C)===k.type){n(c,k.sibling),i=t(k,d.props),i.ref=Tn(c,k,d),i.return=c,c=i;break e}n(c,k);break}else s(c,k);k=k.sibling}d.type===Hs?(i=Ls(d.props.children,c.mode,F,d.key),i.return=c,c=i):(F=bl(d.type,d.key,d.props,null,c.mode,F),F.ref=Tn(c,i,d),F.return=c,c=F)}return o(c);case bs:e:{for(k=d.key;i!==null;){if(i.key===k)if(i.tag===4&&i.stateNode.containerInfo===d.containerInfo&&i.stateNode.implementation===d.implementation){n(c,i.sibling),i=t(i,d.children||[]),i.return=c,c=i;break e}else{n(c,i);break}else s(c,i);i=i.sibling}i=aa(d,c.mode,F),i.return=c,c=i}return o(c);case ts:return k=d._init,U(c,i,k(d._payload),F)}if(Dn(d))return h(c,i,d,F);if(Fn(d))return D(c,i,d,F);wl(c,d)}return typeof d=="string"&&d!==""||typeof d=="number"?(d=""+d,i!==null&&i.tag===6?(n(c,i.sibling),i=t(i,d),i.return=c,c=i):(n(c,i),i=ta(d,c.mode,F),i.return=c,c=i),o(c)):n(c,i)}return U}var un=Rp(!0),Pp=Rp(!1),ol={},He=Ts(ol),Yn=Ts(ol),Gn=Ts(ol);function Ss(e){if(e===ol)throw Error(g(174));return e}function A0(e,s){switch(I(Gn,s),I(Yn,e),I(He,ol),e=s.nodeType,e){case 9:case 11:s=(s=s.documentElement)?s.namespaceURI:Fa(null,"");break;default:e=e===8?s.parentNode:s,s=e.namespaceURI||null,e=e.tagName,s=Fa(s,e)}j(He),I(He,s)}function cn(){j(He),j(Yn),j(Gn)}function Lp(e){Ss(Gn.current);var s=Ss(He.current),n=Fa(s,e.type);s!==n&&(I(Yn,e),I(He,n))}function S0(e){Yn.current===e&&(j(He),j(Yn))}var b=Ts(0);function at(e){for(var s=e;s!==null;){if(s.tag===13){var n=s.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return s}else if(s.tag===19&&s.memoizedProps.revealOrder!==void 0){if((s.flags&128)!==0)return s}else if(s.child!==null){s.child.return=s,s=s.child;continue}if(s===e)break;for(;s.sibling===null;){if(s.return===null||s.return===e)return null;s=s.return}s.sibling.return=s.return,s=s.sibling}return null}var Jt=[];function R0(){for(var e=0;e<Jt.length;e++)Jt[e]._workInProgressVersionPrimary=null;Jt.length=0}var Ol=ss.ReactCurrentDispatcher,ea=ss.ReactCurrentBatchConfig,Ms=0,H=null,Z=null,J=null,ot=!1,_n=!1,Xn=0,Ac=0;function le(){throw Error(g(321))}function P0(e,s){if(s===null)return!1;for(var n=0;n<s.length&&n<e.length;n++)if(!Ie(e[n],s[n]))return!1;return!0}function L0(e,s,n,l,t,a){if(Ms=a,H=s,s.memoizedState=null,s.updateQueue=null,s.lanes=0,Ol.current=e===null||e.memoizedState===null?Lc:Nc,e=n(l,t),_n){a=0;do{if(_n=!1,Xn=0,25<=a)throw Error(g(301));a+=1,J=Z=null,s.updateQueue=null,Ol.current=_c,e=n(l,t)}while(_n)}if(Ol.current=rt,s=Z!==null&&Z.next!==null,Ms=0,J=Z=H=null,ot=!1,s)throw Error(g(300));return e}function N0(){var e=Xn!==0;return Xn=0,e}function je(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return J===null?H.memoizedState=J=e:J=J.next=e,J}function Re(){if(Z===null){var e=H.alternate;e=e!==null?e.memoizedState:null}else e=Z.next;var s=J===null?H.memoizedState:J.next;if(s!==null)J=s,Z=e;else{if(e===null)throw Error(g(310));Z=e,e={memoizedState:Z.memoizedState,baseState:Z.baseState,baseQueue:Z.baseQueue,queue:Z.queue,next:null},J===null?H.memoizedState=J=e:J=J.next=e}return J}function Jn(e,s){return typeof s=="function"?s(e):s}function sa(e){var s=Re(),n=s.queue;if(n===null)throw Error(g(311));n.lastRenderedReducer=e;var l=Z,t=l.baseQueue,a=n.pending;if(a!==null){if(t!==null){var o=t.next;t.next=a.next,a.next=o}l.baseQueue=t=a,n.pending=null}if(t!==null){a=t.next,l=l.baseState;var r=o=null,p=null,u=a;do{var f=u.lane;if((Ms&f)===f)p!==null&&(p=p.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),l=u.hasEagerState?u.eagerState:e(l,u.action);else{var v={lane:f,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};p===null?(r=p=v,o=l):p=p.next=v,H.lanes|=f,Us|=f}u=u.next}while(u!==null&&u!==a);p===null?o=l:p.next=r,Ie(l,s.memoizedState)||(ve=!0),s.memoizedState=l,s.baseState=o,s.baseQueue=p,n.lastRenderedState=l}if(e=n.interleaved,e!==null){t=e;do a=t.lane,H.lanes|=a,Us|=a,t=t.next;while(t!==e)}else t===null&&(n.lanes=0);return[s.memoizedState,n.dispatch]}function na(e){var s=Re(),n=s.queue;if(n===null)throw Error(g(311));n.lastRenderedReducer=e;var l=n.dispatch,t=n.pending,a=s.memoizedState;if(t!==null){n.pending=null;var o=t=t.next;do a=e(a,o.action),o=o.next;while(o!==t);Ie(a,s.memoizedState)||(ve=!0),s.memoizedState=a,s.baseQueue===null&&(s.baseState=a),n.lastRenderedState=a}return[a,l]}function Np(){}function _p(e,s){var n=H,l=Re(),t=s(),a=!Ie(l.memoizedState,t);if(a&&(l.memoizedState=t,ve=!0),l=l.queue,_0(Ip.bind(null,n,l,e),[e]),l.getSnapshot!==s||a||J!==null&&J.memoizedState.tag&1){if(n.flags|=2048,el(9,Up.bind(null,n,l,t,s),void 0,null),G===null)throw Error(g(349));(Ms&30)!==0||Mp(n,s,t)}return t}function Mp(e,s,n){e.flags|=16384,e={getSnapshot:s,value:n},s=H.updateQueue,s===null?(s={lastEffect:null,stores:null},H.updateQueue=s,s.stores=[e]):(n=s.stores,n===null?s.stores=[e]:n.push(e))}function Up(e,s,n,l){s.value=n,s.getSnapshot=l,Op(s)&&Ae(e,1,-1)}function Ip(e,s,n){return n(function(){Op(s)&&Ae(e,1,-1)})}function Op(e){var s=e.getSnapshot;e=e.value;try{var n=s();return!Ie(e,n)}catch{return!0}}function Wo(e){var s=je();return typeof e=="function"&&(e=e()),s.memoizedState=s.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Jn,lastRenderedState:e},s.queue=e,e=e.dispatch=Pc.bind(null,H,e),[s.memoizedState,e]}function el(e,s,n,l){return e={tag:e,create:s,destroy:n,deps:l,next:null},s=H.updateQueue,s===null?(s={lastEffect:null,stores:null},H.updateQueue=s,s.lastEffect=e.next=e):(n=s.lastEffect,n===null?s.lastEffect=e.next=e:(l=n.next,n.next=e,e.next=l,s.lastEffect=e)),e}function zp(){return Re().memoizedState}function zl(e,s,n,l){var t=je();H.flags|=e,t.memoizedState=el(1|s,n,void 0,l===void 0?null:l)}function Tt(e,s,n,l){var t=Re();l=l===void 0?null:l;var a=void 0;if(Z!==null){var o=Z.memoizedState;if(a=o.destroy,l!==null&&P0(l,o.deps)){t.memoizedState=el(s,n,a,l);return}}H.flags|=e,t.memoizedState=el(1|s,n,a,l)}function bo(e,s){return zl(8390656,8,e,s)}function _0(e,s){return Tt(2048,8,e,s)}function jp(e,s){return Tt(4,2,e,s)}function Wp(e,s){return Tt(4,4,e,s)}function bp(e,s){if(typeof s=="function")return e=e(),s(e),function(){s(null)};if(s!=null)return e=e(),s.current=e,function(){s.current=null}}function Hp(e,s,n){return n=n!=null?n.concat([e]):null,Tt(4,4,bp.bind(null,s,e),n)}function M0(){}function $p(e,s){var n=Re();s=s===void 0?null:s;var l=n.memoizedState;return l!==null&&s!==null&&P0(s,l[1])?l[0]:(n.memoizedState=[e,s],e)}function Kp(e,s){var n=Re();s=s===void 0?null:s;var l=n.memoizedState;return l!==null&&s!==null&&P0(s,l[1])?l[0]:(e=e(),n.memoizedState=[e,s],e)}function qp(e,s,n){return(Ms&21)===0?(e.baseState&&(e.baseState=!1,ve=!0),e.memoizedState=n):(Ie(n,s)||(n=Xr(),H.lanes|=n,Us|=n,e.baseState=!0),s)}function Sc(e,s){var n=M;M=n!==0&&4>n?n:4,e(!0);var l=ea.transition;ea.transition={};try{e(!1),s()}finally{M=n,ea.transition=l}}function Vp(){return Re().memoizedState}function Rc(e,s,n){var l=vs(e);n={lane:l,action:n,hasEagerState:!1,eagerState:null,next:null},Qp(e)?Zp(s,n):(Yp(e,s,n),n=ue(),e=Ae(e,l,n),e!==null&&Gp(e,s,l))}function Pc(e,s,n){var l=vs(e),t={lane:l,action:n,hasEagerState:!1,eagerState:null,next:null};if(Qp(e))Zp(s,t);else{Yp(e,s,t);var a=e.alternate;if(e.lanes===0&&(a===null||a.lanes===0)&&(a=s.lastRenderedReducer,a!==null))try{var o=s.lastRenderedState,r=a(o,n);if(t.hasEagerState=!0,t.eagerState=r,Ie(r,o))return}catch{}finally{}n=ue(),e=Ae(e,l,n),e!==null&&Gp(e,s,l)}}function Qp(e){var s=e.alternate;return e===H||s!==null&&s===H}function Zp(e,s){_n=ot=!0;var n=e.pending;n===null?s.next=s:(s.next=n.next,n.next=s),e.pending=s}function Yp(e,s,n){fi(e)?(e=s.interleaved,e===null?(n.next=n,Me===null?Me=[s]:Me.push(s)):(n.next=e.next,e.next=n),s.interleaved=n):(e=s.pending,e===null?n.next=n:(n.next=e.next,e.next=n),s.pending=n)}function Gp(e,s,n){if((n&4194240)!==0){var l=s.lanes;l&=e.pendingLanes,n|=l,s.lanes=n,y0(e,n)}}var rt={readContext:Se,useCallback:le,useContext:le,useEffect:le,useImperativeHandle:le,useInsertionEffect:le,useLayoutEffect:le,useMemo:le,useReducer:le,useRef:le,useState:le,useDebugValue:le,useDeferredValue:le,useTransition:le,useMutableSource:le,useSyncExternalStore:le,useId:le,unstable_isNewReconciler:!1},Lc={readContext:Se,useCallback:function(e,s){return je().memoizedState=[e,s===void 0?null:s],e},useContext:Se,useEffect:bo,useImperativeHandle:function(e,s,n){return n=n!=null?n.concat([e]):null,zl(4194308,4,bp.bind(null,s,e),n)},useLayoutEffect:function(e,s){return zl(4194308,4,e,s)},useInsertionEffect:function(e,s){return zl(4,2,e,s)},useMemo:function(e,s){var n=je();return s=s===void 0?null:s,e=e(),n.memoizedState=[e,s],e},useReducer:function(e,s,n){var l=je();return s=n!==void 0?n(s):s,l.memoizedState=l.baseState=s,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:s},l.queue=e,e=e.dispatch=Rc.bind(null,H,e),[l.memoizedState,e]},useRef:function(e){var s=je();return e={current:e},s.memoizedState=e},useState:Wo,useDebugValue:M0,useDeferredValue:function(e){return je().memoizedState=e},useTransition:function(){var e=Wo(!1),s=e[0];return e=Sc.bind(null,e[1]),je().memoizedState=e,[s,e]},useMutableSource:function(){},useSyncExternalStore:function(e,s,n){var l=H,t=je();if(W){if(n===void 0)throw Error(g(407));n=n()}else{if(n=s(),G===null)throw Error(g(349));(Ms&30)!==0||Mp(l,s,n)}t.memoizedState=n;var a={value:n,getSnapshot:s};return t.queue=a,bo(Ip.bind(null,l,a,e),[e]),l.flags|=2048,el(9,Up.bind(null,l,a,n,s),void 0,null),n},useId:function(){var e=je(),s=G.identifierPrefix;if(W){var n=Ye,l=Ze;n=(l&~(1<<32-Ue(l)-1)).toString(32)+n,s=":"+s+"R"+n,n=Xn++,0<n&&(s+="H"+n.toString(32)),s+=":"}else n=Ac++,s=":"+s+"r"+n.toString(32)+":";return e.memoizedState=s},unstable_isNewReconciler:!1},Nc={readContext:Se,useCallback:$p,useContext:Se,useEffect:_0,useImperativeHandle:Hp,useInsertionEffect:jp,useLayoutEffect:Wp,useMemo:Kp,useReducer:sa,useRef:zp,useState:function(){return sa(Jn)},useDebugValue:M0,useDeferredValue:function(e){var s=Re();return qp(s,Z.memoizedState,e)},useTransition:function(){var e=sa(Jn)[0],s=Re().memoizedState;return[e,s]},useMutableSource:Np,useSyncExternalStore:_p,useId:Vp,unstable_isNewReconciler:!1},_c={readContext:Se,useCallback:$p,useContext:Se,useEffect:_0,useImperativeHandle:Hp,useInsertionEffect:jp,useLayoutEffect:Wp,useMemo:Kp,useReducer:na,useRef:zp,useState:function(){return na(Jn)},useDebugValue:M0,useDeferredValue:function(e){var s=Re();return Z===null?s.memoizedState=e:qp(s,Z.memoizedState,e)},useTransition:function(){var e=na(Jn)[0],s=Re().memoizedState;return[e,s]},useMutableSource:Np,useSyncExternalStore:_p,useId:Vp,unstable_isNewReconciler:!1};function U0(e,s){try{var n="",l=s;do n+=pu(l),l=l.return;while(l);var t=n}catch(a){t=`
Error generating stack: `+a.message+`
`+a.stack}return{value:e,source:s,stack:t}}function za(e,s){try{console.error(s.value)}catch(n){setTimeout(function(){throw n})}}var Mc=typeof WeakMap=="function"?WeakMap:Map;function Xp(e,s,n){n=Ge(-1,n),n.tag=3,n.payload={element:null};var l=s.value;return n.callback=function(){it||(it=!0,Qa=l),za(e,s)},n}function Jp(e,s,n){n=Ge(-1,n),n.tag=3;var l=e.type.getDerivedStateFromError;if(typeof l=="function"){var t=s.value;n.payload=function(){return l(t)},n.callback=function(){za(e,s)}}var a=e.stateNode;return a!==null&&typeof a.componentDidCatch=="function"&&(n.callback=function(){za(e,s),typeof l!="function"&&(fs===null?fs=new Set([this]):fs.add(this));var o=s.stack;this.componentDidCatch(s.value,{componentStack:o!==null?o:""})}),n}function Ho(e,s,n){var l=e.pingCache;if(l===null){l=e.pingCache=new Mc;var t=new Set;l.set(s,t)}else t=l.get(s),t===void 0&&(t=new Set,l.set(s,t));t.has(n)||(t.add(n),e=Qc.bind(null,e,s,n),s.then(e,e))}function $o(e){do{var s;if((s=e.tag===13)&&(s=e.memoizedState,s=s!==null?s.dehydrated!==null:!0),s)return e;e=e.return}while(e!==null);return null}function Ko(e,s,n,l,t){return(e.mode&1)===0?(e===s?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(s=Ge(-1,1),s.tag=2,ys(n,s))),n.lanes|=1),e):(e.flags|=65536,e.lanes=t,e)}var ei,ja,si,ni;ei=function(e,s){for(var n=s.child;n!==null;){if(n.tag===5||n.tag===6)e.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===s)break;for(;n.sibling===null;){if(n.return===null||n.return===s)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};ja=function(){};si=function(e,s,n,l){var t=e.memoizedProps;if(t!==l){e=s.stateNode,Ss(He.current);var a=null;switch(n){case"input":t=da(e,t),l=da(e,l),a=[];break;case"select":t=$({},t,{value:void 0}),l=$({},l,{value:void 0}),a=[];break;case"textarea":t=va(e,t),l=va(e,l),a=[];break;default:typeof t.onClick!="function"&&typeof l.onClick=="function"&&(e.onclick=Gl)}ma(n,l);var o;n=null;for(u in t)if(!l.hasOwnProperty(u)&&t.hasOwnProperty(u)&&t[u]!=null)if(u==="style"){var r=t[u];for(o in r)r.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else u!=="dangerouslySetInnerHTML"&&u!=="children"&&u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&u!=="autoFocus"&&(zn.hasOwnProperty(u)?a||(a=[]):(a=a||[]).push(u,null));for(u in l){var p=l[u];if(r=t!=null?t[u]:void 0,l.hasOwnProperty(u)&&p!==r&&(p!=null||r!=null))if(u==="style")if(r){for(o in r)!r.hasOwnProperty(o)||p&&p.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in p)p.hasOwnProperty(o)&&r[o]!==p[o]&&(n||(n={}),n[o]=p[o])}else n||(a||(a=[]),a.push(u,n)),n=p;else u==="dangerouslySetInnerHTML"?(p=p?p.__html:void 0,r=r?r.__html:void 0,p!=null&&r!==p&&(a=a||[]).push(u,p)):u==="children"?typeof p!="string"&&typeof p!="number"||(a=a||[]).push(u,""+p):u!=="suppressContentEditableWarning"&&u!=="suppressHydrationWarning"&&(zn.hasOwnProperty(u)?(p!=null&&u==="onScroll"&&z("scroll",e),a||r===p||(a=[])):(a=a||[]).push(u,p))}n&&(a=a||[]).push("style",n);var u=a;(s.updateQueue=u)&&(s.flags|=4)}};ni=function(e,s,n,l){n!==l&&(s.flags|=4)};function Bn(e,s){if(!W)switch(e.tailMode){case"hidden":s=e.tail;for(var n=null;s!==null;)s.alternate!==null&&(n=s),s=s.sibling;n===null?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var l=null;n!==null;)n.alternate!==null&&(l=n),n=n.sibling;l===null?s||e.tail===null?e.tail=null:e.tail.sibling=null:l.sibling=null}}function te(e){var s=e.alternate!==null&&e.alternate.child===e.child,n=0,l=0;if(s)for(var t=e.child;t!==null;)n|=t.lanes|t.childLanes,l|=t.subtreeFlags&14680064,l|=t.flags&14680064,t.return=e,t=t.sibling;else for(t=e.child;t!==null;)n|=t.lanes|t.childLanes,l|=t.subtreeFlags,l|=t.flags,t.return=e,t=t.sibling;return e.subtreeFlags|=l,e.childLanes=n,s}function Uc(e,s,n){var l=s.pendingProps;switch(D0(s),s.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return te(s),null;case 1:return me(s.type)&&Xl(),te(s),null;case 3:return l=s.stateNode,cn(),j(Fe),j(oe),R0(),l.pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),(e===null||e.child===null)&&(Cn(s)?s.flags|=4:e===null||e.memoizedState.isDehydrated&&(s.flags&256)===0||(s.flags|=1024,_e!==null&&(Ga(_e),_e=null))),ja(e,s),te(s),null;case 5:S0(s);var t=Ss(Gn.current);if(n=s.type,e!==null&&s.stateNode!=null)si(e,s,n,l,t),e.ref!==s.ref&&(s.flags|=512,s.flags|=2097152);else{if(!l){if(s.stateNode===null)throw Error(g(166));return te(s),null}if(e=Ss(He.current),Cn(s)){l=s.stateNode,n=s.type;var a=s.memoizedProps;switch(l[We]=s,l[Zn]=a,e=(s.mode&1)!==0,n){case"dialog":z("cancel",l),z("close",l);break;case"iframe":case"object":case"embed":z("load",l);break;case"video":case"audio":for(t=0;t<An.length;t++)z(An[t],l);break;case"source":z("error",l);break;case"img":case"image":case"link":z("error",l),z("load",l);break;case"details":z("toggle",l);break;case"input":to(l,a),z("invalid",l);break;case"select":l._wrapperState={wasMultiple:!!a.multiple},z("invalid",l);break;case"textarea":oo(l,a),z("invalid",l)}ma(n,a),t=null;for(var o in a)if(a.hasOwnProperty(o)){var r=a[o];o==="children"?typeof r=="string"?l.textContent!==r&&(a.suppressHydrationWarning!==!0&&kl(l.textContent,r,e),t=["children",r]):typeof r=="number"&&l.textContent!==""+r&&(a.suppressHydrationWarning!==!0&&kl(l.textContent,r,e),t=["children",""+r]):zn.hasOwnProperty(o)&&r!=null&&o==="onScroll"&&z("scroll",l)}switch(n){case"input":Fl(l),ao(l,a,!0);break;case"textarea":Fl(l),ro(l);break;case"select":case"option":break;default:typeof a.onClick=="function"&&(l.onclick=Gl)}l=t,s.updateQueue=l,l!==null&&(s.flags|=4)}else{o=t.nodeType===9?t:t.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=Ir(n)),e==="http://www.w3.org/1999/xhtml"?n==="script"?(e=o.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof l.is=="string"?e=o.createElement(n,{is:l.is}):(e=o.createElement(n),n==="select"&&(o=e,l.multiple?o.multiple=!0:l.size&&(o.size=l.size))):e=o.createElementNS(e,n),e[We]=s,e[Zn]=l,ei(e,s,!1,!1),s.stateNode=e;e:{switch(o=ga(n,l),n){case"dialog":z("cancel",e),z("close",e),t=l;break;case"iframe":case"object":case"embed":z("load",e),t=l;break;case"video":case"audio":for(t=0;t<An.length;t++)z(An[t],e);t=l;break;case"source":z("error",e),t=l;break;case"img":case"image":case"link":z("error",e),z("load",e),t=l;break;case"details":z("toggle",e),t=l;break;case"input":to(e,l),t=da(e,l),z("invalid",e);break;case"option":t=l;break;case"select":e._wrapperState={wasMultiple:!!l.multiple},t=$({},l,{value:void 0}),z("invalid",e);break;case"textarea":oo(e,l),t=va(e,l),z("invalid",e);break;default:t=l}ma(n,t),r=t;for(a in r)if(r.hasOwnProperty(a)){var p=r[a];a==="style"?jr(e,p):a==="dangerouslySetInnerHTML"?(p=p?p.__html:void 0,p!=null&&Or(e,p)):a==="children"?typeof p=="string"?(n!=="textarea"||p!=="")&&jn(e,p):typeof p=="number"&&jn(e,""+p):a!=="suppressContentEditableWarning"&&a!=="suppressHydrationWarning"&&a!=="autoFocus"&&(zn.hasOwnProperty(a)?p!=null&&a==="onScroll"&&z("scroll",e):p!=null&&r0(e,a,p,o))}switch(n){case"input":Fl(e),ao(e,l,!1);break;case"textarea":Fl(e),ro(e);break;case"option":l.value!=null&&e.setAttribute("value",""+ms(l.value));break;case"select":e.multiple=!!l.multiple,a=l.value,a!=null?en(e,!!l.multiple,a,!1):l.defaultValue!=null&&en(e,!!l.multiple,l.defaultValue,!0);break;default:typeof t.onClick=="function"&&(e.onclick=Gl)}switch(n){case"button":case"input":case"select":case"textarea":l=!!l.autoFocus;break e;case"img":l=!0;break e;default:l=!1}}l&&(s.flags|=4)}s.ref!==null&&(s.flags|=512,s.flags|=2097152)}return te(s),null;case 6:if(e&&s.stateNode!=null)ni(e,s,e.memoizedProps,l);else{if(typeof l!="string"&&s.stateNode===null)throw Error(g(166));if(n=Ss(Gn.current),Ss(He.current),Cn(s)){if(l=s.stateNode,n=s.memoizedProps,l[We]=s,(a=l.nodeValue!==n)&&(e=Ee,e!==null))switch(e.tag){case 3:kl(l.nodeValue,n,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&kl(l.nodeValue,n,(e.mode&1)!==0)}a&&(s.flags|=4)}else l=(n.nodeType===9?n:n.ownerDocument).createTextNode(l),l[We]=s,s.stateNode=l}return te(s),null;case 13:if(j(b),l=s.memoizedState,W&&fe!==null&&(s.mode&1)!==0&&(s.flags&128)===0){for(l=fe;l;)l=Qe(l.nextSibling);return pn(),s.flags|=98560,s}if(l!==null&&l.dehydrated!==null){if(l=Cn(s),e===null){if(!l)throw Error(g(318));if(l=s.memoizedState,l=l!==null?l.dehydrated:null,!l)throw Error(g(317));l[We]=s}else pn(),(s.flags&128)===0&&(s.memoizedState=null),s.flags|=4;return te(s),null}return _e!==null&&(Ga(_e),_e=null),(s.flags&128)!==0?(s.lanes=n,s):(l=l!==null,n=!1,e===null?Cn(s):n=e.memoizedState!==null,l!==n&&l&&(s.child.flags|=8192,(s.mode&1)!==0&&(e===null||(b.current&1)!==0?Y===0&&(Y=3):b0())),s.updateQueue!==null&&(s.flags|=4),te(s),null);case 4:return cn(),ja(e,s),e===null&&Vn(s.stateNode.containerInfo),te(s),null;case 10:return B0(s.type._context),te(s),null;case 17:return me(s.type)&&Xl(),te(s),null;case 19:if(j(b),a=s.memoizedState,a===null)return te(s),null;if(l=(s.flags&128)!==0,o=a.rendering,o===null)if(l)Bn(a,!1);else{if(Y!==0||e!==null&&(e.flags&128)!==0)for(e=s.child;e!==null;){if(o=at(e),o!==null){for(s.flags|=128,Bn(a,!1),l=o.updateQueue,l!==null&&(s.updateQueue=l,s.flags|=4),s.subtreeFlags=0,l=n,n=s.child;n!==null;)a=n,e=l,a.flags&=14680066,o=a.alternate,o===null?(a.childLanes=0,a.lanes=e,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=o.childLanes,a.lanes=o.lanes,a.child=o.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=o.memoizedProps,a.memoizedState=o.memoizedState,a.updateQueue=o.updateQueue,a.type=o.type,e=o.dependencies,a.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return I(b,b.current&1|2),s.child}e=e.sibling}a.tail!==null&&V()>dn&&(s.flags|=128,l=!0,Bn(a,!1),s.lanes=4194304)}else{if(!l)if(e=at(o),e!==null){if(s.flags|=128,l=!0,n=e.updateQueue,n!==null&&(s.updateQueue=n,s.flags|=4),Bn(a,!0),a.tail===null&&a.tailMode==="hidden"&&!o.alternate&&!W)return te(s),null}else 2*V()-a.renderingStartTime>dn&&n!==1073741824&&(s.flags|=128,l=!0,Bn(a,!1),s.lanes=4194304);a.isBackwards?(o.sibling=s.child,s.child=o):(n=a.last,n!==null?n.sibling=o:s.child=o,a.last=o)}return a.tail!==null?(s=a.tail,a.rendering=s,a.tail=s.sibling,a.renderingStartTime=V(),s.sibling=null,n=b.current,I(b,l?n&1|2:n&1),s):(te(s),null);case 22:case 23:return W0(),l=s.memoizedState!==null,e!==null&&e.memoizedState!==null!==l&&(s.flags|=8192),l&&(s.mode&1)!==0?(he&1073741824)!==0&&(te(s),s.subtreeFlags&6&&(s.flags|=8192)):te(s),null;case 24:return null;case 25:return null}throw Error(g(156,s.tag))}var Ic=ss.ReactCurrentOwner,ve=!1;function ie(e,s,n,l){s.child=e===null?Pp(s,null,n,l):un(s,e.child,n,l)}function qo(e,s,n,l,t){n=n.render;var a=s.ref;return tn(s,t),l=L0(e,s,n,l,a,t),n=N0(),e!==null&&!ve?(s.updateQueue=e.updateQueue,s.flags&=-2053,e.lanes&=~t,es(e,s,t)):(W&&n&&w0(s),s.flags|=1,ie(e,s,l,t),s.child)}function Vo(e,s,n,l,t){if(e===null){var a=n.type;return typeof a=="function"&&!H0(a)&&a.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(s.tag=15,s.type=a,li(e,s,a,l,t)):(e=bl(n.type,null,l,s,s.mode,t),e.ref=s.ref,e.return=s,s.child=e)}if(a=e.child,(e.lanes&t)===0){var o=a.memoizedProps;if(n=n.compare,n=n!==null?n:qn,n(o,l)&&e.ref===s.ref)return es(e,s,t)}return s.flags|=1,e=hs(a,l),e.ref=s.ref,e.return=s,s.child=e}function li(e,s,n,l,t){if(e!==null){var a=e.memoizedProps;if(qn(a,l)&&e.ref===s.ref)if(ve=!1,s.pendingProps=l=a,(e.lanes&t)!==0)(e.flags&131072)!==0&&(ve=!0);else return s.lanes=e.lanes,es(e,s,t)}return Wa(e,s,n,l,t)}function ti(e,s,n){var l=s.pendingProps,t=l.children,a=e!==null?e.memoizedState:null;if(l.mode==="hidden")if((s.mode&1)===0)s.memoizedState={baseLanes:0,cachePool:null,transitions:null},I(Js,he),he|=n;else if((n&1073741824)!==0)s.memoizedState={baseLanes:0,cachePool:null,transitions:null},l=a!==null?a.baseLanes:n,I(Js,he),he|=l;else return e=a!==null?a.baseLanes|n:n,s.lanes=s.childLanes=1073741824,s.memoizedState={baseLanes:e,cachePool:null,transitions:null},s.updateQueue=null,I(Js,he),he|=e,null;else a!==null?(l=a.baseLanes|n,s.memoizedState=null):l=n,I(Js,he),he|=l;return ie(e,s,t,n),s.child}function ai(e,s){var n=s.ref;(e===null&&n!==null||e!==null&&e.ref!==n)&&(s.flags|=512,s.flags|=2097152)}function Wa(e,s,n,l,t){var a=me(n)?Ns:oe.current;return a=rn(s,a),tn(s,t),n=L0(e,s,n,l,a,t),l=N0(),e!==null&&!ve?(s.updateQueue=e.updateQueue,s.flags&=-2053,e.lanes&=~t,es(e,s,t)):(W&&l&&w0(s),s.flags|=1,ie(e,s,n,t),s.child)}function Qo(e,s,n,l,t){if(me(n)){var a=!0;Jl(s)}else a=!1;if(tn(s,t),s.stateNode===null)e!==null&&(e.alternate=null,s.alternate=null,s.flags|=2),xp(s,n,l),Ua(s,n,l,t),l=!0;else if(e===null){var o=s.stateNode,r=s.memoizedProps;o.props=r;var p=o.context,u=n.contextType;typeof u=="object"&&u!==null?u=Se(u):(u=me(n)?Ns:oe.current,u=rn(s,u));var f=n.getDerivedStateFromProps,v=typeof f=="function"||typeof o.getSnapshotBeforeUpdate=="function";v||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(r!==l||p!==u)&&Io(s,o,l,u),as=!1;var y=s.memoizedState;o.state=y,nt(s,l,o,t),p=s.memoizedState,r!==l||y!==p||Fe.current||as?(typeof f=="function"&&(Ma(s,n,f,l),p=s.memoizedState),(r=as||Uo(s,n,r,l,y,p,u))?(v||typeof o.UNSAFE_componentWillMount!="function"&&typeof o.componentWillMount!="function"||(typeof o.componentWillMount=="function"&&o.componentWillMount(),typeof o.UNSAFE_componentWillMount=="function"&&o.UNSAFE_componentWillMount()),typeof o.componentDidMount=="function"&&(s.flags|=4194308)):(typeof o.componentDidMount=="function"&&(s.flags|=4194308),s.memoizedProps=l,s.memoizedState=p),o.props=l,o.state=p,o.context=u,l=r):(typeof o.componentDidMount=="function"&&(s.flags|=4194308),l=!1)}else{o=s.stateNode,wp(e,s),r=s.memoizedProps,u=s.type===s.elementType?r:Le(s.type,r),o.props=u,v=s.pendingProps,y=o.context,p=n.contextType,typeof p=="object"&&p!==null?p=Se(p):(p=me(n)?Ns:oe.current,p=rn(s,p));var E=n.getDerivedStateFromProps;(f=typeof E=="function"||typeof o.getSnapshotBeforeUpdate=="function")||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(r!==v||y!==p)&&Io(s,o,l,p),as=!1,y=s.memoizedState,o.state=y,nt(s,l,o,t);var h=s.memoizedState;r!==v||y!==h||Fe.current||as?(typeof E=="function"&&(Ma(s,n,E,l),h=s.memoizedState),(u=as||Uo(s,n,u,l,y,h,p)||!1)?(f||typeof o.UNSAFE_componentWillUpdate!="function"&&typeof o.componentWillUpdate!="function"||(typeof o.componentWillUpdate=="function"&&o.componentWillUpdate(l,h,p),typeof o.UNSAFE_componentWillUpdate=="function"&&o.UNSAFE_componentWillUpdate(l,h,p)),typeof o.componentDidUpdate=="function"&&(s.flags|=4),typeof o.getSnapshotBeforeUpdate=="function"&&(s.flags|=1024)):(typeof o.componentDidUpdate!="function"||r===e.memoizedProps&&y===e.memoizedState||(s.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||r===e.memoizedProps&&y===e.memoizedState||(s.flags|=1024),s.memoizedProps=l,s.memoizedState=h),o.props=l,o.state=h,o.context=p,l=u):(typeof o.componentDidUpdate!="function"||r===e.memoizedProps&&y===e.memoizedState||(s.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||r===e.memoizedProps&&y===e.memoizedState||(s.flags|=1024),l=!1)}return ba(e,s,n,l,a,t)}function ba(e,s,n,l,t,a){ai(e,s);var o=(s.flags&128)!==0;if(!l&&!o)return t&&No(s,n,!1),es(e,s,a);l=s.stateNode,Ic.current=s;var r=o&&typeof n.getDerivedStateFromError!="function"?null:l.render();return s.flags|=1,e!==null&&o?(s.child=un(s,e.child,null,a),s.child=un(s,null,r,a)):ie(e,s,r,a),s.memoizedState=l.state,t&&No(s,n,!0),s.child}function oi(e){var s=e.stateNode;s.pendingContext?Lo(e,s.pendingContext,s.pendingContext!==s.context):s.context&&Lo(e,s.context,!1),A0(e,s.containerInfo)}function Zo(e,s,n,l,t){return pn(),x0(t),s.flags|=256,ie(e,s,n,l),s.child}var Dl={dehydrated:null,treeContext:null,retryLane:0};function xl(e){return{baseLanes:e,cachePool:null,transitions:null}}function Yo(e,s){return{baseLanes:e.baseLanes|s,cachePool:null,transitions:e.transitions}}function ri(e,s,n){var l=s.pendingProps,t=b.current,a=!1,o=(s.flags&128)!==0,r;if((r=o)||(r=e!==null&&e.memoizedState===null?!1:(t&2)!==0),r?(a=!0,s.flags&=-129):(e===null||e.memoizedState!==null)&&(t|=1),I(b,t&1),e===null)return Oa(s),e=s.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?((s.mode&1)===0?s.lanes=1:e.data==="$!"?s.lanes=8:s.lanes=1073741824,null):(t=l.children,e=l.fallback,a?(l=s.mode,a=s.child,t={mode:"hidden",children:t},(l&1)===0&&a!==null?(a.childLanes=0,a.pendingProps=t):a=dt(t,l,0,null),e=Ls(e,l,n,null),a.return=s,e.return=s,a.sibling=e,s.child=a,s.child.memoizedState=xl(n),s.memoizedState=Dl,e):Ha(s,t));if(t=e.memoizedState,t!==null){if(r=t.dehydrated,r!==null){if(o)return s.flags&256?(s.flags&=-257,Al(e,s,n,Error(g(422)))):s.memoizedState!==null?(s.child=e.child,s.flags|=128,null):(a=l.fallback,t=s.mode,l=dt({mode:"visible",children:l.children},t,0,null),a=Ls(a,t,n,null),a.flags|=2,l.return=s,a.return=s,l.sibling=a,s.child=l,(s.mode&1)!==0&&un(s,e.child,null,n),s.child.memoizedState=xl(n),s.memoizedState=Dl,a);if((s.mode&1)===0)s=Al(e,s,n,null);else if(r.data==="$!")s=Al(e,s,n,Error(g(419)));else if(l=(n&e.childLanes)!==0,ve||l){if(l=G,l!==null){switch(n&-n){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}l=(a&(l.suspendedLanes|n))!==0?0:a,l!==0&&l!==t.retryLane&&(t.retryLane=l,Ae(e,l,-1))}b0(),s=Al(e,s,n,Error(g(421)))}else r.data==="$?"?(s.flags|=128,s.child=e.child,s=Zc.bind(null,e),r._reactRetry=s,s=null):(n=t.treeContext,fe=Qe(r.nextSibling),Ee=s,W=!0,_e=null,n!==null&&(ke[we++]=Ze,ke[we++]=Ye,ke[we++]=_s,Ze=n.id,Ye=n.overflow,_s=s),s=Ha(s,s.pendingProps.children),s.flags|=4096);return s}return a?(l=Xo(e,s,l.children,l.fallback,n),a=s.child,t=e.child.memoizedState,a.memoizedState=t===null?xl(n):Yo(t,n),a.childLanes=e.childLanes&~n,s.memoizedState=Dl,l):(n=Go(e,s,l.children,n),s.memoizedState=null,n)}return a?(l=Xo(e,s,l.children,l.fallback,n),a=s.child,t=e.child.memoizedState,a.memoizedState=t===null?xl(n):Yo(t,n),a.childLanes=e.childLanes&~n,s.memoizedState=Dl,l):(n=Go(e,s,l.children,n),s.memoizedState=null,n)}function Ha(e,s){return s=dt({mode:"visible",children:s},e.mode,0,null),s.return=e,e.child=s}function Go(e,s,n,l){var t=e.child;return e=t.sibling,n=hs(t,{mode:"visible",children:n}),(s.mode&1)===0&&(n.lanes=l),n.return=s,n.sibling=null,e!==null&&(l=s.deletions,l===null?(s.deletions=[e],s.flags|=16):l.push(e)),s.child=n}function Xo(e,s,n,l,t){var a=s.mode;e=e.child;var o=e.sibling,r={mode:"hidden",children:n};return(a&1)===0&&s.child!==e?(n=s.child,n.childLanes=0,n.pendingProps=r,s.deletions=null):(n=hs(e,r),n.subtreeFlags=e.subtreeFlags&14680064),o!==null?l=hs(o,l):(l=Ls(l,a,t,null),l.flags|=2),l.return=s,n.return=s,n.sibling=l,s.child=n,l}function Al(e,s,n,l){return l!==null&&x0(l),un(s,e.child,null,n),e=Ha(s,s.pendingProps.children),e.flags|=2,s.memoizedState=null,e}function Jo(e,s,n){e.lanes|=s;var l=e.alternate;l!==null&&(l.lanes|=s),_a(e.return,s,n)}function la(e,s,n,l,t){var a=e.memoizedState;a===null?e.memoizedState={isBackwards:s,rendering:null,renderingStartTime:0,last:l,tail:n,tailMode:t}:(a.isBackwards=s,a.rendering=null,a.renderingStartTime=0,a.last=l,a.tail=n,a.tailMode=t)}function pi(e,s,n){var l=s.pendingProps,t=l.revealOrder,a=l.tail;if(ie(e,s,l.children,n),l=b.current,(l&2)!==0)l=l&1|2,s.flags|=128;else{if(e!==null&&(e.flags&128)!==0)e:for(e=s.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&Jo(e,n,s);else if(e.tag===19)Jo(e,n,s);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===s)break e;for(;e.sibling===null;){if(e.return===null||e.return===s)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}l&=1}if(I(b,l),(s.mode&1)===0)s.memoizedState=null;else switch(t){case"forwards":for(n=s.child,t=null;n!==null;)e=n.alternate,e!==null&&at(e)===null&&(t=n),n=n.sibling;n=t,n===null?(t=s.child,s.child=null):(t=n.sibling,n.sibling=null),la(s,!1,t,n,a);break;case"backwards":for(n=null,t=s.child,s.child=null;t!==null;){if(e=t.alternate,e!==null&&at(e)===null){s.child=t;break}e=t.sibling,t.sibling=n,n=t,t=e}la(s,!0,n,null,a);break;case"together":la(s,!1,null,null,void 0);break;default:s.memoizedState=null}return s.child}function es(e,s,n){if(e!==null&&(s.dependencies=e.dependencies),Us|=s.lanes,(n&s.childLanes)===0)return null;if(e!==null&&s.child!==e.child)throw Error(g(153));if(s.child!==null){for(e=s.child,n=hs(e,e.pendingProps),s.child=n,n.return=s;e.sibling!==null;)e=e.sibling,n=n.sibling=hs(e,e.pendingProps),n.return=s;n.sibling=null}return s.child}function Oc(e,s,n){switch(s.tag){case 3:oi(s),pn();break;case 5:Lp(s);break;case 1:me(s.type)&&Jl(s);break;case 4:A0(s,s.stateNode.containerInfo);break;case 10:var l=s.type._context,t=s.memoizedProps.value;I(et,l._currentValue),l._currentValue=t;break;case 13:if(l=s.memoizedState,l!==null)return l.dehydrated!==null?(I(b,b.current&1),s.flags|=128,null):(n&s.child.childLanes)!==0?ri(e,s,n):(I(b,b.current&1),e=es(e,s,n),e!==null?e.sibling:null);I(b,b.current&1);break;case 19:if(l=(n&s.childLanes)!==0,(e.flags&128)!==0){if(l)return pi(e,s,n);s.flags|=128}if(t=s.memoizedState,t!==null&&(t.rendering=null,t.tail=null,t.lastEffect=null),I(b,b.current),l)break;return null;case 22:case 23:return s.lanes=0,ti(e,s,n)}return es(e,s,n)}function zc(e,s){switch(D0(s),s.tag){case 1:return me(s.type)&&Xl(),e=s.flags,e&65536?(s.flags=e&-65537|128,s):null;case 3:return cn(),j(Fe),j(oe),R0(),e=s.flags,(e&65536)!==0&&(e&128)===0?(s.flags=e&-65537|128,s):null;case 5:return S0(s),null;case 13:if(j(b),e=s.memoizedState,e!==null&&e.dehydrated!==null){if(s.alternate===null)throw Error(g(340));pn()}return e=s.flags,e&65536?(s.flags=e&-65537|128,s):null;case 19:return j(b),null;case 4:return cn(),null;case 10:return B0(s.type._context),null;case 22:case 23:return W0(),null;case 24:return null;default:return null}}var Sl=!1,ae=!1,jc=typeof WeakSet=="function"?WeakSet:Set,T=null;function Xs(e,s){var n=e.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(l){K(e,s,l)}else n.current=null}function $a(e,s,n){try{n()}catch(l){K(e,s,l)}}var er=!1;function Wc(e,s){if(Aa=Ql,e=fp(),E0(e)){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{n=(n=e.ownerDocument)&&n.defaultView||window;var l=n.getSelection&&n.getSelection();if(l&&l.rangeCount!==0){n=l.anchorNode;var t=l.anchorOffset,a=l.focusNode;l=l.focusOffset;try{n.nodeType,a.nodeType}catch{n=null;break e}var o=0,r=-1,p=-1,u=0,f=0,v=e,y=null;s:for(;;){for(var E;v!==n||t!==0&&v.nodeType!==3||(r=o+t),v!==a||l!==0&&v.nodeType!==3||(p=o+l),v.nodeType===3&&(o+=v.nodeValue.length),(E=v.firstChild)!==null;)y=v,v=E;for(;;){if(v===e)break s;if(y===n&&++u===t&&(r=o),y===a&&++f===l&&(p=o),(E=v.nextSibling)!==null)break;v=y,y=v.parentNode}v=E}n=r===-1||p===-1?null:{start:r,end:p}}else n=null}n=n||{start:0,end:0}}else n=null;for(Sa={focusedElem:e,selectionRange:n},Ql=!1,T=s;T!==null;)if(s=T,e=s.child,(s.subtreeFlags&1028)!==0&&e!==null)e.return=s,T=e;else for(;T!==null;){s=T;try{var h=s.alternate;if((s.flags&1024)!==0)switch(s.tag){case 0:case 11:case 15:break;case 1:if(h!==null){var D=h.memoizedProps,U=h.memoizedState,c=s.stateNode,i=c.getSnapshotBeforeUpdate(s.elementType===s.type?D:Le(s.type,D),U);c.__reactInternalSnapshotBeforeUpdate=i}break;case 3:var d=s.stateNode.containerInfo;if(d.nodeType===1)d.textContent="";else if(d.nodeType===9){var F=d.body;F!=null&&(F.textContent="")}break;case 5:case 6:case 4:case 17:break;default:throw Error(g(163))}}catch(C){K(s,s.return,C)}if(e=s.sibling,e!==null){e.return=s.return,T=e;break}T=s.return}return h=er,er=!1,h}function Mn(e,s,n){var l=s.updateQueue;if(l=l!==null?l.lastEffect:null,l!==null){var t=l=l.next;do{if((t.tag&e)===e){var a=t.destroy;t.destroy=void 0,a!==void 0&&$a(s,n,a)}t=t.next}while(t!==l)}}function Bt(e,s){if(s=s.updateQueue,s=s!==null?s.lastEffect:null,s!==null){var n=s=s.next;do{if((n.tag&e)===e){var l=n.create;n.destroy=l()}n=n.next}while(n!==s)}}function Ka(e){var s=e.ref;if(s!==null){var n=e.stateNode;switch(e.tag){case 5:e=n;break;default:e=n}typeof s=="function"?s(e):s.current=e}}function ii(e){var s=e.alternate;s!==null&&(e.alternate=null,ii(s)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(s=e.stateNode,s!==null&&(delete s[We],delete s[Zn],delete s[La],delete s[kc],delete s[wc])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ui(e){return e.tag===5||e.tag===3||e.tag===4}function sr(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||ui(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function qa(e,s,n){var l=e.tag;if(l===5||l===6)e=e.stateNode,s?n.nodeType===8?n.parentNode.insertBefore(e,s):n.insertBefore(e,s):(n.nodeType===8?(s=n.parentNode,s.insertBefore(e,n)):(s=n,s.appendChild(e)),n=n._reactRootContainer,n!=null||s.onclick!==null||(s.onclick=Gl));else if(l!==4&&(e=e.child,e!==null))for(qa(e,s,n),e=e.sibling;e!==null;)qa(e,s,n),e=e.sibling}function Va(e,s,n){var l=e.tag;if(l===5||l===6)e=e.stateNode,s?n.insertBefore(e,s):n.appendChild(e);else if(l!==4&&(e=e.child,e!==null))for(Va(e,s,n),e=e.sibling;e!==null;)Va(e,s,n),e=e.sibling}var ee=null,Ne=!1;function ls(e,s,n){for(n=n.child;n!==null;)ci(e,s,n),n=n.sibling}function ci(e,s,n){if(be&&typeof be.onCommitFiberUnmount=="function")try{be.onCommitFiberUnmount(vt,n)}catch{}switch(n.tag){case 5:ae||Xs(n,s);case 6:var l=ee,t=Ne;ee=null,ls(e,s,n),ee=l,Ne=t,ee!==null&&(Ne?(e=ee,n=n.stateNode,e.nodeType===8?e.parentNode.removeChild(n):e.removeChild(n)):ee.removeChild(n.stateNode));break;case 18:ee!==null&&(Ne?(e=ee,n=n.stateNode,e.nodeType===8?Gt(e.parentNode,n):e.nodeType===1&&Gt(e,n),$n(e)):Gt(ee,n.stateNode));break;case 4:l=ee,t=Ne,ee=n.stateNode.containerInfo,Ne=!0,ls(e,s,n),ee=l,Ne=t;break;case 0:case 11:case 14:case 15:if(!ae&&(l=n.updateQueue,l!==null&&(l=l.lastEffect,l!==null))){t=l=l.next;do{var a=t,o=a.destroy;a=a.tag,o!==void 0&&((a&2)!==0||(a&4)!==0)&&$a(n,s,o),t=t.next}while(t!==l)}ls(e,s,n);break;case 1:if(!ae&&(Xs(n,s),l=n.stateNode,typeof l.componentWillUnmount=="function"))try{l.props=n.memoizedProps,l.state=n.memoizedState,l.componentWillUnmount()}catch(r){K(n,s,r)}ls(e,s,n);break;case 21:ls(e,s,n);break;case 22:n.mode&1?(ae=(l=ae)||n.memoizedState!==null,ls(e,s,n),ae=l):ls(e,s,n);break;default:ls(e,s,n)}}function nr(e){var s=e.updateQueue;if(s!==null){e.updateQueue=null;var n=e.stateNode;n===null&&(n=e.stateNode=new jc),s.forEach(function(l){var t=Yc.bind(null,e,l);n.has(l)||(n.add(l),l.then(t,t))})}}function Pe(e,s){var n=s.deletions;if(n!==null)for(var l=0;l<n.length;l++){var t=n[l];try{var a=e,o=s,r=o;e:for(;r!==null;){switch(r.tag){case 5:ee=r.stateNode,Ne=!1;break e;case 3:ee=r.stateNode.containerInfo,Ne=!0;break e;case 4:ee=r.stateNode.containerInfo,Ne=!0;break e}r=r.return}if(ee===null)throw Error(g(160));ci(a,o,t),ee=null,Ne=!1;var p=t.alternate;p!==null&&(p.return=null),t.return=null}catch(u){K(t,s,u)}}if(s.subtreeFlags&12854)for(s=s.child;s!==null;)di(s,e),s=s.sibling}function di(e,s){var n=e.alternate,l=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(Pe(s,e),ze(e),l&4){try{Mn(3,e,e.return),Bt(3,e)}catch(h){K(e,e.return,h)}try{Mn(5,e,e.return)}catch(h){K(e,e.return,h)}}break;case 1:Pe(s,e),ze(e),l&512&&n!==null&&Xs(n,n.return);break;case 5:if(Pe(s,e),ze(e),l&512&&n!==null&&Xs(n,n.return),e.flags&32){var t=e.stateNode;try{jn(t,"")}catch(h){K(e,e.return,h)}}if(l&4&&(t=e.stateNode,t!=null)){var a=e.memoizedProps,o=n!==null?n.memoizedProps:a,r=e.type,p=e.updateQueue;if(e.updateQueue=null,p!==null)try{r==="input"&&a.type==="radio"&&a.name!=null&&Mr(t,a),ga(r,o);var u=ga(r,a);for(o=0;o<p.length;o+=2){var f=p[o],v=p[o+1];f==="style"?jr(t,v):f==="dangerouslySetInnerHTML"?Or(t,v):f==="children"?jn(t,v):r0(t,f,v,u)}switch(r){case"input":ya(t,a);break;case"textarea":Ur(t,a);break;case"select":var y=t._wrapperState.wasMultiple;t._wrapperState.wasMultiple=!!a.multiple;var E=a.value;E!=null?en(t,!!a.multiple,E,!1):y!==!!a.multiple&&(a.defaultValue!=null?en(t,!!a.multiple,a.defaultValue,!0):en(t,!!a.multiple,a.multiple?[]:"",!1))}t[Zn]=a}catch(h){K(e,e.return,h)}}break;case 6:if(Pe(s,e),ze(e),l&4){if(e.stateNode===null)throw Error(g(162));u=e.stateNode,f=e.memoizedProps;try{u.nodeValue=f}catch(h){K(e,e.return,h)}}break;case 3:if(Pe(s,e),ze(e),l&4&&n!==null&&n.memoizedState.isDehydrated)try{$n(s.containerInfo)}catch(h){K(e,e.return,h)}break;case 4:Pe(s,e),ze(e);break;case 13:Pe(s,e),ze(e),u=e.child,u.flags&8192&&u.memoizedState!==null&&(u.alternate===null||u.alternate.memoizedState===null)&&(z0=V()),l&4&&nr(e);break;case 22:if(u=n!==null&&n.memoizedState!==null,e.mode&1?(ae=(f=ae)||u,Pe(s,e),ae=f):Pe(s,e),ze(e),l&8192){f=e.memoizedState!==null;e:for(v=null,y=e;;){if(y.tag===5){if(v===null){v=y;try{t=y.stateNode,f?(a=t.style,typeof a.setProperty=="function"?a.setProperty("display","none","important"):a.display="none"):(r=y.stateNode,p=y.memoizedProps.style,o=p!=null&&p.hasOwnProperty("display")?p.display:null,r.style.display=zr("display",o))}catch(h){K(e,e.return,h)}}}else if(y.tag===6){if(v===null)try{y.stateNode.nodeValue=f?"":y.memoizedProps}catch(h){K(e,e.return,h)}}else if((y.tag!==22&&y.tag!==23||y.memoizedState===null||y===e)&&y.child!==null){y.child.return=y,y=y.child;continue}if(y===e)break e;for(;y.sibling===null;){if(y.return===null||y.return===e)break e;v===y&&(v=null),y=y.return}v===y&&(v=null),y.sibling.return=y.return,y=y.sibling}if(f&&!u&&(e.mode&1)!==0)for(T=e,e=e.child;e!==null;){for(u=T=e;T!==null;){switch(f=T,v=f.child,f.tag){case 0:case 11:case 14:case 15:Mn(4,f,f.return);break;case 1:if(Xs(f,f.return),a=f.stateNode,typeof a.componentWillUnmount=="function"){y=f,E=f.return;try{t=y,a.props=t.memoizedProps,a.state=t.memoizedState,a.componentWillUnmount()}catch(h){K(y,E,h)}}break;case 5:Xs(f,f.return);break;case 22:if(f.memoizedState!==null){tr(u);continue}}v!==null?(v.return=f,T=v):tr(u)}e=e.sibling}}break;case 19:Pe(s,e),ze(e),l&4&&nr(e);break;case 21:break;default:Pe(s,e),ze(e)}}function ze(e){var s=e.flags;if(s&2){try{e:{for(var n=e.return;n!==null;){if(ui(n)){var l=n;break e}n=n.return}throw Error(g(160))}switch(l.tag){case 5:var t=l.stateNode;l.flags&32&&(jn(t,""),l.flags&=-33);var a=sr(e);Va(e,a,t);break;case 3:case 4:var o=l.stateNode.containerInfo,r=sr(e);qa(e,r,o);break;default:throw Error(g(161))}}catch(p){K(e,e.return,p)}e.flags&=-3}s&4096&&(e.flags&=-4097)}function bc(e,s,n){T=e,yi(e)}function yi(e,s,n){for(var l=(e.mode&1)!==0;T!==null;){var t=T,a=t.child;if(t.tag===22&&l){var o=t.memoizedState!==null||Sl;if(!o){var r=t.alternate,p=r!==null&&r.memoizedState!==null||ae;r=Sl;var u=ae;if(Sl=o,(ae=p)&&!u)for(T=t;T!==null;)o=T,p=o.child,o.tag===22&&o.memoizedState!==null?ar(t):p!==null?(p.return=o,T=p):ar(t);for(;a!==null;)T=a,yi(a),a=a.sibling;T=t,Sl=r,ae=u}lr(e)}else(t.subtreeFlags&8772)!==0&&a!==null?(a.return=t,T=a):lr(e)}}function lr(e){for(;T!==null;){var s=T;if((s.flags&8772)!==0){var n=s.alternate;try{if((s.flags&8772)!==0)switch(s.tag){case 0:case 11:case 15:ae||Bt(5,s);break;case 1:var l=s.stateNode;if(s.flags&4&&!ae)if(n===null)l.componentDidMount();else{var t=s.elementType===s.type?n.memoizedProps:Le(s.type,n.memoizedProps);l.componentDidUpdate(t,n.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}var a=s.updateQueue;a!==null&&Mo(s,a,l);break;case 3:var o=s.updateQueue;if(o!==null){if(n=null,s.child!==null)switch(s.child.tag){case 5:n=s.child.stateNode;break;case 1:n=s.child.stateNode}Mo(s,o,n)}break;case 5:var r=s.stateNode;if(n===null&&s.flags&4){n=r;var p=s.memoizedProps;switch(s.type){case"button":case"input":case"select":case"textarea":p.autoFocus&&n.focus();break;case"img":p.src&&(n.src=p.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(s.memoizedState===null){var u=s.alternate;if(u!==null){var f=u.memoizedState;if(f!==null){var v=f.dehydrated;v!==null&&$n(v)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(g(163))}ae||s.flags&512&&Ka(s)}catch(y){K(s,s.return,y)}}if(s===e){T=null;break}if(n=s.sibling,n!==null){n.return=s.return,T=n;break}T=s.return}}function tr(e){for(;T!==null;){var s=T;if(s===e){T=null;break}var n=s.sibling;if(n!==null){n.return=s.return,T=n;break}T=s.return}}function ar(e){for(;T!==null;){var s=T;try{switch(s.tag){case 0:case 11:case 15:var n=s.return;try{Bt(4,s)}catch(p){K(s,n,p)}break;case 1:var l=s.stateNode;if(typeof l.componentDidMount=="function"){var t=s.return;try{l.componentDidMount()}catch(p){K(s,t,p)}}var a=s.return;try{Ka(s)}catch(p){K(s,a,p)}break;case 5:var o=s.return;try{Ka(s)}catch(p){K(s,o,p)}}}catch(p){K(s,s.return,p)}if(s===e){T=null;break}var r=s.sibling;if(r!==null){r.return=s.return,T=r;break}T=s.return}}var Hc=Math.ceil,pt=ss.ReactCurrentDispatcher,I0=ss.ReactCurrentOwner,xe=ss.ReactCurrentBatchConfig,_=0,G=null,Q=null,se=0,he=0,Js=Ts(0),Y=0,sl=null,Us=0,kt=0,O0=0,Un=null,ye=null,z0=0,dn=1/0,Ke=null,it=!1,Qa=null,fs=null,Rl=!1,is=null,ut=0,In=0,Za=null,jl=-1,Wl=0;function ue(){return(_&6)!==0?V():jl!==-1?jl:jl=V()}function vs(e){return(e.mode&1)===0?1:(_&2)!==0&&se!==0?se&-se:xc.transition!==null?(Wl===0&&(Wl=Xr()),Wl):(e=M,e!==0||(e=window.event,e=e===void 0?16:ap(e.type)),e)}function Ae(e,s,n){if(50<In)throw In=0,Za=null,Error(g(185));var l=wt(e,s);return l===null?null:(ll(l,s,n),((_&2)===0||l!==G)&&(l===G&&((_&2)===0&&(kt|=s),Y===4&&rs(l,se)),ge(l,n),s===1&&_===0&&(e.mode&1)===0&&(dn=V()+500,Et&&Bs())),l)}function wt(e,s){e.lanes|=s;var n=e.alternate;for(n!==null&&(n.lanes|=s),n=e,e=e.return;e!==null;)e.childLanes|=s,n=e.alternate,n!==null&&(n.childLanes|=s),n=e,e=e.return;return n.tag===3?n.stateNode:null}function fi(e){return(G!==null||Me!==null)&&(e.mode&1)!==0&&(_&2)===0}function ge(e,s){var n=e.callbackNode;xu(e,s);var l=Vl(e,e===G?se:0);if(l===0)n!==null&&uo(n),e.callbackNode=null,e.callbackPriority=0;else if(s=l&-l,e.callbackPriority!==s){if(n!=null&&uo(n),s===1)e.tag===0?Dc(or.bind(null,e)):kp(or.bind(null,e)),Tc(function(){_===0&&Bs()}),n=null;else{switch(Jr(l)){case 1:n=d0;break;case 4:n=Yr;break;case 16:n=ql;break;case 536870912:n=Gr;break;default:n=ql}n=Ti(n,vi.bind(null,e))}e.callbackPriority=s,e.callbackNode=n}}function vi(e,s){if(jl=-1,Wl=0,(_&6)!==0)throw Error(g(327));var n=e.callbackNode;if(an()&&e.callbackNode!==n)return null;var l=Vl(e,e===G?se:0);if(l===0)return null;if((l&30)!==0||(l&e.expiredLanes)!==0||s)s=ct(e,l);else{s=l;var t=_;_|=2;var a=mi();(G!==e||se!==s)&&(Ke=null,dn=V()+500,Ps(e,s));do try{qc();break}catch(r){Fi(e,r)}while(1);T0(),pt.current=a,_=t,Q!==null?s=0:(G=null,se=0,s=Y)}if(s!==0){if(s===2&&(t=Ba(e),t!==0&&(l=t,s=Ya(e,t))),s===1)throw n=sl,Ps(e,0),rs(e,l),ge(e,V()),n;if(s===6)rs(e,l);else{if(t=e.current.alternate,(l&30)===0&&!$c(t)&&(s=ct(e,l),s===2&&(a=Ba(e),a!==0&&(l=a,s=Ya(e,a))),s===1))throw n=sl,Ps(e,0),rs(e,l),ge(e,V()),n;switch(e.finishedWork=t,e.finishedLanes=l,s){case 0:case 1:throw Error(g(345));case 2:xs(e,ye,Ke);break;case 3:if(rs(e,l),(l&130023424)===l&&(s=z0+500-V(),10<s)){if(Vl(e,0)!==0)break;if(t=e.suspendedLanes,(t&l)!==l){ue(),e.pingedLanes|=e.suspendedLanes&t;break}e.timeoutHandle=Pa(xs.bind(null,e,ye,Ke),s);break}xs(e,ye,Ke);break;case 4:if(rs(e,l),(l&4194240)===l)break;for(s=e.eventTimes,t=-1;0<l;){var o=31-Ue(l);a=1<<o,o=s[o],o>t&&(t=o),l&=~a}if(l=t,l=V()-l,l=(120>l?120:480>l?480:1080>l?1080:1920>l?1920:3e3>l?3e3:4320>l?4320:1960*Hc(l/1960))-l,10<l){e.timeoutHandle=Pa(xs.bind(null,e,ye,Ke),l);break}xs(e,ye,Ke);break;case 5:xs(e,ye,Ke);break;default:throw Error(g(329))}}}return ge(e,V()),e.callbackNode===n?vi.bind(null,e):null}function Ya(e,s){var n=Un;return e.current.memoizedState.isDehydrated&&(Ps(e,s).flags|=256),e=ct(e,s),e!==2&&(s=ye,ye=n,s!==null&&Ga(s)),e}function Ga(e){ye===null?ye=e:ye.push.apply(ye,e)}function $c(e){for(var s=e;;){if(s.flags&16384){var n=s.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var l=0;l<n.length;l++){var t=n[l],a=t.getSnapshot;t=t.value;try{if(!Ie(a(),t))return!1}catch{return!1}}}if(n=s.child,s.subtreeFlags&16384&&n!==null)n.return=s,s=n;else{if(s===e)break;for(;s.sibling===null;){if(s.return===null||s.return===e)return!0;s=s.return}s.sibling.return=s.return,s=s.sibling}}return!0}function rs(e,s){for(s&=~O0,s&=~kt,e.suspendedLanes|=s,e.pingedLanes&=~s,e=e.expirationTimes;0<s;){var n=31-Ue(s),l=1<<n;e[n]=-1,s&=~l}}function or(e){if((_&6)!==0)throw Error(g(327));an();var s=Vl(e,0);if((s&1)===0)return ge(e,V()),null;var n=ct(e,s);if(e.tag!==0&&n===2){var l=Ba(e);l!==0&&(s=l,n=Ya(e,l))}if(n===1)throw n=sl,Ps(e,0),rs(e,s),ge(e,V()),n;if(n===6)throw Error(g(345));return e.finishedWork=e.current.alternate,e.finishedLanes=s,xs(e,ye,Ke),ge(e,V()),null}function j0(e,s){var n=_;_|=1;try{return e(s)}finally{_=n,_===0&&(dn=V()+500,Et&&Bs())}}function Is(e){is!==null&&is.tag===0&&(_&6)===0&&an();var s=_;_|=1;var n=xe.transition,l=M;try{if(xe.transition=null,M=1,e)return e()}finally{M=l,xe.transition=n,_=s,(_&6)===0&&Bs()}}function W0(){he=Js.current,j(Js)}function Ps(e,s){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(n!==-1&&(e.timeoutHandle=-1,Cc(n)),Q!==null)for(n=Q.return;n!==null;){var l=n;switch(D0(l),l.tag){case 1:l=l.type.childContextTypes,l!=null&&Xl();break;case 3:cn(),j(Fe),j(oe),R0();break;case 5:S0(l);break;case 4:cn();break;case 13:j(b);break;case 19:j(b);break;case 10:B0(l.type._context);break;case 22:case 23:W0()}n=n.return}if(G=e,Q=e=hs(e.current,null),se=he=s,Y=0,sl=null,O0=kt=Us=0,ye=Un=null,Me!==null){for(s=0;s<Me.length;s++)if(n=Me[s],l=n.interleaved,l!==null){n.interleaved=null;var t=l.next,a=n.pending;if(a!==null){var o=a.next;a.next=t,l.next=o}n.pending=l}Me=null}return e}function Fi(e,s){do{var n=Q;try{if(T0(),Ol.current=rt,ot){for(var l=H.memoizedState;l!==null;){var t=l.queue;t!==null&&(t.pending=null),l=l.next}ot=!1}if(Ms=0,J=Z=H=null,_n=!1,Xn=0,I0.current=null,n===null||n.return===null){Y=1,sl=s,Q=null;break}e:{var a=e,o=n.return,r=n,p=s;if(s=se,r.flags|=32768,p!==null&&typeof p=="object"&&typeof p.then=="function"){var u=p,f=r,v=f.tag;if((f.mode&1)===0&&(v===0||v===11||v===15)){var y=f.alternate;y?(f.updateQueue=y.updateQueue,f.memoizedState=y.memoizedState,f.lanes=y.lanes):(f.updateQueue=null,f.memoizedState=null)}var E=$o(o);if(E!==null){E.flags&=-257,Ko(E,o,r,a,s),E.mode&1&&Ho(a,u,s),s=E,p=u;var h=s.updateQueue;if(h===null){var D=new Set;D.add(p),s.updateQueue=D}else h.add(p);break e}else{if((s&1)===0){Ho(a,u,s),b0();break e}p=Error(g(426))}}else if(W&&r.mode&1){var U=$o(o);if(U!==null){(U.flags&65536)===0&&(U.flags|=256),Ko(U,o,r,a,s),x0(p);break e}}a=p,Y!==4&&(Y=2),Un===null?Un=[a]:Un.push(a),p=U0(p,r),r=o;do{switch(r.tag){case 3:r.flags|=65536,s&=-s,r.lanes|=s;var c=Xp(r,p,s);_o(r,c);break e;case 1:a=p;var i=r.type,d=r.stateNode;if((r.flags&128)===0&&(typeof i.getDerivedStateFromError=="function"||d!==null&&typeof d.componentDidCatch=="function"&&(fs===null||!fs.has(d)))){r.flags|=65536,s&=-s,r.lanes|=s;var F=Jp(r,a,s);_o(r,F);break e}}r=r.return}while(r!==null)}hi(n)}catch(C){s=C,Q===n&&n!==null&&(Q=n=n.return);continue}break}while(1)}function mi(){var e=pt.current;return pt.current=rt,e===null?rt:e}function b0(){(Y===0||Y===3||Y===2)&&(Y=4),G===null||(Us&268435455)===0&&(kt&268435455)===0||rs(G,se)}function ct(e,s){var n=_;_|=2;var l=mi();(G!==e||se!==s)&&(Ke=null,Ps(e,s));do try{Kc();break}catch(t){Fi(e,t)}while(1);if(T0(),_=n,pt.current=l,Q!==null)throw Error(g(261));return G=null,se=0,Y}function Kc(){for(;Q!==null;)gi(Q)}function qc(){for(;Q!==null&&!gu();)gi(Q)}function gi(e){var s=Ci(e.alternate,e,he);e.memoizedProps=e.pendingProps,s===null?hi(e):Q=s,I0.current=null}function hi(e){var s=e;do{var n=s.alternate;if(e=s.return,(s.flags&32768)===0){if(n=Uc(n,s,he),n!==null){Q=n;return}}else{if(n=zc(n,s),n!==null){n.flags&=32767,Q=n;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{Y=6,Q=null;return}}if(s=s.sibling,s!==null){Q=s;return}Q=s=e}while(s!==null);Y===0&&(Y=5)}function xs(e,s,n){var l=M,t=xe.transition;try{xe.transition=null,M=1,Vc(e,s,n,l)}finally{xe.transition=t,M=l}return null}function Vc(e,s,n,l){do an();while(is!==null);if((_&6)!==0)throw Error(g(327));n=e.finishedWork;var t=e.finishedLanes;if(n===null)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(g(177));e.callbackNode=null,e.callbackPriority=0;var a=n.lanes|n.childLanes;if(Au(e,a),e===G&&(Q=G=null,se=0),(n.subtreeFlags&2064)===0&&(n.flags&2064)===0||Rl||(Rl=!0,Ti(ql,function(){return an(),null})),a=(n.flags&15990)!==0,(n.subtreeFlags&15990)!==0||a){a=xe.transition,xe.transition=null;var o=M;M=1;var r=_;_|=4,I0.current=null,Wc(e,n),di(n,e),fc(Sa),Ql=!!Aa,Sa=Aa=null,e.current=n,bc(n),hu(),_=r,M=o,xe.transition=a}else e.current=n;if(Rl&&(Rl=!1,is=e,ut=t),a=e.pendingLanes,a===0&&(fs=null),Tu(n.stateNode),ge(e,V()),s!==null)for(l=e.onRecoverableError,n=0;n<s.length;n++)l(s[n]);if(it)throw it=!1,e=Qa,Qa=null,e;return(ut&1)!==0&&e.tag!==0&&an(),a=e.pendingLanes,(a&1)!==0?e===Za?In++:(In=0,Za=e):In=0,Bs(),null}function an(){if(is!==null){var e=Jr(ut),s=xe.transition,n=M;try{if(xe.transition=null,M=16>e?16:e,is===null)var l=!1;else{if(e=is,is=null,ut=0,(_&6)!==0)throw Error(g(331));var t=_;for(_|=4,T=e.current;T!==null;){var a=T,o=a.child;if((T.flags&16)!==0){var r=a.deletions;if(r!==null){for(var p=0;p<r.length;p++){var u=r[p];for(T=u;T!==null;){var f=T;switch(f.tag){case 0:case 11:case 15:Mn(8,f,a)}var v=f.child;if(v!==null)v.return=f,T=v;else for(;T!==null;){f=T;var y=f.sibling,E=f.return;if(ii(f),f===u){T=null;break}if(y!==null){y.return=E,T=y;break}T=E}}}var h=a.alternate;if(h!==null){var D=h.child;if(D!==null){h.child=null;do{var U=D.sibling;D.sibling=null,D=U}while(D!==null)}}T=a}}if((a.subtreeFlags&2064)!==0&&o!==null)o.return=a,T=o;else e:for(;T!==null;){if(a=T,(a.flags&2048)!==0)switch(a.tag){case 0:case 11:case 15:Mn(9,a,a.return)}var c=a.sibling;if(c!==null){c.return=a.return,T=c;break e}T=a.return}}var i=e.current;for(T=i;T!==null;){o=T;var d=o.child;if((o.subtreeFlags&2064)!==0&&d!==null)d.return=o,T=d;else e:for(o=i;T!==null;){if(r=T,(r.flags&2048)!==0)try{switch(r.tag){case 0:case 11:case 15:Bt(9,r)}}catch(C){K(r,r.return,C)}if(r===o){T=null;break e}var F=r.sibling;if(F!==null){F.return=r.return,T=F;break e}T=r.return}}if(_=t,Bs(),be&&typeof be.onPostCommitFiberRoot=="function")try{be.onPostCommitFiberRoot(vt,e)}catch{}l=!0}return l}finally{M=n,xe.transition=s}}return!1}function rr(e,s,n){s=U0(n,s),s=Xp(e,s,1),ys(e,s),s=ue(),e=wt(e,1),e!==null&&(ll(e,1,s),ge(e,s))}function K(e,s,n){if(e.tag===3)rr(e,e,n);else for(;s!==null;){if(s.tag===3){rr(s,e,n);break}else if(s.tag===1){var l=s.stateNode;if(typeof s.type.getDerivedStateFromError=="function"||typeof l.componentDidCatch=="function"&&(fs===null||!fs.has(l))){e=U0(n,e),e=Jp(s,e,1),ys(s,e),e=ue(),s=wt(s,1),s!==null&&(ll(s,1,e),ge(s,e));break}}s=s.return}}function Qc(e,s,n){var l=e.pingCache;l!==null&&l.delete(s),s=ue(),e.pingedLanes|=e.suspendedLanes&n,G===e&&(se&n)===n&&(Y===4||Y===3&&(se&130023424)===se&&500>V()-z0?Ps(e,0):O0|=n),ge(e,s)}function Ei(e,s){s===0&&((e.mode&1)===0?s=1:(s=hl,hl<<=1,(hl&130023424)===0&&(hl=4194304)));var n=ue();e=wt(e,s),e!==null&&(ll(e,s,n),ge(e,n))}function Zc(e){var s=e.memoizedState,n=0;s!==null&&(n=s.retryLane),Ei(e,n)}function Yc(e,s){var n=0;switch(e.tag){case 13:var l=e.stateNode,t=e.memoizedState;t!==null&&(n=t.retryLane);break;case 19:l=e.stateNode;break;default:throw Error(g(314))}l!==null&&l.delete(s),Ei(e,n)}var Ci;Ci=function(e,s,n){if(e!==null)if(e.memoizedProps!==s.pendingProps||Fe.current)ve=!0;else{if((e.lanes&n)===0&&(s.flags&128)===0)return ve=!1,Oc(e,s,n);ve=(e.flags&131072)!==0}else ve=!1,W&&(s.flags&1048576)!==0&&Ap(s,tt,s.index);switch(s.lanes=0,s.tag){case 2:var l=s.type;e!==null&&(e.alternate=null,s.alternate=null,s.flags|=2),e=s.pendingProps;var t=rn(s,oe.current);tn(s,n),t=L0(null,s,l,e,t,n);var a=N0();return s.flags|=1,typeof t=="object"&&t!==null&&typeof t.render=="function"&&t.$$typeof===void 0?(s.tag=1,s.memoizedState=null,s.updateQueue=null,me(l)?(a=!0,Jl(s)):a=!1,s.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,k0(s),t.updater=Ct,s.stateNode=t,t._reactInternals=s,Ua(s,l,e,n),s=ba(null,s,l,!0,a,n)):(s.tag=0,W&&a&&w0(s),ie(null,s,t,n),s=s.child),s;case 16:l=s.elementType;e:{switch(e!==null&&(e.alternate=null,s.alternate=null,s.flags|=2),e=s.pendingProps,t=l._init,l=t(l._payload),s.type=l,t=s.tag=Xc(l),e=Le(l,e),t){case 0:s=Wa(null,s,l,e,n);break e;case 1:s=Qo(null,s,l,e,n);break e;case 11:s=qo(null,s,l,e,n);break e;case 14:s=Vo(null,s,l,Le(l.type,e),n);break e}throw Error(g(306,l,""))}return s;case 0:return l=s.type,t=s.pendingProps,t=s.elementType===l?t:Le(l,t),Wa(e,s,l,t,n);case 1:return l=s.type,t=s.pendingProps,t=s.elementType===l?t:Le(l,t),Qo(e,s,l,t,n);case 3:e:{if(oi(s),e===null)throw Error(g(387));l=s.pendingProps,a=s.memoizedState,t=a.element,wp(e,s),nt(s,l,null,n);var o=s.memoizedState;if(l=o.element,a.isDehydrated)if(a={element:l,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},s.updateQueue.baseState=a,s.memoizedState=a,s.flags&256){t=Error(g(423)),s=Zo(e,s,l,n,t);break e}else if(l!==t){t=Error(g(424)),s=Zo(e,s,l,n,t);break e}else for(fe=Qe(s.stateNode.containerInfo.firstChild),Ee=s,W=!0,_e=null,n=Pp(s,null,l,n),s.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(pn(),l===t){s=es(e,s,n);break e}ie(e,s,l,n)}s=s.child}return s;case 5:return Lp(s),e===null&&Oa(s),l=s.type,t=s.pendingProps,a=e!==null?e.memoizedProps:null,o=t.children,Ra(l,t)?o=null:a!==null&&Ra(l,a)&&(s.flags|=32),ai(e,s),ie(e,s,o,n),s.child;case 6:return e===null&&Oa(s),null;case 13:return ri(e,s,n);case 4:return A0(s,s.stateNode.containerInfo),l=s.pendingProps,e===null?s.child=un(s,null,l,n):ie(e,s,l,n),s.child;case 11:return l=s.type,t=s.pendingProps,t=s.elementType===l?t:Le(l,t),qo(e,s,l,t,n);case 7:return ie(e,s,s.pendingProps,n),s.child;case 8:return ie(e,s,s.pendingProps.children,n),s.child;case 12:return ie(e,s,s.pendingProps.children,n),s.child;case 10:e:{if(l=s.type._context,t=s.pendingProps,a=s.memoizedProps,o=t.value,I(et,l._currentValue),l._currentValue=o,a!==null)if(Ie(a.value,o)){if(a.children===t.children&&!Fe.current){s=es(e,s,n);break e}}else for(a=s.child,a!==null&&(a.return=s);a!==null;){var r=a.dependencies;if(r!==null){o=a.child;for(var p=r.firstContext;p!==null;){if(p.context===l){if(a.tag===1){p=Ge(-1,n&-n),p.tag=2;var u=a.updateQueue;if(u!==null){u=u.shared;var f=u.pending;f===null?p.next=p:(p.next=f.next,f.next=p),u.pending=p}}a.lanes|=n,p=a.alternate,p!==null&&(p.lanes|=n),_a(a.return,n,s),r.lanes|=n;break}p=p.next}}else if(a.tag===10)o=a.type===s.type?null:a.child;else if(a.tag===18){if(o=a.return,o===null)throw Error(g(341));o.lanes|=n,r=o.alternate,r!==null&&(r.lanes|=n),_a(o,n,s),o=a.sibling}else o=a.child;if(o!==null)o.return=a;else for(o=a;o!==null;){if(o===s){o=null;break}if(a=o.sibling,a!==null){a.return=o.return,o=a;break}o=o.return}a=o}ie(e,s,t.children,n),s=s.child}return s;case 9:return t=s.type,l=s.pendingProps.children,tn(s,n),t=Se(t),l=l(t),s.flags|=1,ie(e,s,l,n),s.child;case 14:return l=s.type,t=Le(l,s.pendingProps),t=Le(l.type,t),Vo(e,s,l,t,n);case 15:return li(e,s,s.type,s.pendingProps,n);case 17:return l=s.type,t=s.pendingProps,t=s.elementType===l?t:Le(l,t),e!==null&&(e.alternate=null,s.alternate=null,s.flags|=2),s.tag=1,me(l)?(e=!0,Jl(s)):e=!1,tn(s,n),xp(s,l,t),Ua(s,l,t,n),ba(null,s,l,!0,e,n);case 19:return pi(e,s,n);case 22:return ti(e,s,n)}throw Error(g(156,s.tag))};function Ti(e,s){return Zr(e,s)}function Gc(e,s,n,l){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=s,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=l,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function De(e,s,n,l){return new Gc(e,s,n,l)}function H0(e){return e=e.prototype,!(!e||!e.isReactComponent)}function Xc(e){if(typeof e=="function")return H0(e)?1:0;if(e!=null){if(e=e.$$typeof,e===i0)return 11;if(e===u0)return 14}return 2}function hs(e,s){var n=e.alternate;return n===null?(n=De(e.tag,s,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=s,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=e.flags&14680064,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,s=e.dependencies,n.dependencies=s===null?null:{lanes:s.lanes,firstContext:s.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function bl(e,s,n,l,t,a){var o=2;if(l=e,typeof e=="function")H0(e)&&(o=1);else if(typeof e=="string")o=5;else e:switch(e){case Hs:return Ls(n.children,t,a,s);case p0:o=8,t|=8;break;case pa:return e=De(12,n,s,t|2),e.elementType=pa,e.lanes=a,e;case ia:return e=De(13,n,s,t),e.elementType=ia,e.lanes=a,e;case ua:return e=De(19,n,s,t),e.elementType=ua,e.lanes=a,e;case Lr:return dt(n,t,a,s);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case Rr:o=10;break e;case Pr:o=9;break e;case i0:o=11;break e;case u0:o=14;break e;case ts:o=16,l=null;break e}throw Error(g(130,e==null?e:typeof e,""))}return s=De(o,n,s,t),s.elementType=e,s.type=l,s.lanes=a,s}function Ls(e,s,n,l){return e=De(7,e,l,s),e.lanes=n,e}function dt(e,s,n,l){return e=De(22,e,l,s),e.elementType=Lr,e.lanes=n,e.stateNode={},e}function ta(e,s,n){return e=De(6,e,null,s),e.lanes=n,e}function aa(e,s,n){return s=De(4,e.children!==null?e.children:[],e.key,s),s.lanes=n,s.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},s}function Jc(e,s,n,l,t){this.tag=s,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=jt(0),this.expirationTimes=jt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=jt(0),this.identifierPrefix=l,this.onRecoverableError=t,this.mutableSourceEagerHydrationData=null}function $0(e,s,n,l,t,a,o,r,p){return e=new Jc(e,s,n,r,p),s===1?(s=1,a===!0&&(s|=8)):s=0,a=De(3,null,null,s),e.current=a,a.stateNode=e,a.memoizedState={element:l,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},k0(a),e}function ed(e,s,n){var l=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:bs,key:l==null?null:""+l,children:e,containerInfo:s,implementation:n}}function Bi(e){if(!e)return gs;e=e._reactInternals;e:{if(zs(e)!==e||e.tag!==1)throw Error(g(170));var s=e;do{switch(s.tag){case 3:s=s.stateNode.context;break e;case 1:if(me(s.type)){s=s.stateNode.__reactInternalMemoizedMergedChildContext;break e}}s=s.return}while(s!==null);throw Error(g(171))}if(e.tag===1){var n=e.type;if(me(n))return Bp(e,n,s)}return s}function ki(e,s,n,l,t,a,o,r,p){return e=$0(n,l,!0,e,t,a,o,r,p),e.context=Bi(null),n=e.current,l=ue(),t=vs(n),a=Ge(l,t),a.callback=s!=null?s:null,ys(n,a),e.current.lanes=t,ll(e,t,l),ge(e,l),e}function Dt(e,s,n,l){var t=s.current,a=ue(),o=vs(t);return n=Bi(n),s.context===null?s.context=n:s.pendingContext=n,s=Ge(a,o),s.payload={element:e},l=l===void 0?null:l,l!==null&&(s.callback=l),ys(t,s),e=Ae(t,o,a),e!==null&&Il(e,t,o),o}function yt(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function pr(e,s){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var n=e.retryLane;e.retryLane=n!==0&&n<s?n:s}}function K0(e,s){pr(e,s),(e=e.alternate)&&pr(e,s)}function sd(){return null}var wi=typeof reportError=="function"?reportError:function(e){console.error(e)};function q0(e){this._internalRoot=e}xt.prototype.render=q0.prototype.render=function(e){var s=this._internalRoot;if(s===null)throw Error(g(409));Dt(e,s,null,null)};xt.prototype.unmount=q0.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var s=e.containerInfo;Is(function(){Dt(null,e,null,null)}),s[Je]=null}};function xt(e){this._internalRoot=e}xt.prototype.unstable_scheduleHydration=function(e){if(e){var s=np();e={blockedOn:null,target:e,priority:s};for(var n=0;n<os.length&&s!==0&&s<os[n].priority;n++);os.splice(n,0,e),n===0&&tp(e)}};function V0(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function At(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function ir(){}function nd(e,s,n,l,t){if(t){if(typeof l=="function"){var a=l;l=function(){var u=yt(o);a.call(u)}}var o=ki(s,l,e,0,null,!1,!1,"",ir);return e._reactRootContainer=o,e[Je]=o.current,Vn(e.nodeType===8?e.parentNode:e),Is(),o}for(;t=e.lastChild;)e.removeChild(t);if(typeof l=="function"){var r=l;l=function(){var u=yt(p);r.call(u)}}var p=$0(e,0,!1,null,null,!1,!1,"",ir);return e._reactRootContainer=p,e[Je]=p.current,Vn(e.nodeType===8?e.parentNode:e),Is(function(){Dt(s,p,n,l)}),p}function St(e,s,n,l,t){var a=n._reactRootContainer;if(a){var o=a;if(typeof t=="function"){var r=t;t=function(){var p=yt(o);r.call(p)}}Dt(s,o,e,t)}else o=nd(n,s,e,t,l);return yt(o)}ep=function(e){switch(e.tag){case 3:var s=e.stateNode;if(s.current.memoizedState.isDehydrated){var n=xn(s.pendingLanes);n!==0&&(y0(s,n|1),ge(s,V()),(_&6)===0&&(dn=V()+500,Bs()))}break;case 13:var l=ue();Is(function(){return Ae(e,1,l)}),K0(e,1)}};f0=function(e){if(e.tag===13){var s=ue();Ae(e,134217728,s),K0(e,134217728)}};sp=function(e){if(e.tag===13){var s=ue(),n=vs(e);Ae(e,n,s),K0(e,n)}};np=function(){return M};lp=function(e,s){var n=M;try{return M=e,s()}finally{M=n}};Ea=function(e,s,n){switch(s){case"input":if(ya(e,n),s=n.name,n.type==="radio"&&s!=null){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+s)+'][type="radio"]'),s=0;s<n.length;s++){var l=n[s];if(l!==e&&l.form===e.form){var t=ht(l);if(!t)throw Error(g(90));_r(l),ya(l,t)}}}break;case"textarea":Ur(e,n);break;case"select":s=n.value,s!=null&&en(e,!!n.multiple,s,!1)}};Hr=j0;$r=Is;var ld={usingClientEntryPoint:!1,Events:[al,Vs,ht,Wr,br,j0]},kn={findFiberByHostInstance:As,bundleType:0,version:"18.1.0",rendererPackageName:"react-dom"},td={bundleType:kn.bundleType,version:kn.version,rendererPackageName:kn.rendererPackageName,rendererConfig:kn.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ss.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=Vr(e),e===null?null:e.stateNode},findFiberByHostInstance:kn.findFiberByHostInstance||sd,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.1.0-next-22edb9f77-20220426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!="undefined"){var Pl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Pl.isDisabled&&Pl.supportsFiber)try{vt=Pl.inject(td),be=Pl}catch{}}Te.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ld;Te.createPortal=function(e,s){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!V0(s))throw Error(g(200));return ed(e,s,null,n)};Te.createRoot=function(e,s){if(!V0(e))throw Error(g(299));var n=!1,l="",t=wi;return s!=null&&(s.unstable_strictMode===!0&&(n=!0),s.identifierPrefix!==void 0&&(l=s.identifierPrefix),s.onRecoverableError!==void 0&&(t=s.onRecoverableError)),s=$0(e,1,!1,null,null,n,!1,l,t),e[Je]=s.current,Vn(e.nodeType===8?e.parentNode:e),new q0(s)};Te.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var s=e._reactInternals;if(s===void 0)throw typeof e.render=="function"?Error(g(188)):(e=Object.keys(e).join(","),Error(g(268,e)));return e=Vr(s),e=e===null?null:e.stateNode,e};Te.flushSync=function(e){return Is(e)};Te.hydrate=function(e,s,n){if(!At(s))throw Error(g(200));return St(null,e,s,!0,n)};Te.hydrateRoot=function(e,s,n){if(!V0(e))throw Error(g(405));var l=n!=null&&n.hydratedSources||null,t=!1,a="",o=wi;if(n!=null&&(n.unstable_strictMode===!0&&(t=!0),n.identifierPrefix!==void 0&&(a=n.identifierPrefix),n.onRecoverableError!==void 0&&(o=n.onRecoverableError)),s=ki(s,null,e,1,n!=null?n:null,t,!1,a,o),e[Je]=s.current,Vn(e),l)for(e=0;e<l.length;e++)n=l[e],t=n._getVersion,t=t(n._source),s.mutableSourceEagerHydrationData==null?s.mutableSourceEagerHydrationData=[n,t]:s.mutableSourceEagerHydrationData.push(n,t);return new xt(s)};Te.render=function(e,s,n){if(!At(s))throw Error(g(200));return St(null,e,s,!1,n)};Te.unmountComponentAtNode=function(e){if(!At(e))throw Error(g(40));return e._reactRootContainer?(Is(function(){St(null,null,e,!1,function(){e._reactRootContainer=null,e[Je]=null})}),!0):!1};Te.unstable_batchedUpdates=j0;Te.unstable_renderSubtreeIntoContainer=function(e,s,n,l){if(!At(n))throw Error(g(200));if(e==null||e._reactInternals===void 0)throw Error(g(38));return St(e,s,n,!1,l)};Te.version="18.1.0-next-22edb9f77-20220426";function Di(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__=="undefined"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Di)}catch(e){console.error(e)}}Di(),wr.exports=Te;var ur=wr.exports;oa.createRoot=ur.createRoot,oa.hydrateRoot=ur.hydrateRoot;function ft(){return ft=Object.assign||function(e){for(var s=1;s<arguments.length;s++){var n=arguments[s];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},ft.apply(this,arguments)}var Rs;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(Rs||(Rs={}));var cr=function(e){return e},dr="beforeunload",ad="hashchange",od="popstate";function rd(e){e===void 0&&(e={});var s=e,n=s.window,l=n===void 0?document.defaultView:n,t=l.history;function a(){var m=Es(l.location.hash.substr(1)),A=m.pathname,x=A===void 0?"/":A,O=m.search,re=O===void 0?"":O,pe=m.hash,ns=pe===void 0?"":pe,Oe=t.state||{};return[Oe.idx,cr({pathname:x,search:re,hash:ns,state:Oe.usr||null,key:Oe.key||"default"})]}var o=null;function r(){if(o)E.call(o),o=null;else{var m=Rs.Pop,A=a(),x=A[0],O=A[1];if(E.length){if(x!=null){var re=f-x;re&&(o={action:m,location:O,retry:function(){k(re*-1)}},k(re))}}else d(m)}}l.addEventListener(od,r),l.addEventListener(ad,function(){var m=a(),A=m[1];On(A)!==On(v)&&r()});var p=Rs.Pop,u=a(),f=u[0],v=u[1],y=fr(),E=fr();f==null&&(f=0,t.replaceState(ft({},t.state,{idx:f}),""));function h(){var m=document.querySelector("base"),A="";if(m&&m.getAttribute("href")){var x=l.location.href,O=x.indexOf("#");A=O===-1?x:x.slice(0,O)}return A}function D(m){return h()+"#"+(typeof m=="string"?m:On(m))}function U(m,A){return A===void 0&&(A=null),cr(ft({pathname:v.pathname,hash:"",search:""},typeof m=="string"?Es(m):m,{state:A,key:pd()}))}function c(m,A){return[{usr:m.state,key:m.key,idx:A},D(m)]}function i(m,A,x){return!E.length||(E.call({action:m,location:A,retry:x}),!1)}function d(m){p=m;var A=a();f=A[0],v=A[1],y.call({action:p,location:v})}function F(m,A){var x=Rs.Push,O=U(m,A);function re(){F(m,A)}if(i(x,O,re)){var pe=c(O,f+1),ns=pe[0],Oe=pe[1];try{t.pushState(ns,"",Oe)}catch{l.location.assign(Oe)}d(x)}}function C(m,A){var x=Rs.Replace,O=U(m,A);function re(){C(m,A)}if(i(x,O,re)){var pe=c(O,f),ns=pe[0],Oe=pe[1];t.replaceState(ns,"",Oe),d(x)}}function k(m){t.go(m)}var w={get action(){return p},get location(){return v},createHref:D,push:F,replace:C,go:k,back:function(){k(-1)},forward:function(){k(1)},listen:function(A){return y.push(A)},block:function(A){var x=E.push(A);return E.length===1&&l.addEventListener(dr,yr),function(){x(),E.length||l.removeEventListener(dr,yr)}}};return w}function yr(e){e.preventDefault(),e.returnValue=""}function fr(){var e=[];return{get length(){return e.length},push:function(n){return e.push(n),function(){e=e.filter(function(l){return l!==n})}},call:function(n){e.forEach(function(l){return l&&l(n)})}}}function pd(){return Math.random().toString(36).substr(2,8)}function On(e){var s=e.pathname,n=s===void 0?"/":s,l=e.search,t=l===void 0?"":l,a=e.hash,o=a===void 0?"":a;return t&&t!=="?"&&(n+=t.charAt(0)==="?"?t:"?"+t),o&&o!=="#"&&(n+=o.charAt(0)==="#"?o:"#"+o),n}function Es(e){var s={};if(e){var n=e.indexOf("#");n>=0&&(s.hash=e.substr(n),e=e.substr(0,n));var l=e.indexOf("?");l>=0&&(s.search=e.substr(l),e=e.substr(0,l)),e&&(s.pathname=e)}return s}/**
 * React Router v6.3.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */const Q0=N.exports.createContext(null),Z0=N.exports.createContext(null),Rt=N.exports.createContext({outlet:null,matches:[]});function $e(e,s){if(!e)throw new Error(s)}function id(e,s,n){n===void 0&&(n="/");let l=typeof s=="string"?Es(s):s,t=Si(l.pathname||"/",n);if(t==null)return null;let a=xi(e);ud(a);let o=null;for(let r=0;o==null&&r<a.length;++r)o=hd(a[r],t);return o}function xi(e,s,n,l){return s===void 0&&(s=[]),n===void 0&&(n=[]),l===void 0&&(l=""),e.forEach((t,a)=>{let o={relativePath:t.path||"",caseSensitive:t.caseSensitive===!0,childrenIndex:a,route:t};o.relativePath.startsWith("/")&&(o.relativePath.startsWith(l)||$e(!1),o.relativePath=o.relativePath.slice(l.length));let r=Fs([l,o.relativePath]),p=n.concat(o);t.children&&t.children.length>0&&(t.index===!0&&$e(!1),xi(t.children,s,p,r)),!(t.path==null&&!t.index)&&s.push({path:r,score:md(r,t.index),routesMeta:p})}),s}function ud(e){e.sort((s,n)=>s.score!==n.score?n.score-s.score:gd(s.routesMeta.map(l=>l.childrenIndex),n.routesMeta.map(l=>l.childrenIndex)))}const cd=/^:\w+$/,dd=3,yd=2,fd=1,vd=10,Fd=-2,vr=e=>e==="*";function md(e,s){let n=e.split("/"),l=n.length;return n.some(vr)&&(l+=Fd),s&&(l+=yd),n.filter(t=>!vr(t)).reduce((t,a)=>t+(cd.test(a)?dd:a===""?fd:vd),l)}function gd(e,s){return e.length===s.length&&e.slice(0,-1).every((l,t)=>l===s[t])?e[e.length-1]-s[s.length-1]:0}function hd(e,s){let{routesMeta:n}=e,l={},t="/",a=[];for(let o=0;o<n.length;++o){let r=n[o],p=o===n.length-1,u=t==="/"?s:s.slice(t.length)||"/",f=Ed({path:r.relativePath,caseSensitive:r.caseSensitive,end:p},u);if(!f)return null;Object.assign(l,f.params);let v=r.route;a.push({params:l,pathname:Fs([t,f.pathname]),pathnameBase:Ri(Fs([t,f.pathnameBase])),route:v}),f.pathnameBase!=="/"&&(t=Fs([t,f.pathnameBase]))}return a}function Ed(e,s){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[n,l]=Cd(e.path,e.caseSensitive,e.end),t=s.match(n);if(!t)return null;let a=t[0],o=a.replace(/(.)\/+$/,"$1"),r=t.slice(1);return{params:l.reduce((u,f,v)=>{if(f==="*"){let y=r[v]||"";o=a.slice(0,a.length-y.length).replace(/(.)\/+$/,"$1")}return u[f]=Td(r[v]||""),u},{}),pathname:a,pathnameBase:o,pattern:e}}function Cd(e,s,n){s===void 0&&(s=!1),n===void 0&&(n=!0);let l=[],t="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,(o,r)=>(l.push(r),"([^\\/]+)"));return e.endsWith("*")?(l.push("*"),t+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):t+=n?"\\/*$":"(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)",[new RegExp(t,s?void 0:"i"),l]}function Td(e,s){try{return decodeURIComponent(e)}catch{return e}}function Bd(e,s){s===void 0&&(s="/");let{pathname:n,search:l="",hash:t=""}=typeof e=="string"?Es(e):e;return{pathname:n?n.startsWith("/")?n:kd(n,s):s,search:Dd(l),hash:xd(t)}}function kd(e,s){let n=s.replace(/\/+$/,"").split("/");return e.split("/").forEach(t=>{t===".."?n.length>1&&n.pop():t!=="."&&n.push(t)}),n.length>1?n.join("/"):"/"}function Ai(e,s,n){let l=typeof e=="string"?Es(e):e,t=e===""||l.pathname===""?"/":l.pathname,a;if(t==null)a=n;else{let r=s.length-1;if(t.startsWith("..")){let p=t.split("/");for(;p[0]==="..";)p.shift(),r-=1;l.pathname=p.join("/")}a=r>=0?s[r]:"/"}let o=Bd(l,a);return t&&t!=="/"&&t.endsWith("/")&&!o.pathname.endsWith("/")&&(o.pathname+="/"),o}function wd(e){return e===""||e.pathname===""?"/":typeof e=="string"?Es(e).pathname:e.pathname}function Si(e,s){if(s==="/")return e;if(!e.toLowerCase().startsWith(s.toLowerCase()))return null;let n=e.charAt(s.length);return n&&n!=="/"?null:e.slice(s.length)||"/"}const Fs=e=>e.join("/").replace(/\/\/+/g,"/"),Ri=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),Dd=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,xd=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e;function Ad(e){rl()||$e(!1);let{basename:s,navigator:n}=N.exports.useContext(Q0),{hash:l,pathname:t,search:a}=Pi(e),o=t;if(s!=="/"){let r=wd(e),p=r!=null&&r.endsWith("/");o=t==="/"?s+(p?"/":""):Fs([s,t])}return n.createHref({pathname:o,search:a,hash:l})}function rl(){return N.exports.useContext(Z0)!=null}function pl(){return rl()||$e(!1),N.exports.useContext(Z0).location}function Sd(){rl()||$e(!1);let{basename:e,navigator:s}=N.exports.useContext(Q0),{matches:n}=N.exports.useContext(Rt),{pathname:l}=pl(),t=JSON.stringify(n.map(r=>r.pathnameBase)),a=N.exports.useRef(!1);return N.exports.useEffect(()=>{a.current=!0}),N.exports.useCallback(function(r,p){if(p===void 0&&(p={}),!a.current)return;if(typeof r=="number"){s.go(r);return}let u=Ai(r,JSON.parse(t),l);e!=="/"&&(u.pathname=Fs([e,u.pathname])),(p.replace?s.replace:s.push)(u,p.state)},[e,s,t,l])}function Pi(e){let{matches:s}=N.exports.useContext(Rt),{pathname:n}=pl(),l=JSON.stringify(s.map(t=>t.pathnameBase));return N.exports.useMemo(()=>Ai(e,JSON.parse(l),n),[e,l,n])}function Rd(e,s){rl()||$e(!1);let{matches:n}=N.exports.useContext(Rt),l=n[n.length-1],t=l?l.params:{};l&&l.pathname;let a=l?l.pathnameBase:"/";l&&l.route;let o=pl(),r;if(s){var p;let y=typeof s=="string"?Es(s):s;a==="/"||((p=y.pathname)==null?void 0:p.startsWith(a))||$e(!1),r=y}else r=o;let u=r.pathname||"/",f=a==="/"?u:u.slice(a.length)||"/",v=id(e,{pathname:f});return Pd(v&&v.map(y=>Object.assign({},y,{params:Object.assign({},t,y.params),pathname:Fs([a,y.pathname]),pathnameBase:y.pathnameBase==="/"?a:Fs([a,y.pathnameBase])})),n)}function Pd(e,s){return s===void 0&&(s=[]),e==null?null:e.reduceRight((n,l,t)=>N.exports.createElement(Rt.Provider,{children:l.route.element!==void 0?l.route.element:n,value:{outlet:n,matches:s.concat(e.slice(0,t+1))}}),null)}function Ws(e){$e(!1)}function Ld(e){let{basename:s="/",children:n=null,location:l,navigationType:t=Rs.Pop,navigator:a,static:o=!1}=e;rl()&&$e(!1);let r=Ri(s),p=N.exports.useMemo(()=>({basename:r,navigator:a,static:o}),[r,a,o]);typeof l=="string"&&(l=Es(l));let{pathname:u="/",search:f="",hash:v="",state:y=null,key:E="default"}=l,h=N.exports.useMemo(()=>{let D=Si(u,r);return D==null?null:{pathname:D,search:f,hash:v,state:y,key:E}},[r,u,f,v,y,E]);return h==null?null:N.exports.createElement(Q0.Provider,{value:p},N.exports.createElement(Z0.Provider,{children:n,value:{location:h,navigationType:t}}))}function Nd(e){let{children:s,location:n}=e;return Rd(Xa(s),n)}function Xa(e){let s=[];return N.exports.Children.forEach(e,n=>{if(!N.exports.isValidElement(n))return;if(n.type===N.exports.Fragment){s.push.apply(s,Xa(n.props.children));return}n.type!==Ws&&$e(!1);let l={caseSensitive:n.props.caseSensitive,element:n.props.element,index:n.props.index,path:n.props.path};n.props.children&&(l.children=Xa(n.props.children)),s.push(l)}),s}/**
 * React Router DOM v6.3.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function Ja(){return Ja=Object.assign||function(e){for(var s=1;s<arguments.length;s++){var n=arguments[s];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},Ja.apply(this,arguments)}function _d(e,s){if(e==null)return{};var n={},l=Object.keys(e),t,a;for(a=0;a<l.length;a++)t=l[a],!(s.indexOf(t)>=0)&&(n[t]=e[t]);return n}const Md=["onClick","reloadDocument","replace","state","target","to"];function Ud(e){let{basename:s,children:n,window:l}=e,t=N.exports.useRef();t.current==null&&(t.current=rd({window:l}));let a=t.current,[o,r]=N.exports.useState({action:a.action,location:a.location});return N.exports.useLayoutEffect(()=>a.listen(r),[a]),N.exports.createElement(Ld,{basename:s,children:n,location:o.location,navigationType:o.action,navigator:a})}function Id(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}const Li=N.exports.forwardRef(function(s,n){let{onClick:l,reloadDocument:t,replace:a=!1,state:o,target:r,to:p}=s,u=_d(s,Md),f=Ad(p),v=Od(p,{replace:a,state:o,target:r});function y(E){l&&l(E),!E.defaultPrevented&&!t&&v(E)}return N.exports.createElement("a",Ja({},u,{href:f,onClick:y,ref:n,target:r}))});function Od(e,s){let{target:n,replace:l,state:t}=s===void 0?{}:s,a=Sd(),o=pl(),r=Pi(e);return N.exports.useCallback(p=>{if(p.button===0&&(!n||n==="_self")&&!Id(p)){p.preventDefault();let u=!!l||On(o)===On(r);a(e,{replace:u,state:t})}},[o,a,r,l,t,n,e])}var Pt={exports:{}},Lt={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var zd=N.exports,jd=Symbol.for("react.element"),Wd=Symbol.for("react.fragment"),bd=Object.prototype.hasOwnProperty,Hd=zd.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,$d={key:!0,ref:!0,__self:!0,__source:!0};function Ni(e,s,n){var l,t={},a=null,o=null;n!==void 0&&(a=""+n),s.key!==void 0&&(a=""+s.key),s.ref!==void 0&&(o=s.ref);for(l in s)bd.call(s,l)&&!$d.hasOwnProperty(l)&&(t[l]=s[l]);if(e&&e.defaultProps)for(l in s=e.defaultProps,s)t[l]===void 0&&(t[l]=s[l]);return{$$typeof:jd,type:e,key:a,ref:o,props:t,_owner:Hd.current}}Lt.Fragment=Wd;Lt.jsx=Ni;Lt.jsxs=Ni;Pt.exports=Lt;const S=Pt.exports.jsx,Ve=Pt.exports.jsxs,Kd=Pt.exports.Fragment;function qd(){return S("div",{className:"markdown-body",dangerouslySetInnerHTML:{__html:`<h1>Chapter 3: \u7C7B\u578B\u5168\u89E3</h1>
<p><code>unknown</code> \u8868\u793A\u4EFB\u4F55\u503C\uFF0C\u4F46\u662F\u5F53\u8FDB\u884C\u7279\u5B9A\u64CD\u4F5C\u524D ts \u4F1A\u8981\u6C42\u7EC6\u5316\u7C7B\u578B</p>
<ol>
<li>ts \u4E0D\u4F1A\u628A\u4EFB\u4F55\u503C\u63A8\u5BFC\u4E3A <code>unknown</code>\uFF0C\u9700\u8981\u663E\u5F0F\u6307\u5B9A</li>
<li><code>unknown</code> \u7C7B\u578B\u53D8\u91CF\u53EF\u4EE5\u6BD4\u8F83</li>
</ol>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let a: unknown' >a</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">unknown</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let b: boolean' >b</data-lsp></span><span style="color: #000000"> = </span><span style="color: #001080"><data-lsp lsp='let a: unknown' >a</data-lsp></span><span style="color: #000000"> === </span><span style="color: #098658">123</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let c: any' >c</data-lsp></span><span style="color: #000000"> = </span><span style="color: #001080"><data-err><data-lsp lsp='let a: unknown' >a</data-lsp></data-err></span><span style="color: #000000"> + </span><span style="color: #098658">10</span><span style="color: #000000">;</span></div><span class="error"><span>Object is of type 'unknown'.</span><span class="code">2571</span></span><span class="error-behind">Object is of type 'unknown'.</span><div class='line'><span style="color: #AF00DB">if</span><span style="color: #000000"> (</span><span style="color: #0000FF">typeof</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let a: unknown' >a</data-lsp></span><span style="color: #000000"> === </span><span style="color: #A31515">"number"</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let d: number' >d</data-lsp></span><span style="color: #000000"> = </span><span style="color: #001080"><data-lsp lsp='let a: number' >a</data-lsp></span><span style="color: #000000"> + </span><span style="color: #098658">10</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div></code></div></pre>
<p>\u7C7B\u578B\u5B57\u9762\u91CF\uFF1A\u4EC5\u8868\u793A\u4E00\u4E2A\u503C\u7684\u7C7B\u578B</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let real: true' >real</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">true</span><span style="color: #000000"> = </span><span style="color: #0000FF">true</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let exact: 1' >exact</data-lsp></span><span style="color: #000000">: </span><span style="color: #098658">1</span><span style="color: #000000"> = </span><span style="color: #098658">1</span><span style="color: #000000">;</span></div></code></div></pre>
<p><code>object</code> \u7C7B\u578B\u8868\u793A\u4E00\u4E2A\u975E <code>null</code> \u7684\u5BF9\u8C61\uFF0C\u4F46\u662F\u5BF9\u503C\u5F97\u8BBF\u95EE\u4E00\u65E0\u6240\u77E5</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let message: object' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">object</span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) name: string' >name</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">"hello"</span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #001080"><data-lsp lsp='let message: object' >message</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-err><data-lsp lsp='any' >name</data-lsp></data-err></span><span style="color: #000000">;</span></div><span class="error"><span>Property 'name' does not exist on type 'object'.</span><span class="code">2339</span></span><span class="error-behind">Property 'name' does not exist on type 'object'.</span></code></div></pre>
<p>class constructor \u4E2D\u7684 <code>public</code> \u662F <code>this.property = property</code> \u7684\u7B80\u5199</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">class</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='class Person' >Person</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">constructor</span><span style="color: #000000">(</span><span style="color: #0000FF">public</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(property) Person.name: string' >name</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">) {}</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">// \u7B49\u4EF7\u4E8E\uFF1A</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">// constructor(name: string) { this.name = name; }</span></div><div class='line'><span style="color: #000000">}</span></div></code></div></pre>
<p><code>{}</code> \u548C <code>Object</code> \u4E5F\u53EF\u4EE5\u7528\u6765\u58F0\u660E\u5BF9\u8C61\u7C7B\u578B\uFF0C\u6709\u7EC6\u5FAE\u5DEE\u522B\uFF0C\u4E0D\u63A8\u8350\u4F7F\u7528\uFF08P41\uFF09</p>
<p>\u7C7B\u578B\u522B\u540D\u4F7F\u7528\u5757\u7EA7\u4F5C\u7528\u57DF</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function test(): void' >test</data-lsp></span><span style="color: #000000">() {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Person = {&#10;    name: string;&#10;}' >Person</data-lsp></span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) name: string' >name</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">if</span><span style="color: #000000"> (</span><span style="color: #267F99"><data-lsp lsp='var Math: Math' >Math</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) Math.random(): number' >random</data-lsp></span><span style="color: #000000">() &gt; </span><span style="color: #098658">0.5</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Person = {&#10;    age: number;&#10;}' >Person</data-lsp></span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) age: number' >age</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let person: Person' >person</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type Person = {&#10;    age: number;&#10;}' >Person</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">}</span></div></code></div></pre>
<p>\u5143\u7EC4</p>
<ul>
<li>\u652F\u6301\u53EF\u9009\u7B26\u53F7 ?</li>
<li>\u652F\u6301\u5269\u4F59\u5143\u7D20 ...</li>
</ul>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let ticket: [string, number]' >ticket</data-lsp></span><span style="color: #000000">: [</span><span style="color: #267F99">string</span><span style="color: #000000">, </span><span style="color: #267F99">number</span><span style="color: #000000">] = [</span><span style="color: #A31515">"bqh"</span><span style="color: #000000">, </span><span style="color: #098658">10185</span><span style="color: #000000">];</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let trains: [string, (number | undefined)?][]' >trains</data-lsp></span><span style="color: #000000">: [</span><span style="color: #267F99">string</span><span style="color: #000000">, </span><span style="color: #267F99">number</span><span style="color: #000000">?][] = [[</span><span style="color: #A31515">"a"</span><span style="color: #000000">, </span><span style="color: #098658">123</span><span style="color: #000000">], [</span><span style="color: #A31515">"b"</span><span style="color: #000000">]];</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let list: [number, boolean, ...string[]]' >list</data-lsp></span><span style="color: #000000">: [</span><span style="color: #267F99">number</span><span style="color: #000000">, </span><span style="color: #267F99">boolean</span><span style="color: #000000">, ...</span><span style="color: #267F99">string</span><span style="color: #000000">[]] = [</span><span style="color: #098658">1</span><span style="color: #000000">, </span><span style="color: #0000FF">true</span><span style="color: #000000">, </span><span style="color: #A31515">"a"</span><span style="color: #000000">, </span><span style="color: #A31515">"b"</span><span style="color: #000000">, </span><span style="color: #A31515">"c"</span><span style="color: #000000">];</span></div></code></div></pre>
<p>\u6570\u7EC4\u7C7B\u578B\u6709 <code>readonly</code> \u6807\u8BC6\uFF0C\u53EA\u8BFB\u6570\u7EC4\u4E0D\u518D\u80FD\u88AB\u6539\u53D8</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let arr: readonly number[]' >arr</data-lsp></span><span style="color: #000000">: </span><span style="color: #0000FF">readonly</span><span style="color: #000000"> </span><span style="color: #267F99">number</span><span style="color: #000000">[] = [</span><span style="color: #098658">1</span><span style="color: #000000">, </span><span style="color: #098658">2</span><span style="color: #000000">, </span><span style="color: #098658">3</span><span style="color: #000000">];</span></div><div class='line'><span style="color: #001080"><data-lsp lsp='let arr: readonly number[]' >arr</data-lsp></span><span style="color: #000000">[</span><span style="color: #098658">1</span><span style="color: #000000">] = </span><span style="color: #098658">2</span><span style="color: #000000">;</span></div><span class="error"><span>Index signature in type 'readonly number[]' only permits reading.</span><span class="code">2542</span></span><span class="error-behind">Index signature in type 'readonly number[]' only permits reading.</span><div class='line'><span style="color: #001080"><data-lsp lsp='let arr: readonly number[]' >arr</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-err><data-lsp lsp='any' >push</data-lsp></data-err></span><span style="color: #000000">(</span><span style="color: #098658">1</span><span style="color: #000000">);</span></div><span class="error"><span>Property 'push' does not exist on type 'readonly number[]'.</span><span class="code">2339</span></span><span class="error-behind">Property 'push' does not exist on type 'readonly number[]'.</span></code></div></pre>
<ul>
<li><code>void</code> \u53EF\u8868\u793A\u65E0\u663E\u5F0F\u8FD4\u56DE\u503C\u51FD\u6570\u7684\u8FD4\u56DE\u7C7B\u578B\uFF0C\u4F8B\u5982 <code>console.log()</code></li>
<li><code>never</code> \u53EF\u8868\u793A\u4E0D\u4F1A\u7ED3\u675F\u6216\u629B\u51FA\u5F02\u5E38\u7684\u7684\u51FD\u6570\u7684\u8FD4\u56DE\u7C7B\u578B</li>
<li><code>never</code> \u503C\u53EF\u4EE5\u8D4B\u503C\u7ED9\u4EFB\u4F55\u7C7B\u578B\u7684\u53D8\u91CF</li>
</ul>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function error(message: string): never' >error</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) message: string' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">): </span><span style="color: #267F99">never</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">throw</span><span style="color: #000000"> </span><span style="color: #0000FF">new</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='var Error: ErrorConstructor&#10;new (message?: string | undefined) => Error' >Error</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">&apos;Failed to return. msg:&apos;</span><span style="color: #000000"> + </span><span style="color: #001080"><data-lsp lsp='(parameter) message: string' >message</data-lsp></span><span style="color: #000000">);</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function loop(): never' >loop</data-lsp></span><span style="color: #000000">(): </span><span style="color: #267F99">never</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">while</span><span style="color: #000000"> (</span><span style="color: #0000FF">true</span><span style="color: #000000">) {}</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let sth: number' >sth</data-lsp></span><span style="color: #000000"> = </span><span style="color: #098658">100</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #001080"><data-lsp lsp='let sth: number' >sth</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='function loop(): never' >loop</data-lsp></span><span style="color: #000000">();</span></div></code></div></pre>
<p>\u679A\u4E3E</p>
<ul>
<li><code>enum</code> \u7F16\u8BD1\u4E3A\u4E00\u4E2A\u5BF9\u8C61a</li>
<li><code>const enum</code> \u5219\u4E0D\u751F\u6210 JavaScript \u4EE3\u7801\uFF0C\u800C\u662F\u5728\u7528\u5230\u679A\u4E3E\u6210\u5458\u7684\u5730\u65B9\u5185\u63D2\u5BF9\u5E94\u7684\u503C\uFF0C</li>
<li>\u8BBE\u7F6E <code>complierOptions</code> \u4E2D\u7684 <code>preserveConstEnums</code> \u53C2\u6570\u4E3A true \u53EF\u4EE5\u4FDD\u7559\u679A\u4E3E\u5E38\u91CF\uFF08Disable erasing <code>const enum</code> declarations in generated code.\uFF09</li>
</ul>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">enum</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='enum Color' >Color</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0070C1"><data-lsp lsp='(enum member) Color.Red = "#f00"' >Red</data-lsp></span><span style="color: #000000"> = </span><span style="color: #A31515">"#f00"</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0070C1"><data-lsp lsp='(enum member) Color.Green = "#0f0"' >Green</data-lsp></span><span style="color: #000000"> = </span><span style="color: #A31515">"#0f0"</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0070C1"><data-lsp lsp='(enum member) Color.Blue = "#00f"' >Blue</data-lsp></span><span style="color: #000000"> = </span><span style="color: #A31515">"#00f"</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #008000">// \u7F16\u8BD1\u7ED3\u679C\uFF1A</span></div><div class='line'><span style="color: #008000">// var Color;</span></div><div class='line'><span style="color: #008000">// (function (Color) {</span></div><div class='line'><span style="color: #008000">//     Color["Red"] = "#f00";</span></div><div class='line'><span style="color: #008000">//     Color["Green"] = "#0f0";</span></div><div class='line'><span style="color: #008000">//     Color["Blue"] = "#00f";</span></div><div class='line'><span style="color: #008000">// })(Color || (Color = {}));</span></div></code></div></pre>`}})}function Vd(){return S("div",{className:"markdown-body",dangerouslySetInnerHTML:{__html:`<h1>Chapter 4: \u51FD\u6570</h1>
<p>\u5F53\u9700\u8981\u5728\u51FD\u6570\u4E2D\u4F7F\u7528 <code>this</code> \u65F6\uFF0C\u53EF\u4EE5\u5728\u53C2\u6570\u5217\u8868\u7684\u7B2C\u4E00\u9879\u58F0\u660E <code>this</code> \u7684\u7C7B\u578B\uFF0C\u5426\u5219 <code>this</code> \u4E3A <code>any</code>\uFF0C\u5E76\u4E0D\u5B89\u5168</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function helloDate(this: Date, greet: string): string' >helloDate</data-lsp></span><span style="color: #000000">(</span><span style="color: #0000FF"><data-lsp lsp='(parameter) this: Date' >this</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='interface Date' >Date</data-lsp></span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(parameter) greet: string' >greet</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) greet: string' >greet</data-lsp></span><span style="color: #000000"> + </span><span style="color: #0000FF">this</span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) Date.getDate(): number' >getDate</data-lsp></span><span style="color: #000000">();</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #008000">// error</span></div><div class='line'><span style="color: #795E26"><data-lsp lsp='function helloDate(this: Date, greet: string): string' >helloDate</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">&apos;hello&apos;</span><span style="color: #000000">);</span></div><span class="error"><span>The 'this' context of type 'void' is not assignable to method's 'this' of type 'Date'.</span><span class="code">2684</span></span><span class="error-behind">The 'this' context of type 'void' is not assignable to method's 'this' of type 'Date'.</span><div class='line'><span style="color: #001080"><data-lsp lsp='function helloDate(this: Date, greet: string): string' >helloDate</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) CallableFunction.call&lt;Date, [string], string>(this: (this: Date, args_0: string) => string, thisArg: Date, args_0: string): string' >call</data-lsp></span><span style="color: #000000">(<data-err>{}</data-err>, </span><span style="color: #A31515">"hello"</span><span style="color: #000000">);</span></div><span class="error"><span>Argument of type '{}' is not assignable to parameter of type 'Date'.
  Type '{}' is missing the following properties from type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString, and 38 more.</span><span class="code">2345</span></span><span class="error-behind">Argument of type '{}' is not assignable to parameter of type 'Date'.
  Type '{}' is missing the following properties from type 'Date': toDateString, toTimeString, toLocaleDateString, toLocaleTimeString, and 38 more.</span><div class='line'>&nbsp;</div><div class='line'><span style="color: #008000">// correct</span></div><div class='line'><span style="color: #001080"><data-lsp lsp='function helloDate(this: Date, greet: string): string' >helloDate</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) CallableFunction.call&lt;Date, [string], string>(this: (this: Date, args_0: string) => string, thisArg: Date, args_0: string): string' >call</data-lsp></span><span style="color: #000000">(</span><span style="color: #0000FF">new</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='var Date: DateConstructor&#10;new () => Date (+4 overloads)' >Date</data-lsp></span><span style="color: #000000">(), </span><span style="color: #A31515">"hello"</span><span style="color: #000000">);</span></div></code></div></pre>
<p>\u51FD\u6570\u7C7B\u578B\u6709\u4E24\u79CD\u58F0\u660E\u65B9\u5F0F\uFF0C\u5206\u522B\u4E3A\u7B80\u5199\u548C\u5B8C\u6574\u5F62\u5F0F</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #008000">// The following two declare are the same</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type LogA = (message: string) => void' >LogA</data-lsp></span><span style="color: #000000"> = (</span><span style="color: #001080"><data-lsp lsp='(parameter) message: string' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #267F99">void</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type LogB = (message: string) => void' >LogB</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  (</span><span style="color: #001080"><data-lsp lsp='(parameter) message: string' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">): </span><span style="color: #267F99">void</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div></code></div></pre>
<p>\u51FD\u6570\u7C7B\u578B\u7684\u5B8C\u6574\u58F0\u660E\u53EF\u4EE5\u7528\u6765\u8FDB\u884C\u51FD\u6570\u7684\u91CD\u8F7D</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Print = {&#10;    (message: string): void;&#10;    (message: string, suffix: number): number;&#10;    (prefix: number, message: string, suffix: number): number;&#10;}' >Print</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  (</span><span style="color: #001080"><data-lsp lsp='(parameter) message: string' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">): </span><span style="color: #267F99">void</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  (</span><span style="color: #001080"><data-lsp lsp='(parameter) message: string' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(parameter) suffix: number' >suffix</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">): </span><span style="color: #267F99">number</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  (</span><span style="color: #001080"><data-lsp lsp='(parameter) prefix: number' >prefix</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(parameter) message: string' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(parameter) suffix: number' >suffix</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">): </span><span style="color: #267F99">number</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div></code></div></pre>
<p>\u53EF\u4EE5\u5728\u51FD\u6570\u58F0\u660E\u65F6\u5BF9\u51FD\u6570\u8FDB\u884C\u91CD\u8F7D</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function foo(message: "a"): Date (+2 overloads)' >foo</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) message: "a"' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #A31515">"a"</span><span style="color: #000000">): </span><span style="color: #267F99"><data-lsp lsp='interface Date' >Date</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function foo(message: "b"): number (+2 overloads)' >foo</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) message: "b"' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #A31515">"b"</span><span style="color: #000000">): </span><span style="color: #267F99">number</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function foo(name: "c"): string (+2 overloads)' >foo</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) name: "c"' >name</data-lsp></span><span style="color: #000000">: </span><span style="color: #A31515">"c"</span><span style="color: #000000">): </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function foo(message: "a"): Date (+2 overloads)' >foo</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) message: string' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">): </span><span style="color: #267F99">any</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) message: string' >message</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div></code></div></pre>
<p>\u4F7F\u7528\u5B8C\u6574\u7684\u51FD\u6570\u7C7B\u578B\u58F0\u660E\u53EF\u4EE5\u7ED9\u51FD\u6570\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type FooFn = {&#10;    (message: string): void;&#10;    bar: number;&#10;}' >FooFn</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  (</span><span style="color: #001080"><data-lsp lsp='(parameter) message: string' >message</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">): </span><span style="color: #267F99">void</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) bar: number' >bar</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div></code></div></pre>
<p>\u6CDB\u578B</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #008000">// A example for filter function</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Filter = &lt;T>(array: T[], f: (item: T) => boolean) => T[]' >Filter</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  &lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(array: T[], f: (item: T) => boolean): T[]' >T</data-lsp></span><span style="color: #000000">&gt;(</span><span style="color: #001080"><data-lsp lsp='(parameter) array: T[]' >array</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(array: T[], f: (item: T) => boolean): T[]' >T</data-lsp></span><span style="color: #000000">[], </span><span style="color: #795E26"><data-lsp lsp='(parameter) f: (item: T) => boolean' >f</data-lsp></span><span style="color: #000000">: (</span><span style="color: #001080"><data-lsp lsp='(parameter) item: T' >item</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(array: T[], f: (item: T) => boolean): T[]' >T</data-lsp></span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #267F99">boolean</span><span style="color: #000000">): </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(array: T[], f: (item: T) => boolean): T[]' >T</data-lsp></span><span style="color: #000000">[];</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type AnotherFilter = &lt;T>(array: T[], f: (item: T) => boolean) => T[]' >AnotherFilter</data-lsp></span><span style="color: #000000"> = &lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(array: T[], f: (item: T) => boolean): T[]' >T</data-lsp></span><span style="color: #000000">&gt;(</span><span style="color: #001080"><data-lsp lsp='(parameter) array: T[]' >array</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(array: T[], f: (item: T) => boolean): T[]' >T</data-lsp></span><span style="color: #000000">[], </span><span style="color: #795E26"><data-lsp lsp='(parameter) f: (item: T) => boolean' >f</data-lsp></span><span style="color: #000000">: (</span><span style="color: #001080"><data-lsp lsp='(parameter) item: T' >item</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(array: T[], f: (item: T) => boolean): T[]' >T</data-lsp></span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #267F99">boolean</span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(array: T[], f: (item: T) => boolean): T[]' >T</data-lsp></span><span style="color: #000000">[];</span></div></code></div></pre>
<p>\u4F7F\u7528 <code>T extends Type</code> \u7684\u65B9\u5F0F\u53EF\u4EE5\u58F0\u660E\u53D7\u9650\u7684\u6CDB\u578B
\u5728\u4E0B\u9762\u7684 <code>mapNode</code> \u51FD\u6570\u58F0\u660E\u4E2D\uFF0C\u5982\u679C\u4EC5\u4F7F\u7528 <code>T</code>\uFF0C\u5219\u65E0\u6CD5\u4ECE <code>node</code> \u4E2D\u5B89\u5168\u8BFB\u53D6 <code>value</code> \u5C5E\u6027\uFF0C
\u82E5\u4F7F\u7528 <code>TreeNode</code> \u4E0D\u4F7F\u7528\u6CDB\u578B\uFF0C\u5219\u8FD4\u56DE\u503C\u4F1A\u4E22\u5931\u7C7B\u578B\u4FE1\u606F\uFF0C\u7EDF\u7EDF\u4E3A <code>TreeNode</code> \u7C7B\u578B</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type TreeNode = {&#10;    value: string;&#10;}' >TreeNode</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) value: string' >value</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type LeafNode = TreeNode &amp; {&#10;    isLeaf: true;&#10;}' >LeafNode</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type TreeNode = {&#10;    value: string;&#10;}' >TreeNode</data-lsp></span><span style="color: #000000"> & {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) isLeaf: true' >isLeaf</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">true</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type InnerNode = TreeNode &amp; {&#10;    children: [TreeNode] | [TreeNode, TreeNode];&#10;}' >InnerNode</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type TreeNode = {&#10;    value: string;&#10;}' >TreeNode</data-lsp></span><span style="color: #000000"> & {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) children: [TreeNode] | [TreeNode, TreeNode]' >children</data-lsp></span><span style="color: #000000">: [</span><span style="color: #267F99"><data-lsp lsp='type TreeNode = {&#10;    value: string;&#10;}' >TreeNode</data-lsp></span><span style="color: #000000">] | [</span><span style="color: #267F99"><data-lsp lsp='type TreeNode = {&#10;    value: string;&#10;}' >TreeNode</data-lsp></span><span style="color: #000000">, </span><span style="color: #267F99"><data-lsp lsp='type TreeNode = {&#10;    value: string;&#10;}' >TreeNode</data-lsp></span><span style="color: #000000">];</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function mapNode&lt;T extends TreeNode>(node: T, f: (value: string) => string): T &amp; {&#10;    value: string;&#10;}' >mapNode</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in mapNode&lt;T extends TreeNode>(node: T, f: (value: string) => string): T &amp; {&#10;    value: string;&#10;}' >T</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type TreeNode = {&#10;    value: string;&#10;}' >TreeNode</data-lsp></span><span style="color: #000000">&gt;(</span><span style="color: #001080"><data-lsp lsp='(parameter) node: T extends TreeNode' >node</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in mapNode&lt;T extends TreeNode>(node: T, f: (value: string) => string): T &amp; {&#10;    value: string;&#10;}' >T</data-lsp></span><span style="color: #000000">, </span><span style="color: #795E26"><data-lsp lsp='(parameter) f: (value: string) => string' >f</data-lsp></span><span style="color: #000000">: (</span><span style="color: #001080"><data-lsp lsp='(parameter) value: string' >value</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #267F99">string</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    ...</span><span style="color: #001080"><data-lsp lsp='(parameter) node: T extends TreeNode' >node</data-lsp></span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(property) value: string' >value</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='(parameter) f: (value: string) => string' >f</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) node: T extends TreeNode' >node</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) value: string' >value</data-lsp></span><span style="color: #000000">),</span></div><div class='line'><span style="color: #000000">  };</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const fooNode: LeafNode' >fooNode</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type LeafNode = TreeNode &amp; {&#10;    isLeaf: true;&#10;}' >LeafNode</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) value: string' >value</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">"foo"</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) isLeaf: true' >isLeaf</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #0000FF">true</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #008000">// resultNode \u7684\u7C7B\u578B\u4E3A typeof fooNode & { value: string }</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const resultNode: TreeNode &amp; {&#10;    isLeaf: true;&#10;} &amp; {&#10;    value: string;&#10;}' >resultNode</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='function mapNode&lt;LeafNode>(node: LeafNode, f: (value: string) => string): TreeNode &amp; {&#10;    isLeaf: true;&#10;} &amp; {&#10;    value: string;&#10;}' >mapNode</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='const fooNode: LeafNode' >fooNode</data-lsp></span><span style="color: #000000">, (</span><span style="color: #001080"><data-lsp lsp='(parameter) value: string' >value</data-lsp></span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) value: string' >value</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) String.slice(start?: number | undefined, end?: number | undefined): string' >slice</data-lsp></span><span style="color: #000000">(</span><span style="color: #098658">1</span><span style="color: #000000">));</span></div></code></div></pre>
<p>\u6A21\u62DF\u53D8\u957F\u53C2\u6570\uFF08Exercise 4\uFF09</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function call&lt;T extends [unknown, string, ...unknown[]], R>(f: (...args: T) => R, ...args: T): R' >call</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in call&lt;T extends [unknown, string, ...unknown[]], R>(f: (...args: T) => R, ...args: T): R' >T</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> [</span><span style="color: #267F99">unknown</span><span style="color: #000000">, </span><span style="color: #267F99">string</span><span style="color: #000000">, ...</span><span style="color: #267F99">unknown</span><span style="color: #000000">[]], </span><span style="color: #267F99"><data-lsp lsp='(type parameter) R in call&lt;T extends [unknown, string, ...unknown[]], R>(f: (...args: T) => R, ...args: T): R' >R</data-lsp></span><span style="color: #000000">&gt;(</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(parameter) f: (...args: T) => R' >f</data-lsp></span><span style="color: #000000">: (...</span><span style="color: #001080"><data-lsp lsp='(parameter) args: T extends [unknown, string, ...unknown[]]' >args</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in call&lt;T extends [unknown, string, ...unknown[]], R>(f: (...args: T) => R, ...args: T): R' >T</data-lsp></span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='(type parameter) R in call&lt;T extends [unknown, string, ...unknown[]], R>(f: (...args: T) => R, ...args: T): R' >R</data-lsp></span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  ...</span><span style="color: #001080"><data-lsp lsp='(parameter) args: T extends [unknown, string, ...unknown[]]' >args</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in call&lt;T extends [unknown, string, ...unknown[]], R>(f: (...args: T) => R, ...args: T): R' >T</data-lsp></span></div><div class='line'><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='(parameter) f: (...args: T) => R' >f</data-lsp></span><span style="color: #000000">(...</span><span style="color: #001080"><data-lsp lsp='(parameter) args: T extends [unknown, string, ...unknown[]]' >args</data-lsp></span><span style="color: #000000">);</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function fill&lt;T>(length: number, value: T): T[]' >fill</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in fill&lt;T>(length: number, value: T): T[]' >T</data-lsp></span><span style="color: #000000">&gt;(</span><span style="color: #001080"><data-lsp lsp='(parameter) length: number' >length</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(parameter) value: T' >value</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in fill&lt;T>(length: number, value: T): T[]' >T</data-lsp></span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='var Array: ArrayConstructor' >Array</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) ArrayConstructor.from&lt;unknown, T>(iterable: Iterable&lt;unknown> | ArrayLike&lt;unknown>, mapfn: (v: unknown, k: number) => T, thisArg?: any): T[] (+3 overloads)' >from</data-lsp></span><span style="color: #000000">({ </span><span style="color: #001080"><data-lsp lsp='(property) ArrayLike&lt;T>.length: number' >length</data-lsp></span><span style="color: #000000"> }, () </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) value: T' >value</data-lsp></span><span style="color: #000000">);</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const fillArr: ""[]' >fillArr</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='function call&lt;[number, ""], ""[]>(f: (args_0: number, args_1: "") => ""[], args_0: number, args_1: ""): ""[]' >call</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='function fill&lt;T>(length: number, value: T): T[]' >fill</data-lsp></span><span style="color: #000000">, </span><span style="color: #098658">10</span><span style="color: #000000">, </span><span style="color: #A31515">""</span><span style="color: #000000">);</span></div></code></div></pre>
<p>\u6CDB\u578B\u53EF\u4EE5\u6709\u9ED8\u8BA4\u7C7B\u578B\u3002\u7C7B\u4F3C\u4E8E\u51FD\u6570\u7684\u53EF\u9009\u53C2\u6570\uFF0C\u6709\u9ED8\u8BA4\u7C7B\u578B\u7684\u6CDB\u578B\u9700\u8981\u653E\u5728\u6CA1\u6709\u9ED8\u8BA4\u7C7B\u578B\u7684\u6CDB\u578B\u540E\u9762</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type MyEvent&lt;Target extends HTMLElement = HTMLElement, Type = string> = {&#10;    target: Target;&#10;    type: Type;&#10;}' >MyEvent</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) Target in type MyEvent&lt;Target extends HTMLElement = HTMLElement, Type = string>' >Target</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='interface HTMLElement' >HTMLElement</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='interface HTMLElement' >HTMLElement</data-lsp></span><span style="color: #000000">, </span><span style="color: #267F99"><data-lsp lsp='(type parameter) Type in type MyEvent&lt;Target extends HTMLElement = HTMLElement, Type = string>' >Type</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99">string</span><span style="color: #000000">&gt; = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) target: Target extends HTMLElement = HTMLElement' >target</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) Target in type MyEvent&lt;Target extends HTMLElement = HTMLElement, Type = string>' >Target</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) type: Type = string' >type</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) Type in type MyEvent&lt;Target extends HTMLElement = HTMLElement, Type = string>' >Type</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let myEvent: MyEvent&lt;HTMLBodyElement, string>' >myEvent</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type MyEvent&lt;Target extends HTMLElement = HTMLElement, Type = string> = {&#10;    target: Target;&#10;    type: Type;&#10;}' >MyEvent</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='interface HTMLBodyElement' >HTMLBodyElement</data-lsp></span><span style="color: #000000">&gt; = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) target: HTMLBodyElement' >target</data-lsp>:</span><span style="color: #000000"> &lt;</span><span style="color: #267F99"><data-lsp lsp='interface HTMLBodyElement' >HTMLBodyElement</data-lsp></span><span style="color: #000000">&gt;</span><span style="color: #001080"><data-lsp lsp='var document: Document' >document</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) Document.body: HTMLElement' >body</data-lsp></span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) type: string' >type</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">"click"</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">};</span></div></code></div></pre>
<p>Exercise 5</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Is = &lt;T>(valueA: T, valueB: T) => boolean' >Is</data-lsp></span><span style="color: #000000"> = &lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(valueA: T, valueB: T): boolean' >T</data-lsp></span><span style="color: #000000">&gt;(</span><span style="color: #001080"><data-lsp lsp='(parameter) valueA: T' >valueA</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(valueA: T, valueB: T): boolean' >T</data-lsp></span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(parameter) valueB: T' >valueB</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(valueA: T, valueB: T): boolean' >T</data-lsp></span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #267F99">boolean</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='const is: Is' >is</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type Is = &lt;T>(valueA: T, valueB: T) => boolean' >Is</data-lsp></span><span style="color: #000000"> = (</span><span style="color: #001080"><data-lsp lsp='(parameter) a: T' >a</data-lsp></span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(parameter) b: T' >b</data-lsp></span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) a: T' >a</data-lsp></span><span style="color: #000000"> === </span><span style="color: #001080"><data-lsp lsp='(parameter) b: T' >b</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const equal: boolean' >equal</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='const is: &lt;string>(valueA: string, valueB: string) => boolean' >is</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">"a"</span><span style="color: #000000">, </span><span style="color: #A31515">"b"</span><span style="color: #000000">);</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const equal2: boolean' >equal2</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='const is: &lt;number>(valueA: number, valueB: number) => boolean' >is</data-lsp></span><span style="color: #000000">(</span><span style="color: #098658">1</span><span style="color: #000000">, </span><span style="color: #098658">2</span><span style="color: #000000">);</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const err: boolean' >err</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='const is: &lt;string>(valueA: string, valueB: string) => boolean' >is</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">"1"</span><span style="color: #000000">, </span><span style="color: #098658"><data-err>2</data-err></span><span style="color: #000000">);</span></div><span class="error"><span>Argument of type 'number' is not assignable to parameter of type 'string'.</span><span class="code">2345</span></span><span class="error-behind">Argument of type 'number' is not assignable to parameter of type 'string'.</span><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type MultiplyIs = &lt;T>(...args: T[]) => boolean' >MultiplyIs</data-lsp></span><span style="color: #000000"> = &lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(...args: T[]): boolean' >T</data-lsp></span><span style="color: #000000">&gt;(...</span><span style="color: #001080"><data-lsp lsp='(parameter) args: T[]' >args</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in &lt;T>(...args: T[]): boolean' >T</data-lsp></span><span style="color: #000000">[]) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #267F99">boolean</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='const multiplyIs: MultiplyIs' >multiplyIs</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type MultiplyIs = &lt;T>(...args: T[]) => boolean' >MultiplyIs</data-lsp></span><span style="color: #000000"> = (...</span><span style="color: #001080"><data-lsp lsp='(parameter) args: T[]' >args</data-lsp></span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">for</span><span style="color: #000000"> (</span><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let i: number' >i</data-lsp></span><span style="color: #000000"> = </span><span style="color: #098658">1</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='let len: number' >len</data-lsp></span><span style="color: #000000"> = </span><span style="color: #001080"><data-lsp lsp='(parameter) args: T[]' >args</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) Array&lt;T>.length: number' >length</data-lsp></span><span style="color: #000000">; </span><span style="color: #001080"><data-lsp lsp='let i: number' >i</data-lsp></span><span style="color: #000000"> &lt; </span><span style="color: #001080"><data-lsp lsp='let len: number' >len</data-lsp></span><span style="color: #000000">; </span><span style="color: #001080"><data-lsp lsp='let i: number' >i</data-lsp></span><span style="color: #000000">++) {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">if</span><span style="color: #000000"> (</span><span style="color: #001080"><data-lsp lsp='(parameter) args: T[]' >args</data-lsp></span><span style="color: #000000">[</span><span style="color: #001080"><data-lsp lsp='let i: number' >i</data-lsp></span><span style="color: #000000">] !== </span><span style="color: #001080"><data-lsp lsp='(parameter) args: T[]' >args</data-lsp></span><span style="color: #000000">[</span><span style="color: #001080"><data-lsp lsp='let i: number' >i</data-lsp></span><span style="color: #000000"> - </span><span style="color: #098658">1</span><span style="color: #000000">]) {</span></div><div class='line'><span style="color: #000000">      </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #0000FF">false</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    }</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #0000FF">true</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">// \u53E6\u4E00\u79CD\u4E0D\u597D\u8BFB\u7684\u65B9\u5F0F</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">// args.reduce((accumulator, current, index) =&gt; {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">//   if (index !== 0 && current !== args[index - 1]) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">//     return false;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">//   }</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">//   return accumulator;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">// }, true)</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const mEqual: boolean' >mEqual</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='const multiplyIs: &lt;string>(...args: string[]) => boolean' >multiplyIs</data-lsp></span><span style="color: #000000">([</span><span style="color: #098658">1</span><span style="color: #000000">], </span><span style="color: #A31515">""</span><span style="color: #000000">, [</span><span style="color: #098658">1</span><span style="color: #000000">, </span><span style="color: #098658">2</span><span style="color: #000000">, </span><span style="color: #098658">3</span><span style="color: #000000">]);</span></div><span class="error"><span>Argument of type 'number[]' is not assignable to parameter of type 'string'.</span><span class="code">2345</span></span><span class="error-behind">Argument of type 'number[]' is not assignable to parameter of type 'string'.</span></code></div></pre>`}})}function Qd(){return S("div",{className:"markdown-body",dangerouslySetInnerHTML:{__html:`<h1>Chapter 5: \u7C7B\u548C\u63A5\u53E3</h1>
<p>\u5173\u952E\u8BCD\uFF1A</p>
<ul>
<li><code>public</code> / <code>private</code> / <code>protected</code></li>
<li><code>readonly</code></li>
<li><code>abstract</code></li>
</ul>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">class</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='class Piece' >Piece</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000"> </span><span style="color: #0000FF">public</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(property) Piece.position: {&#10;    x: number;&#10;    y: number;&#10;}' >position</data-lsp></span><span style="color: #000000">: { </span><span style="color: #001080"><data-lsp lsp='(property) x: number' >x</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">; </span><span style="color: #001080"><data-lsp lsp='(property) y: number' >y</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #000000"> </span><span style="color: #0000FF">constructor</span><span style="color: #000000">(</span><span style="color: #0000FF">private</span><span style="color: #000000"> </span><span style="color: #0000FF">readonly</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(property) Piece.color: string' >color</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">   </span><span style="color: #0000FF">this</span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) Piece.position: {&#10;    x: number;&#10;    y: number;&#10;}' >position</data-lsp></span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) x: number' >x</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #098658">0</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(property) y: number' >y</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #098658">0</span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #000000"> }</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const piece: Piece' >piece</data-lsp></span><span style="color: #000000"> = </span><span style="color: #0000FF">new</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='constructor Piece(color: string): Piece' >Piece</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">"red"</span><span style="color: #000000">);</span></div></code></div></pre>
<p><code>type</code> \u548C <code>interface</code> \u662F\u540C\u4E00\u6982\u5FF5\u7684\u4E24\u79CD\u53E5\u6CD5\uFF0C\u4F46\u6709\u7EC6\u5FAE\u533A\u522B\uFF08P114\uFF09</p>
<ol>
<li>type \u66F4\u901A\u7528\uFF0Cinterface \u5219\u5FC5\u987B\u4E3A\u7ED3\u6784</li>
<li>interface \u6269\u5C55\u65F6\u4F1A\u68C0\u67E5\u662F\u5426\u53EF\u8D4B\u503C\uFF0Ctype \u5219\u4E0D\u4F1A</li>
<li>\u540C\u4E00\u547D\u540D\u7A7A\u95F4\u4E0B\u7684\u540C\u540D interface \u4F1A\u5408\u5E76\uFF0Ctype \u5219\u4F1A\u5BFC\u81F4\u51B2\u7A81</li>
</ol>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Char = "a" | "b" | "c"' >Char</data-lsp></span><span style="color: #000000"> = </span><span style="color: #A31515">"a"</span><span style="color: #000000"> | </span><span style="color: #A31515">"b"</span><span style="color: #000000"> | </span><span style="color: #A31515">"c"</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #008000">// interface IChar = &apos;a&apos; | &apos;b&apos; | &apos;c&apos;;  -&gt; error</span></div><div class='line'><span style="color: #0000FF">interface</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='interface InterfaceA' >InterfaceA</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) InterfaceA.value: string' >value</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #008000">// error</span></div><div class='line'><span style="color: #0000FF">interface</span><span style="color: #000000"> </span><span style="color: #267F99"><data-err><data-lsp lsp='interface InterfaceB' >InterfaceB</data-lsp></data-err></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='interface InterfaceA' >InterfaceA</data-lsp></span><span style="color: #000000"> {</span></div><span class="error"><span>Interface 'InterfaceB' incorrectly extends interface 'InterfaceA'.
  Types of property 'value' are incompatible.
    Type 'number' is not assignable to type 'string'.</span><span class="code">2430</span></span><span class="error-behind">Interface 'InterfaceB' incorrectly extends interface 'InterfaceA'.
  Types of property 'value' are incompatible.
    Type 'number' is not assignable to type 'string'.</span><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) InterfaceB.value: number' >value</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #008000">// \u4E24\u4E2A InterfaceA \u5E76\u4E0D\u51B2\u7A81\uFF0C\u800C\u662F\u4F1A\u5408\u5E76</span></div><div class='line'><span style="color: #0000FF">interface</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='interface InterfaceA' >InterfaceA</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) InterfaceA.name: string' >name</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div></code></div></pre>
<p><code>interface</code> \u4E5F\u53EF\u4EE5 <code>readonly</code>\uFF0C\u4F46\u662F\u4E0D\u53EF\u4EE5\u6709 <code>public</code> / <code>private</code> / <code>protected</code> \u4FEE\u9970\u7B26</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">interface</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='interface Animal' >Animal</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">readonly</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(property) Animal.name: string' >name</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const cat: Animal' >cat</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='interface Animal' >Animal</data-lsp></span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) Animal.name: string' >name</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">"cat"</span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #001080"><data-lsp lsp='const cat: Animal' >cat</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-err><data-lsp lsp='(property) Animal.name: any' >name</data-lsp></data-err></span><span style="color: #000000"> = </span><span style="color: #A31515">""</span><span style="color: #000000">;</span></div><span class="error"><span>Cannot assign to 'name' because it is a read-only property.</span><span class="code">2540</span></span><span class="error-behind">Cannot assign to 'name' because it is a read-only property.</span></code></div></pre>
<p>\u503C\u548C\u7C7B\u578B\u4F4D\u4E8E\u4E0D\u540C\u7684\u547D\u540D\u7A7A\u95F4\u4E2D\uFF0C\u4E0D\u4F1A\u51B2\u7A81</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let value: string' >value</data-lsp></span><span style="color: #000000"> = </span><span style="color: #A31515">"1"</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type value = string' >value</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div></code></div></pre>
<p>\u7C7B\u58F0\u660E\u4F1A\u5728\u7C7B\u7A7A\u95F4\u751F\u6210\u4E24\u4E2A\u58F0\u660E\uFF08P123\uFF09</p>
<ol>
<li>\u7C7B\u7684\u5B9E\u4F8B\u7C7B\u578B</li>
<li>\u7C7B\u7684\u6784\u9020\u65B9\u6CD5\u7C7B\u578B\uFF0C<code>keyof</code> ClassName \u83B7\u5F97</li>
</ol>
<p>typeof \u8FD0\u7B97\u7B26\u8FD8\u9700\u8981\u7EE7\u7EED\u5B66\u4E60</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type State = {&#10;    [key: string]: string;&#10;}' >State</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  [</span><span style="color: #001080"><data-lsp lsp='(parameter) key: string' >key</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">]: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">class</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='class StringDataBase' >StringDataBase</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) StringDataBase.state: State' >state</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type State = {&#10;    [key: string]: string;&#10;}' >State</data-lsp></span><span style="color: #000000"> = {};</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">// get \u65E0\u6CD5\u63A8\u5BFC\u51FA\u8FD4\u56DE\u503C\u53EF\u80FD\u662F null (why?)\uFF0C\u624B\u52A8\u58F0\u660E\u8FD4\u56DE\u503C\u7C7B\u578B</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) StringDataBase.get(key: string): string | null' >get</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) key: string' >key</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">): </span><span style="color: #267F99">string</span><span style="color: #000000"> | </span><span style="color: #267F99">null</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #0000FF">this</span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) StringDataBase.state: State' >state</data-lsp></span><span style="color: #000000">[</span><span style="color: #001080"><data-lsp lsp='(parameter) key: string' >key</data-lsp></span><span style="color: #000000">] || </span><span style="color: #0000FF">null</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) StringDataBase.set(key: string, value: string): void' >set</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) key: string' >key</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(parameter) value: string' >value</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #0000FF">this</span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) StringDataBase.state: State' >state</data-lsp></span><span style="color: #000000">[</span><span style="color: #001080"><data-lsp lsp='(parameter) key: string' >key</data-lsp></span><span style="color: #000000">] = </span><span style="color: #001080"><data-lsp lsp='(parameter) value: string' >value</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">static</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='(method) StringDataBase.from(state: State): StringDataBase' >from</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) state: State' >state</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type State = {&#10;    [key: string]: string;&#10;}' >State</data-lsp></span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const db: StringDataBase' >db</data-lsp></span><span style="color: #000000"> = </span><span style="color: #0000FF">new</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='constructor StringDataBase(): StringDataBase' >StringDataBase</data-lsp></span><span style="color: #000000">();</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='const db: StringDataBase' >db</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) StringDataBase.state: State' >state</data-lsp></span><span style="color: #000000"> = </span><span style="color: #001080"><data-lsp lsp='(parameter) state: State' >state</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='const db: StringDataBase' >db</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #008000">// type StringDataBaseType = typeof StringDataBase;</span></div></code></div></pre>
<p>Exercise 4\uFF08GitHub \u4E0A\u7684\u7B54\u6848\uFF09:</p>
<p>4 . [Hard] As an exercise, think about how you might design a typesafe builder pattern.
Extend the Builder pattern Builder Pattern example from earlier in this chapter to:</p>
<p>4a. Guarantee at compile time that someone can\u2019t call .send() before setting at least URL
and method. Would it be easier to make this guarantee if you also force the user to call
methods in a specific order? (Hint: what can you return instead of this?)</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">class</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='class RequestBuilder' >RequestBuilder</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">protected</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder.data: object | null' >data</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">object</span><span style="color: #000000"> | </span><span style="color: #267F99">null</span><span style="color: #000000"> = </span><span style="color: #0000FF">null</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">protected</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder.method: "get" | "post" | null' >method</data-lsp></span><span style="color: #000000">: </span><span style="color: #A31515">"get"</span><span style="color: #000000"> | </span><span style="color: #A31515">"post"</span><span style="color: #000000"> | </span><span style="color: #267F99">null</span><span style="color: #000000"> = </span><span style="color: #0000FF">null</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">protected</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder.url: string | null' >url</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000"> | </span><span style="color: #267F99">null</span><span style="color: #000000"> = </span><span style="color: #0000FF">null</span><span style="color: #000000">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder.setMethod(method: "get" | "post"): RequestBuilderWithMethod' >setMethod</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) method: "get" | "post"' >method</data-lsp></span><span style="color: #000000">: </span><span style="color: #A31515">"get"</span><span style="color: #000000"> | </span><span style="color: #A31515">"post"</span><span style="color: #000000">): </span><span style="color: #267F99"><data-lsp lsp='class RequestBuilderWithMethod' >RequestBuilderWithMethod</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #0000FF">new</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='constructor RequestBuilderWithMethod(): RequestBuilderWithMethod' >RequestBuilderWithMethod</data-lsp></span><span style="color: #000000">().</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilderWithMethod.setMethod(method: "get" | "post" | null): RequestBuilderWithMethod' >setMethod</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) method: "get" | "post"' >method</data-lsp></span><span style="color: #000000">).</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder.setData(data: object | null): RequestBuilderWithMethod' >setData</data-lsp></span><span style="color: #000000">(</span><span style="color: #0000FF">this</span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder.data: object | null' >data</data-lsp></span><span style="color: #000000">);</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder.setData(data: object | null): this' >setData</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) data: object | null' >data</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">object</span><span style="color: #000000"> | </span><span style="color: #267F99">null</span><span style="color: #000000">): </span><span style="color: #267F99">this</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #0000FF">this</span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder.data: object | null' >data</data-lsp></span><span style="color: #000000"> = </span><span style="color: #001080"><data-lsp lsp='(parameter) data: object | null' >data</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #0000FF">this</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">class</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='class RequestBuilderWithMethod' >RequestBuilderWithMethod</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='class RequestBuilder' >RequestBuilder</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilderWithMethod.setMethod(method: "get" | "post" | null): this' >setMethod</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) method: "get" | "post" | null' >method</data-lsp></span><span style="color: #000000">: </span><span style="color: #A31515">"get"</span><span style="color: #000000"> | </span><span style="color: #A31515">"post"</span><span style="color: #000000"> | </span><span style="color: #267F99">null</span><span style="color: #000000">): </span><span style="color: #267F99">this</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #0000FF">this</span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder.method: "get" | "post" | null' >method</data-lsp></span><span style="color: #000000"> = </span><span style="color: #001080"><data-lsp lsp='(parameter) method: "get" | "post" | null' >method</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #0000FF">this</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilderWithMethod.setURL(url: string): RequestBuilderWithMethodAndURL' >setURL</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) url: string' >url</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">): </span><span style="color: #267F99"><data-lsp lsp='class RequestBuilderWithMethodAndURL' >RequestBuilderWithMethodAndURL</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #0000FF">new</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='constructor RequestBuilderWithMethodAndURL(): RequestBuilderWithMethodAndURL' >RequestBuilderWithMethodAndURL</data-lsp></span><span style="color: #000000">()</span></div><div class='line'><span style="color: #000000">      .</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilderWithMethod.setMethod(method: "get" | "post" | null): RequestBuilderWithMethodAndURL' >setMethod</data-lsp></span><span style="color: #000000">(</span><span style="color: #0000FF">this</span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder.method: "get" | "post" | null' >method</data-lsp></span><span style="color: #000000">)</span></div><div class='line'><span style="color: #000000">      .</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilderWithMethodAndURL.setURL(url: string): RequestBuilderWithMethodAndURL' >setURL</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) url: string' >url</data-lsp></span><span style="color: #000000">)</span></div><div class='line'><span style="color: #000000">      .</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder.setData(data: object | null): RequestBuilderWithMethodAndURL' >setData</data-lsp></span><span style="color: #000000">(</span><span style="color: #0000FF">this</span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder.data: object | null' >data</data-lsp></span><span style="color: #000000">);</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">class</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='class RequestBuilderWithMethodAndURL' >RequestBuilderWithMethodAndURL</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='class RequestBuilderWithMethod' >RequestBuilderWithMethod</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilderWithMethodAndURL.setURL(url: string): this' >setURL</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) url: string' >url</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">): </span><span style="color: #267F99">this</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #0000FF">this</span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder.url: string | null' >url</data-lsp></span><span style="color: #000000"> = </span><span style="color: #001080"><data-lsp lsp='(parameter) url: string' >url</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #0000FF">this</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilderWithMethodAndURL.send(): void' >send</data-lsp></span><span style="color: #000000">() {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #008000">// ...</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">new</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='constructor RequestBuilder(): RequestBuilder' >RequestBuilder</data-lsp></span><span style="color: #000000">().</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder.setMethod(method: "get" | "post"): RequestBuilderWithMethod' >setMethod</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">"get"</span><span style="color: #000000">).</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder.setData(data: object | null): this' >setData</data-lsp></span><span style="color: #000000">({}).</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilderWithMethod.setURL(url: string): RequestBuilderWithMethodAndURL' >setURL</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">"foo.com"</span><span style="color: #000000">).</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilderWithMethodAndURL.send(): void' >send</data-lsp></span><span style="color: #000000">();</span></div></code></div></pre>
<p>4b. [Harder] How would you change your design if you wanted to make this guarantee, but still let people call methods in any order?</p>
<p>(This answer courtesy of @albertywu)</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">interface</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='interface BuildableRequest' >BuildableRequest</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) BuildableRequest.data?: object | undefined' >data</data-lsp></span><span style="color: #000000">?: </span><span style="color: #267F99">object</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) BuildableRequest.method: "get" | "post"' >method</data-lsp></span><span style="color: #000000">: </span><span style="color: #A31515">"get"</span><span style="color: #000000"> | </span><span style="color: #A31515">"post"</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) BuildableRequest.url: string' >url</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">class</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='class RequestBuilder2' >RequestBuilder2</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder2.data?: object | undefined' >data</data-lsp></span><span style="color: #000000">?: </span><span style="color: #267F99">object</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder2.method?: "get" | "post" | undefined' >method</data-lsp></span><span style="color: #000000">?: </span><span style="color: #A31515">"get"</span><span style="color: #000000"> | </span><span style="color: #A31515">"post"</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) RequestBuilder2.url?: string | undefined' >url</data-lsp></span><span style="color: #000000">?: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder2.setData(data: object): this &amp; Pick&lt;BuildableRequest, "data">' >setData</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) data: object' >data</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">object</span><span style="color: #000000">): </span><span style="color: #267F99">this</span><span style="color: #000000"> & </span><span style="color: #267F99"><data-lsp lsp='type Pick&lt;T, K extends keyof T> = { [P in K]: T[P]; }' >Pick</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='interface BuildableRequest' >BuildableRequest</data-lsp></span><span style="color: #000000">, </span><span style="color: #A31515">"data"</span><span style="color: #000000">&gt; {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='var Object: ObjectConstructor' >Object</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) ObjectConstructor.assign&lt;this, {&#10;    data: object;&#10;}>(target: this, source: {&#10;    data: object;&#10;}): this &amp; {&#10;    data: object;&#10;} (+3 overloads)' >assign</data-lsp></span><span style="color: #000000">(</span><span style="color: #0000FF">this</span><span style="color: #000000">, { </span><span style="color: #001080"><data-lsp lsp='(property) data: object' >data</data-lsp></span><span style="color: #000000"> });</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder2.setMethod(method: "get" | "post"): this &amp; Pick&lt;BuildableRequest, "method">' >setMethod</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) method: "get" | "post"' >method</data-lsp></span><span style="color: #000000">: </span><span style="color: #A31515">"get"</span><span style="color: #000000"> | </span><span style="color: #A31515">"post"</span><span style="color: #000000">): </span><span style="color: #267F99">this</span><span style="color: #000000"> & </span><span style="color: #267F99"><data-lsp lsp='type Pick&lt;T, K extends keyof T> = { [P in K]: T[P]; }' >Pick</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='interface BuildableRequest' >BuildableRequest</data-lsp></span><span style="color: #000000">, </span><span style="color: #A31515">"method"</span><span style="color: #000000">&gt; {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='var Object: ObjectConstructor' >Object</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) ObjectConstructor.assign&lt;this, {&#10;    method: "get" | "post";&#10;}>(target: this, source: {&#10;    method: "get" | "post";&#10;}): this &amp; {&#10;    method: "get" | "post";&#10;} (+3 overloads)' >assign</data-lsp></span><span style="color: #000000">(</span><span style="color: #0000FF">this</span><span style="color: #000000">, { </span><span style="color: #001080"><data-lsp lsp='(property) method: "get" | "post"' >method</data-lsp></span><span style="color: #000000"> });</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder2.setURL(url: string): this &amp; Pick&lt;BuildableRequest, "url">' >setURL</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) url: string' >url</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">): </span><span style="color: #267F99">this</span><span style="color: #000000"> & </span><span style="color: #267F99"><data-lsp lsp='type Pick&lt;T, K extends keyof T> = { [P in K]: T[P]; }' >Pick</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='interface BuildableRequest' >BuildableRequest</data-lsp></span><span style="color: #000000">, </span><span style="color: #A31515">"url"</span><span style="color: #000000">&gt; {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='var Object: ObjectConstructor' >Object</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) ObjectConstructor.assign&lt;this, {&#10;    url: string;&#10;}>(target: this, source: {&#10;    url: string;&#10;}): this &amp; {&#10;    url: string;&#10;} (+3 overloads)' >assign</data-lsp></span><span style="color: #000000">(</span><span style="color: #0000FF">this</span><span style="color: #000000">, { </span><span style="color: #001080"><data-lsp lsp='(property) url: string' >url</data-lsp></span><span style="color: #000000"> });</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder2.build(this: BuildableRequest): BuildableRequest' >build</data-lsp></span><span style="color: #000000">(</span><span style="color: #0000FF"><data-lsp lsp='(parameter) this: BuildableRequest' >this</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='interface BuildableRequest' >BuildableRequest</data-lsp></span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #0000FF">this</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">new</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='constructor RequestBuilder2(): RequestBuilder2' >RequestBuilder2</data-lsp></span><span style="color: #000000">()</span></div><div class='line'><span style="color: #000000">  .</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder2.setMethod(method: "get" | "post"): RequestBuilder2 &amp; Pick&lt;BuildableRequest, "method">' >setMethod</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">"post"</span><span style="color: #000000">) </span><span style="color: #008000">// Try removing me!</span></div><div class='line'><span style="color: #000000">  .</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder2.setURL(url: string): RequestBuilder2 &amp; Pick&lt;BuildableRequest, "method"> &amp; Pick&lt;BuildableRequest, "url">' >setURL</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">"bar"</span><span style="color: #000000">) </span><span style="color: #008000">// Try removing me!</span></div><div class='line'><span style="color: #000000">  .</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder2.setData(data: object): RequestBuilder2 &amp; Pick&lt;BuildableRequest, "method"> &amp; Pick&lt;BuildableRequest, "url"> &amp; Pick&lt;BuildableRequest, "data">' >setData</data-lsp></span><span style="color: #000000">({})</span></div><div class='line'><span style="color: #000000">  .</span><span style="color: #795E26"><data-lsp lsp='(method) RequestBuilder2.build(this: BuildableRequest): BuildableRequest' >build</data-lsp></span><span style="color: #000000">();</span></div></code></div></pre>`}})}function Zd(){return S("div",{className:"markdown-body",dangerouslySetInnerHTML:{__html:`<h1>Chapter 6: \u7C7B\u578B\u8FDB\u9636</h1>
<p>\u7C7B\u578B\u62D3\u5BBD</p>
<p>\u521D\u59CB\u5316\u4E3A <code>null</code> \u548C <code>undefined</code> \u7684\u53D8\u91CF\u7C7B\u578B\u88AB\u6269\u5C55\u4E3A <code>any</code>\uFF0C\u4F46\u662F\u79BB\u5F00\u4F5C\u7528\u57DF\u540E\u4F1A\u88AB\u5206\u914D\u4E00\u4E2A\u5177\u4F53\u7684\u7C7B\u578B</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function popA(): string' >popA</data-lsp></span><span style="color: #000000">() {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let a: any' >a</data-lsp></span><span style="color: #000000"> = </span><span style="color: #0000FF">null</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='let a: any' >a</data-lsp></span><span style="color: #000000"> = </span><span style="color: #A31515">"1"</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let a: string' >a</data-lsp></span><span style="color: #000000">; </span><span style="color: #008000">// any</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let a: string' >a</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='function popA(): string' >popA</data-lsp></span><span style="color: #000000">(); </span><span style="color: #008000">// string</span></div></code></div></pre>
<p><code>as const</code> \u53EF\u4EE5\u963B\u6B62\u7C7B\u578B\u62D3\u5BBD\u5E76\u4E14\u9012\u5F52\u5C06\u6210\u5458\u8BBE\u4E3A <code>readonly</code></p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let ordinaryObj: {&#10;    x: number;&#10;}' >ordinaryObj</data-lsp></span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) x: number' >x</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #098658">3</span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let constObj: {&#10;    readonly x: 3;&#10;}' >constObj</data-lsp></span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) x: 3' >x</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #098658">3</span><span style="color: #000000"> } </span><span style="color: #AF00DB">as</span><span style="color: #000000"> </span><span style="color: #0000FF"><data-lsp lsp='type const = {&#10;    readonly x: 3;&#10;}' >const</data-lsp></span><span style="color: #000000">;</span></div></code></div></pre>
<p>\u8D4B\u503C\u65F6 TypeScript \u4F1A\u5BF9 fresh object literal type \u8FDB\u884C\u591A\u4F59\u5C5E\u6027\u68C0\u67E5</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Person = {&#10;    name: string;&#10;}' >Person</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) name: string' >name</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let p1: Person' >p1</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type Person = {&#10;    name: string;&#10;}' >Person</data-lsp></span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) name: string' >name</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">"1"</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(property) age: number' >age</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #098658">1</span><span style="color: #000000"> }; </span><span style="color: #008000">// error</span></div><span class="error"><span>Type '{ name: string; age: number; }' is not assignable to type 'Person'.
  Object literal may only specify known properties, and 'age' does not exist in type 'Person'.</span><span class="code">2322</span></span><span class="error-behind">Type '{ name: string; age: number; }' is not assignable to type 'Person'.
  Object literal may only specify known properties, and 'age' does not exist in type 'Person'.</span><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let p2: {&#10;    name: string;&#10;    age: number;&#10;}' >p2</data-lsp></span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) name: string' >name</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">"2"</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(property) age: number' >age</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #098658">2</span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let p3: Person' >p3</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type Person = {&#10;    name: string;&#10;}' >Person</data-lsp></span><span style="color: #000000"> = </span><span style="color: #001080"><data-lsp lsp='let p2: {&#10;    name: string;&#10;    age: number;&#10;}' >p2</data-lsp></span><span style="color: #000000">; </span><span style="color: #008000">// assign success, \u53D8\u91CF\u4E0D\u518D fresh \u4E86</span></div></code></div></pre>
<p>\u5E76\u96C6\u7C7B\u578B\u7684\u6210\u5458\u53EF\u80FD\u91CD\u590D\uFF0C\u6240\u4EE5 TypeScript \u9700\u8981\u66F4\u7CBE\u786E\u7684\u660E\u786E\u5E76\u96C6\u7C7B\u578B\u7684\u65B9\u5F0F</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type UserTextEvent = {&#10;    value: string;&#10;    target: HTMLInputElement;&#10;}' >UserTextEvent</data-lsp></span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) value: string' >value</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">; </span><span style="color: #001080"><data-lsp lsp='(property) target: HTMLInputElement' >target</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='interface HTMLInputElement' >HTMLInputElement</data-lsp></span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type UserMouseEvent = {&#10;    value: number;&#10;    target: HTMLDivElement;&#10;}' >UserMouseEvent</data-lsp></span><span style="color: #000000"> = { </span><span style="color: #001080"><data-lsp lsp='(property) value: number' >value</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">; </span><span style="color: #001080"><data-lsp lsp='(property) target: HTMLDivElement' >target</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='interface HTMLDivElement' >HTMLDivElement</data-lsp></span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type UserEvent = UserTextEvent | UserMouseEvent' >UserEvent</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type UserTextEvent = {&#10;    value: string;&#10;    target: HTMLInputElement;&#10;}' >UserTextEvent</data-lsp></span><span style="color: #000000"> | </span><span style="color: #267F99"><data-lsp lsp='type UserMouseEvent = {&#10;    value: number;&#10;    target: HTMLDivElement;&#10;}' >UserMouseEvent</data-lsp></span><span style="color: #000000">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #008000">// value \u7C7B\u578B\u88AB\u7EC6\u5316\u4E86\uFF0C\u4F46\u662F event \u7C7B\u578B\u5E76\u6CA1\u6709\uFF0C\u6BD4\u5982\u4F20\u5165\u4E86</span></div><div class='line'><span style="color: #008000">// { value: string; target: HTMLInputElement | HTMLDivElement }\uFF0C</span></div><div class='line'><span style="color: #008000">// \u4F9D\u7136\u5C5E\u4E8E UserEvent \u7C7B\u578B\uFF0C\u4F46\u662F Event \u7C7B\u578B\u5374\u5E76\u4E0D\u662F UserTextEvent</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function handleUserEvent(event: UserEvent): void' >handleUserEvent</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserEvent' >event</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type UserEvent = UserTextEvent | UserMouseEvent' >UserEvent</data-lsp></span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">if</span><span style="color: #000000"> (</span><span style="color: #0000FF">typeof</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserEvent' >event</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) value: string | number' >value</data-lsp></span><span style="color: #000000"> === </span><span style="color: #A31515">"string"</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserEvent' >event</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserEvent' >event</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) value: string' >value</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserEvent' >event</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) target: HTMLInputElement | HTMLDivElement' >target</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  } </span><span style="color: #AF00DB">else</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserEvent' >event</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserEvent' >event</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) value: number' >value</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserEvent' >event</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) target: HTMLInputElement | HTMLDivElement' >target</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">}</span></div></code></div></pre>
<p>\u52A0\u5165\u660E\u786E\u7684\u5B57\u9762\u91CF\u53EF\u4EE5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type UserTextEventWithType = {&#10;    type: "text";&#10;    value: string;&#10;    target: HTMLInputElement;&#10;}' >UserTextEventWithType</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) type: "text"' >type</data-lsp></span><span style="color: #000000">: </span><span style="color: #A31515">"text"</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) value: string' >value</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) target: HTMLInputElement' >target</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='interface HTMLInputElement' >HTMLInputElement</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type UserMouseEventWithType = {&#10;    type: "mouse";&#10;    value: number;&#10;    target: HTMLDivElement;&#10;}' >UserMouseEventWithType</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) type: "mouse"' >type</data-lsp></span><span style="color: #000000">: </span><span style="color: #A31515">"mouse"</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) value: number' >value</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) target: HTMLDivElement' >target</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='interface HTMLDivElement' >HTMLDivElement</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type UserEventWithType = UserTextEventWithType | UserMouseEventWithType' >UserEventWithType</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type UserTextEventWithType = {&#10;    type: "text";&#10;    value: string;&#10;    target: HTMLInputElement;&#10;}' >UserTextEventWithType</data-lsp></span><span style="color: #000000"> | </span><span style="color: #267F99"><data-lsp lsp='type UserMouseEventWithType = {&#10;    type: "mouse";&#10;    value: number;&#10;    target: HTMLDivElement;&#10;}' >UserMouseEventWithType</data-lsp></span><span style="color: #000000">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function handleUserEventWithType(event: UserEventWithType): void' >handleUserEventWithType</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserEventWithType' >event</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type UserEventWithType = UserTextEventWithType | UserMouseEventWithType' >UserEventWithType</data-lsp></span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #008000">// \u4E24\u4E2A\u5206\u652F\u4E2D\u7684\u7C7B\u578B\u660E\u786E\u4E86</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">if</span><span style="color: #000000"> (</span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserEventWithType' >event</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) type: "text" | "mouse"' >type</data-lsp></span><span style="color: #000000"> === </span><span style="color: #A31515">"text"</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserTextEventWithType' >event</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserTextEventWithType' >event</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) value: string' >value</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserTextEventWithType' >event</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) target: HTMLInputElement' >target</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  } </span><span style="color: #AF00DB">else</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserMouseEventWithType' >event</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserMouseEventWithType' >event</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) value: number' >value</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(parameter) event: UserMouseEventWithType' >event</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) target: HTMLDivElement' >target</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">}</span></div></code></div></pre>
<p>\u952E\u5165\u8FD0\u7B97\u7B26\uFF1A<code>type newType = TYPE[key]</code></p>

<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type APIResponse = {&#10;    user: {&#10;        userId: number;&#10;        name: string;&#10;        friendList: {&#10;            count: number;&#10;            friends: {&#10;                name: string;&#10;            }[];&#10;        };&#10;    };&#10;}' >APIResponse</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) user: {&#10;    userId: number;&#10;    name: string;&#10;    friendList: {&#10;        count: number;&#10;        friends: {&#10;            name: string;&#10;        }[];&#10;    };&#10;}' >user</data-lsp></span><span style="color: #000000">: {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(property) userId: number' >userId</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(property) name: string' >name</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='(property) friendList: {&#10;    count: number;&#10;    friends: {&#10;        name: string;&#10;    }[];&#10;}' >friendList</data-lsp></span><span style="color: #000000">: {</span></div><div class='line'><span style="color: #000000">      </span><span style="color: #001080"><data-lsp lsp='(property) count: number' >count</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">      </span><span style="color: #001080"><data-lsp lsp='(property) friends: {&#10;    name: string;&#10;}[]' >friends</data-lsp></span><span style="color: #000000">: { </span><span style="color: #001080"><data-lsp lsp='(property) name: string' >name</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000"> }[];</span></div><div class='line'><span style="color: #000000">    };</span></div><div class='line'><span style="color: #000000">  };</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #008000">// friendList \u7684\u7C7B\u578B\u53EF\u4EE5\u4ECE APIResponse \u7C7B\u578B\u4E2D\u4F7F\u7528\u952E\u5165\u8FD0\u7B97\u7B26\u83B7\u53D6</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function showFriendList(friendList: APIResponse["user"]["friendList"]): void' >showFriendList</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) friendList: {&#10;    count: number;&#10;    friends: {&#10;        name: string;&#10;    }[];&#10;}' >friendList</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type APIResponse = {&#10;    user: {&#10;        userId: number;&#10;        name: string;&#10;        friendList: {&#10;            count: number;&#10;            friends: {&#10;                name: string;&#10;            }[];&#10;        };&#10;    };&#10;}' >APIResponse</data-lsp></span><span style="color: #000000">[</span><span style="color: #A31515">"user"</span><span style="color: #000000">][</span><span style="color: #A31515">"friendList"</span><span style="color: #000000">]) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(parameter) friendList: {&#10;    count: number;&#10;    friends: {&#10;        name: string;&#10;    }[];&#10;}' >friendList</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) friends: {&#10;    name: string;&#10;}[]' >friends</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) Array&lt;{ name: string; }>.forEach(callbackfn: (value: {&#10;    name: string;&#10;}, index: number, array: {&#10;    name: string;&#10;}[]) => void, thisArg?: any): void' >forEach</data-lsp></span><span style="color: #000000">((</span><span style="color: #001080"><data-lsp lsp='(parameter) friend: {&#10;    name: string;&#10;}' >friend</data-lsp></span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #001080"><data-lsp lsp='var console: Console' >console</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) Console.log(...data: any[]): void' >log</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) friend: {&#10;    name: string;&#10;}' >friend</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-lsp lsp='(property) name: string' >name</data-lsp></span><span style="color: #000000">);</span></div><div class='line'><span style="color: #000000">  });</span></div><div class='line'><span style="color: #000000">}</span></div></code></div></pre>
<p><code>keyof</code> \u8FD0\u7B97\u7B26\u83B7\u53D6\u5BF9\u8C61\u6240\u6709\u952E\u7684\u7C7B\u578B\uFF0C\u5408\u5E76\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type ResponseKey = "userId" | "name" | "friendList"' >ResponseKey</data-lsp></span><span style="color: #000000"> = </span><span style="color: #0000FF">keyof</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type APIResponse = {&#10;    user: {&#10;        userId: number;&#10;        name: string;&#10;        friendList: {&#10;            count: number;&#10;            friends: {&#10;                name: string;&#10;            }[];&#10;        };&#10;    };&#10;}' >APIResponse</data-lsp></span><span style="color: #000000">[</span><span style="color: #A31515">"user"</span><span style="color: #000000">]; </span><span style="color: #008000">// "userId" | "name" | "friendList"</span></div></code></div></pre>
<p>\u5229\u7528 <code>keyof</code> \u5B9E\u73B0\u4E00\u4E2A\u7C7B\u578B\u5B89\u5168\u7684\u8BFB\u503C\u51FD\u6570</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function get&lt;O extends object, K extends keyof O>(obj: O, key: K): O[K]' >get</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) O in get&lt;O extends object, K extends keyof O>(obj: O, key: K): O[K]' >O</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99">object</span><span style="color: #000000">, </span><span style="color: #267F99"><data-lsp lsp='(type parameter) K in get&lt;O extends object, K extends keyof O>(obj: O, key: K): O[K]' >K</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #0000FF">keyof</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='(type parameter) O in get&lt;O extends object, K extends keyof O>(obj: O, key: K): O[K]' >O</data-lsp></span><span style="color: #000000">&gt;(</span><span style="color: #001080"><data-lsp lsp='(parameter) obj: O extends object' >obj</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) O in get&lt;O extends object, K extends keyof O>(obj: O, key: K): O[K]' >O</data-lsp></span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(parameter) key: K extends keyof O' >key</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) K in get&lt;O extends object, K extends keyof O>(obj: O, key: K): O[K]' >K</data-lsp></span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) obj: O extends object' >obj</data-lsp></span><span style="color: #000000">[</span><span style="color: #001080"><data-lsp lsp='(parameter) key: K extends keyof O' >key</data-lsp></span><span style="color: #000000">];</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const personInfo: {&#10;    name: string;&#10;    age: number;&#10;    friends: {&#10;        name: string;&#10;        age: number;&#10;    }[];&#10;}' >personInfo</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) name: string' >name</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">"banqinghe"</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) age: number' >age</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #098658">18</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) friends: {&#10;    name: string;&#10;    age: number;&#10;}[]' >friends</data-lsp>:</span><span style="color: #000000"> [{ </span><span style="color: #001080"><data-lsp lsp='(property) name: string' >name</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">"banqinghe"</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(property) age: number' >age</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #098658">18</span><span style="color: #000000"> }],</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let friendName: {&#10;    name: string;&#10;    age: number;&#10;}[]' >friendName</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='function get&lt;{&#10;    name: string;&#10;    age: number;&#10;    friends: {&#10;        name: string;&#10;        age: number;&#10;    }[];&#10;}, "friends">(obj: {&#10;    name: string;&#10;    age: number;&#10;    friends: {&#10;        name: string;&#10;        age: number;&#10;    }[];&#10;}, key: "friends"): {&#10;    name: string;&#10;    age: number;&#10;}[]' >get</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='const personInfo: {&#10;    name: string;&#10;    age: number;&#10;    friends: {&#10;        name: string;&#10;        age: number;&#10;    }[];&#10;}' >personInfo</data-lsp></span><span style="color: #000000">, </span><span style="color: #A31515">&apos;friends&apos;</span><span style="color: #000000">);</span></div></code></div></pre>
<p><code>Record</code> \u7C7B\u578B\uFF0C\u7528\u4E8E\u63CF\u8FF0\u6709\u6620\u5C04\u5173\u7CFB\u7684\u5BF9\u8C61</p>
<ul>
<li>\u5E38\u89C4\u7684\u7D22\u5F15\u7B7E\u540D\uFF0C\u952E\u53EA\u80FD\u7EA6\u675F\u4E3A <code>string</code>\u3001<code>number</code> \u6216 <code>symbol</code></li>
<li><code>Record</code>\uFF0C\u5BF9\u8C61\u7684\u952E\u8FD8\u53EF\u4EE5\u88AB\u7EA6\u675F\u4E3A <code>string</code> \u548C <code>number</code> \u7684\u5B50\u7C7B\u578B</li>
</ul>
<p>\u6620\u5C04\u7C7B\u578B\u662F\u4E00\u79CD\u6BD4 Record \u66F4\u5F3A\u5927\u7684\u6620\u5C04\u7C7B\u578B\uFF0CRecord \u7C7B\u578B\u5B9E\u9645\u4E0A\u5C31\u662F\u7528\u6620\u5C04\u7C7B\u578B\u5B9E\u73B0\u7684\u3002</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Weekday = "Mon" | "Tue" | "Wed" | "Thu" | "Fri"' >Weekday</data-lsp></span><span style="color: #000000"> = </span><span style="color: #A31515">&apos;Mon&apos;</span><span style="color: #000000"> | </span><span style="color: #A31515">&apos;Tue&apos;</span><span style="color: #000000"> | </span><span style="color: #A31515">&apos;Wed&apos;</span><span style="color: #000000"> | </span><span style="color: #A31515">&apos;Thu&apos;</span><span style="color: #000000"> | </span><span style="color: #A31515">&apos;Fri&apos;</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Day = Weekday | "Sat" | "Sun"' >Day</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type Weekday = "Mon" | "Tue" | "Wed" | "Thu" | "Fri"' >Weekday</data-lsp></span><span style="color: #000000"> | </span><span style="color: #A31515">&apos;Sat&apos;</span><span style="color: #000000"> | </span><span style="color: #A31515">&apos;Sun&apos;</span><span style="color: #000000">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #008000">// Without Record\uFF1A\u65E0\u6CD5\u6307\u5B9A Weekday \u2192 Day \u7684\u6620\u5C04</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const nextDayWithoutRecord: {&#10;    Mon: string;&#10;}' >nextDayWithoutRecord</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Mon: string' >Mon</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Tue&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #001080"><data-lsp lsp='const nextDayWithoutRecord: {&#10;    Mon: string;&#10;}' >nextDayWithoutRecord</data-lsp></span><span style="color: #000000">.</span><span style="color: #001080"><data-err><data-lsp lsp='any' >Tue</data-lsp></data-err></span><span style="color: #000000">; </span><span style="color: #008000">// \u4F7F\u7528\u65F6\u624D\u4F1A\u53D1\u73B0\u9519\u8BEF</span></div><span class="error"><span>Property 'Tue' does not exist on type '{ Mon: string; }'.</span><span class="code">2339</span></span><span class="error-behind">Property 'Tue' does not exist on type '{ Mon: string; }'.</span><div class='line'>&nbsp;</div><div class='line'><span style="color: #008000">// With Record</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const nextDayWithRecord: Record&lt;Weekday, Day>' >nextDayWithRecord</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type Record&lt;K extends string | number | symbol, T> = { [P in K]: T; }' >Record</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='type Weekday = "Mon" | "Tue" | "Wed" | "Thu" | "Fri"' >Weekday</data-lsp></span><span style="color: #000000">, </span><span style="color: #267F99"><data-lsp lsp='type Day = Weekday | "Sat" | "Sun"' >Day</data-lsp></span><span style="color: #000000">&gt; = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Mon: Day' >Mon</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Tue&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Tue: Day' >Tue</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Wed&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Wed: Day' >Wed</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Thu&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Thu: Day' >Thu</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Fri&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Fri: Day' >Fri</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Sat&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #008000">// With Mapped Type</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const nextDayWithMappedType: {&#10;    Mon: Day;&#10;    Tue: Day;&#10;    Wed: Day;&#10;    Thu: Day;&#10;    Fri: Day;&#10;}' >nextDayWithMappedType</data-lsp></span><span style="color: #000000">: { [</span><span style="color: #267F99"><data-lsp lsp='(type parameter) K' >K</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">in</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Weekday = "Mon" | "Tue" | "Wed" | "Thu" | "Fri"' >Weekday</data-lsp></span><span style="color: #000000">]: </span><span style="color: #267F99"><data-lsp lsp='type Day = Weekday | "Sat" | "Sun"' >Day</data-lsp></span><span style="color: #000000"> } = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Mon: Day' >Mon</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Tue&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Tue: Day' >Tue</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Wed&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Wed: Day' >Wed</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Thu&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Thu: Day' >Thu</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Fri&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) Fri: Day' >Fri</data-lsp>:</span><span style="color: #000000"> </span><span style="color: #A31515">&apos;Sat&apos;</span><span style="color: #000000">,</span></div><div class='line'><span style="color: #000000">};</span></div></code></div></pre>
<p>\u4F7F\u7528\u6620\u5C04\u7C7B\u578B\u5B9E\u73B0 <code>Record</code>\uFF1A</p>
<pre class="shiki light-plus" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #008000">// keyof any \u7684\u8FD4\u56DE\u4E3A string | number | symbol</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99">Record</span><span style="color: #000000">&lt;</span><span style="color: #267F99">K</span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #0000FF">keyof</span><span style="color: #000000"> </span><span style="color: #267F99">any</span><span style="color: #000000">, </span><span style="color: #267F99">T</span><span style="color: #000000">&gt; = {</span></div><div class='line'><span style="color: #000000">  [</span><span style="color: #267F99">P</span><span style="color: #000000"> </span><span style="color: #0000FF">in</span><span style="color: #000000"> </span><span style="color: #267F99">K</span><span style="color: #000000">]: </span><span style="color: #267F99">T</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">};</span></div></code></div></pre>
<p>\u6620\u5C04\u7C7B\u578B\u7ED3\u5408 keyof \u53EF\u4EE5\u5B9E\u73B0\u7EA6\u675F\u7279\u5B9A\u952E\u5BF9\u5E94\u503C\u7684\u7C7B\u578B\u3002</p>
<p>\u7279\u6B8A\u7684\u7C7B\u578B\u8FD0\u7B97\u7B26 <code>-</code>\uFF08\u51CF\u53F7\uFF09\uFF0C\u53EA\u80FD\u5728\u6620\u5C04\u7C7B\u578B\u4E2D\u4F7F\u7528\u3002\u53EF\u4EE5\u5C06\u53EF\u9009\uFF08?\uFF09\u6216\u53EA\u8BFB\uFF08readonly\uFF09\u72B6\u6001\u53BB\u9664\u3002</p>
<p>\u4E0E <code>-</code> \u5BF9\u5E94\u7684\u8FD0\u7B97\u7B26 <code>+</code>\uFF0C\u4E00\u822C\u4E0D\u76F4\u63A5\u4F7F\u7528\uFF0C\u56E0\u4E3A\u5176\u4E00\u822C\u8574\u542B\u5728\u522B\u7684\u8FD0\u7B97\u7B26\u4E2D\u3002</p>
<ul>
<li><code>+readonly</code> \u7B49\u6548\u4E8E <code>readonly</code></li>
<li><code>+?</code> \u7B49\u6548\u4E8E <code>?</code></li>
</ul>

<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) id: number' >id</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">number</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) isEmployee: boolean' >isEmployee</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">boolean</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080"><data-lsp lsp='(property) notes: string[]' >notes</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">[];</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'><span style="color: #008000">// \u6240\u6709\u5B57\u6BB5\u53EF\u9009</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type OptionalAccount = {&#10;    id?: number | undefined;&#10;    isEmployee?: boolean | undefined;&#10;    notes?: string[] | undefined;&#10;}' >OptionalAccount</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  [</span><span style="color: #267F99"><data-lsp lsp='(type parameter) K' >K</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">in</span><span style="color: #000000"> </span><span style="color: #0000FF">keyof</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000">]?: </span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000">[</span><span style="color: #267F99"><data-lsp lsp='(type parameter) K' >K</data-lsp></span><span style="color: #000000">];</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type RequiredAccount = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >RequiredAccount</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  [</span><span style="color: #267F99"><data-lsp lsp='(type parameter) K' >K</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">in</span><span style="color: #000000"> </span><span style="color: #0000FF">keyof</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type OptionalAccount = {&#10;    id?: number | undefined;&#10;    isEmployee?: boolean | undefined;&#10;    notes?: string[] | undefined;&#10;}' >OptionalAccount</data-lsp></span><span style="color: #000000">]-?: </span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000">[</span><span style="color: #267F99"><data-lsp lsp='(type parameter) K' >K</data-lsp></span><span style="color: #000000">];</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type ReadonlyAccount = {&#10;    readonly id: number;&#10;    readonly isEmployee: boolean;&#10;    readonly notes: string[];&#10;}' >ReadonlyAccount</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #0000FF">readonly</span><span style="color: #000000"> [</span><span style="color: #267F99"><data-lsp lsp='(type parameter) K' >K</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">in</span><span style="color: #000000"> </span><span style="color: #0000FF">keyof</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000">]: </span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000">[</span><span style="color: #267F99"><data-lsp lsp='(type parameter) K' >K</data-lsp></span><span style="color: #000000">];</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type WritableAccount = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >WritableAccount</data-lsp></span><span style="color: #000000"> = {</span></div><div class='line'><span style="color: #000000">  -</span><span style="color: #0000FF">readonly</span><span style="color: #000000"> [</span><span style="color: #267F99"><data-lsp lsp='(type parameter) K' >K</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">in</span><span style="color: #000000"> </span><span style="color: #0000FF">keyof</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type ReadonlyAccount = {&#10;    readonly id: number;&#10;    readonly isEmployee: boolean;&#10;    readonly notes: string[];&#10;}' >ReadonlyAccount</data-lsp></span><span style="color: #000000">]: </span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000">[</span><span style="color: #267F99"><data-lsp lsp='(type parameter) K' >K</data-lsp></span><span style="color: #000000">];</span></div><div class='line'><span style="color: #000000">};</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #008000">// \u5176\u4ED6 case\uFF08\u6240\u6709\u5B57\u6BB5\u53EF\u4E3A null\u3001\u53EA\u8BFB\u2026\u2026 \u89C1 P168\uFF09</span></div></code></div></pre>
<p>\u6620\u5C04\u7C7B\u578B\u5F88\u597D\u7528\uFF0C\u6240\u4EE5 TypeScript \u5185\u7F6E\u4E86\u4E00\u4E9B\u7C7B\u578B\uFF0C\u7528\u6765\u63CF\u8FF0\u5E38\u89C1\u7684\u6620\u5C04\u7C7B\u578B</p>
<ul>
<li><code>Record&#x3C;Keys, Values></code></li>
<li><code>Partial&#x3C;Object></code>\uFF1A\u5C06 <code>Object</code> \u4E2D\u6BCF\u4E2A\u5C5E\u6027\u90FD\u7F6E\u4E3A\u53EF\u9009</li>
<li><code>Required&#x3C;Object></code>\uFF1A\u5C06 <code>Object</code> \u4E2D\u6BCF\u4E2A\u5C5E\u6027\u90FD\u7F6E\u4E3A\u5FC5\u987B</li>
<li><code>Readonly&#x3C;Object></code>\uFF1A\u5C06 <code>Object</code> \u4E2D\u7684\u6BCF\u4E2A\u5C5E\u6027\u90FD\u7F6E\u4E3A\u53EA\u8BFB</li>
<li><code>Pick&#x3C;Object, Keys></code>\uFF1A\u8FD4\u56DE\u53EA\u542B\u6307\u5B9A <code>Keys</code> \u7684\u5B50\u7C7B\u578B</li>
<li><code>Omit&#x3C;Object, Keys></code>: \u8FD4\u56DE\u4E0D\u542B\u6307\u5B9A <code>Keys</code> \u7684\u5B50\u7C7B\u578B\uFF08\u5B9E\u73B0\u4F7F\u7528\u4E86 <code>Exclude</code>\uFF09</li>
</ul>
<p>\uFF08\u5B66\u4E60\u4E00\u4E0B\u8FD9\u4E9B\u6620\u5C04\u7C7B\u578B\u7684\u5B9E\u73B0\uFF09</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type OptionalAccount2 = {&#10;    id?: number | undefined;&#10;    isEmployee?: boolean | undefined;&#10;    notes?: string[] | undefined;&#10;}' >OptionalAccount2</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type Partial&lt;T> = { [P in keyof T]?: T[P] | undefined; }' >Partial</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000">&gt;;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type RequiredAccount2 = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >RequiredAccount2</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type Required&lt;T> = { [P in keyof T]-?: T[P]; }' >Required</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='type OptionalAccount2 = {&#10;    id?: number | undefined;&#10;    isEmployee?: boolean | undefined;&#10;    notes?: string[] | undefined;&#10;}' >OptionalAccount2</data-lsp></span><span style="color: #000000">&gt;;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type ReadonlyAccount2 = {&#10;    readonly id: number;&#10;    readonly isEmployee: boolean;&#10;    readonly notes: string[];&#10;}' >ReadonlyAccount2</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type Readonly&lt;T> = { readonly [P in keyof T]: T[P]; }' >Readonly</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000">&gt;;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type PickAccount = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;}' >PickAccount</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type Pick&lt;T, K extends keyof T> = { [P in K]: T[P]; }' >Pick</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000">, </span><span style="color: #A31515">&apos;id&apos;</span><span style="color: #000000"> | </span><span style="color: #A31515">&apos;isEmployee&apos;</span><span style="color: #000000">&gt;;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type OmitAccount = {&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >OmitAccount</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type Omit&lt;T, K extends string | number | symbol> = { [P in Exclude&lt;keyof T, K>]: T[P]; }' >Omit</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='type Account = {&#10;    id: number;&#10;    isEmployee: boolean;&#10;    notes: string[];&#10;}' >Account</data-lsp></span><span style="color: #000000">, </span><span style="color: #A31515">&apos;id&apos;</span><span style="color: #000000">&gt;;</span></div></code></div></pre>
<p>\u4F34\u751F\u5BF9\u8C61\u6A21\u5F0F\uFF0C\u5373\u5C06\u540C\u540D\u7684\u5BF9\u8C61\u548C\u7C7B\u653E\u914D\u5BF9\u5728\u4E00\u8D77\u3002TypeScript \u4E2D\u53EF\u4EE5\u5B9E\u73B0\u7C7B\u4F3C\u7684\u6A21\u5F0F\uFF0C\u56E0\u4E3A TypeScript \u4E2D\u503C\u548C\u7C7B\u578B\u5904\u4E8E\u4E0D\u540C
\u7684\u547D\u540D\u7A7A\u95F4\u4E2D\uFF0C\u6240\u4EE5\u53EF\u4EE5\u505A\u5230\u5C06\u540C\u540D\u5BF9\u8C61\u548C\u7C7B\u578B\u653E\u5728\u4E00\u8D77\u3002</p>
<p>Tips\uFF1A\u82E5\u4E00\u4E2A ts \u6587\u4EF6\u4E2D\u65E2 export type \u53C8 export \u53D8\u91CF\uFF0C\u5E76\u4E14\u4E8C\u8005\u540C\u540D\uFF0C<code>import { type } from './file'</code> \u7684\u65F6\u5019\u4F1A\u540C\u65F6\u5C06\u4E8C\u8005\u5BFC\u5165\u3002</p>
<p>\u5C06\u6570\u7EC4\u63A8\u5BFC\u4E3A\u5143\u7EC4\u7684\u65B9\u6CD5\uFF1A</p>
<ol>
<li>as const</li>
<li>\u5229\u7528\u5269\u4F59\u53C2\u6570\u7C7B\u578B</li>
</ol>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function tuple&lt;T extends unknown[]>(...args: T): T' >tuple</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in tuple&lt;T extends unknown[]>(...args: T): T' >T</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99">unknown</span><span style="color: #000000">[]&gt;(...</span><span style="color: #001080"><data-lsp lsp='(parameter) args: T extends unknown[]' >args</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in tuple&lt;T extends unknown[]>(...args: T): T' >T</data-lsp></span><span style="color: #000000">): </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in tuple&lt;T extends unknown[]>(...args: T): T' >T</data-lsp></span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) args: T extends unknown[]' >args</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const tuple0: (string | number | boolean)[]' >tuple0</data-lsp></span><span style="color: #000000"> = [</span><span style="color: #098658">1</span><span style="color: #000000">, </span><span style="color: #A31515">&apos;2&apos;</span><span style="color: #000000">, </span><span style="color: #0000FF">true</span><span style="color: #000000">]; </span><span style="color: #008000">// (number | string | boolean)[]</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const tuple1: [number, string, boolean]' >tuple1</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='function tuple&lt;[number, string, boolean]>(args_0: number, args_1: string, args_2: boolean): [number, string, boolean]' >tuple</data-lsp></span><span style="color: #000000">(</span><span style="color: #098658">1</span><span style="color: #000000">, </span><span style="color: #A31515">&apos;2&apos;</span><span style="color: #000000">, </span><span style="color: #0000FF">true</span><span style="color: #000000">); </span><span style="color: #008000">// [number, string, boolean]</span></div></code></div></pre>
<p>\u7EC6\u5316\u7C7B\u578B\u53EA\u5728\u5F53\u524D\u4F5C\u7528\u57DF\u4E2D\u6709\u6548\uFF0C\u4E0D\u4F1A\u8F6C\u79FB\u5230\u5176\u4ED6\u4F5C\u7528\u57DF\u3002\u8FD9\u5C31\u5BFC\u81F4\u4E0B\u9762\u7684 parseInt \u51FD\u6570\u4F9D\u7136\u65E0\u6CD5\u5F97\u77E5 isString(input) \u8FD4\u56DE\u7684\u662F true \u8FD8\u662F false\u3002</p>
<p>\u5F53<strong>\u51FD\u6570\u7EC6\u5316\u4E86\u53C2\u6570\u7C7B\u578B</strong>\u4E14<strong>\u8FD4\u56DE\u503C\u4E3A boolean \u65F6</strong>\uFF0C\u53EF\u4EE5\u4F7F\u7528 is \u64CD\u4F5C\u7B26\u4F7F\u7C7B\u578B\u7EC6\u5316\u80FD\u5728\u4F5C\u7528\u57DF\u4E4B\u95F4\u8F6C\u79FB\u3002\u8FD9\u4E00\u7279\u6027\u7684\u4F7F\u7528\u573A\u666F\u8F83\u5C11\u3002</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function isString(input: unknown): input is string' >isString</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) input: unknown' >input</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">unknown</span><span style="color: #000000">): </span><span style="color: #001080"><data-lsp lsp='(parameter) input: unknown' >input</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">is</span><span style="color: #000000"> </span><span style="color: #267F99">string</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #0000FF">typeof</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) input: unknown' >input</data-lsp></span><span style="color: #000000"> === </span><span style="color: #A31515">&apos;string&apos;</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function parseInput&lt;T>(input: string | number): string | number' >parseInput</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in parseInput&lt;T>(input: string | number): string | number' >T</data-lsp></span><span style="color: #000000">&gt;(</span><span style="color: #001080"><data-lsp lsp='(parameter) input: string | number' >input</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000"> | </span><span style="color: #267F99">number</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">if</span><span style="color: #000000"> (</span><span style="color: #795E26"><data-lsp lsp='function isString(input: unknown): input is string' >isString</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) input: string | number' >input</data-lsp></span><span style="color: #000000">)) {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) input: string' >input</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) String.toUpperCase(): string' >toUpperCase</data-lsp></span><span style="color: #000000">();</span></div><div class='line'><span style="color: #000000">  } </span><span style="color: #AF00DB">else</span><span style="color: #000000"> {</span></div><div class='line'><span style="color: #000000">    </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) input: number' >input</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">  }</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #008000">// \u6211\u81EA\u5DF1\u8FD8\u6709\u4E00\u4E2A\u95EE\u9898\u662F\uFF0C\u600E\u4E48\u624D\u80FD\u63A8\u5BFC\u51FA parseInput \u8FD4\u56DE\u7684\u7C7B\u578B\u5462\uFF1F</span></div><div class='line'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #0070C1"><data-lsp lsp='const resParse: string | number' >resParse</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='function parseInput&lt;unknown>(input: string | number): string | number' >parseInput</data-lsp></span><span style="color: #000000">(</span><span style="color: #098658">1</span><span style="color: #000000">); </span><span style="color: #008000">// string | number</span></div></code></div></pre>
<p>\u6761\u4EF6\u7C7B\u578B\uFF0C\u5F62\u5982 <code>T extends string ? true : false</code>\u3002\u53EF\u4EE5\u8BA4\u4E3A\u662F\u7C7B\u578B\u5C42\u9762\u7684\u4E09\u5143\u8868\u8FBE\u5F0F</p>
<p>\u6761\u4EF6\u7C7B\u578B\u9075\u4ECE\u5206\u914D\u5F8B\uFF0C\u4E5F\u53EF\u4EE5\u8BF4\u5177\u6709\u5206\u914D\u6027\u8D28\uFF0C\u5373\uFF1A <code>(string | number) extends T ? A : B</code> \u7B49\u4EF7\u4E8E <code>(string extends T) ? A : B | (number extends T) ? A : B</code></p>
<p>\u6839\u636E\u5206\u914D\u6027\u8D28\uFF0C\u4E0B\u9762\u7684 <code>ToArray</code> \u7C7B\u578B\u53EF\u4EE5\u5BF9\u5E76\u96C6\u7C7B\u578B\u7684\u6570\u7EC4\u8FDB\u884C\u5206\u914D\uFF1A</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type ToArray&lt;T> = T extends unknown ? T[] : T[]' >ToArray</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ToArray&lt;T>' >T</data-lsp></span><span style="color: #000000">&gt; = </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ToArray&lt;T>' >T</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99">unknown</span><span style="color: #000000"> ? </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ToArray&lt;T>' >T</data-lsp></span><span style="color: #000000">[] : </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ToArray&lt;T>' >T</data-lsp></span><span style="color: #000000">[];</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type A = number[]' >A</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type ToArray&lt;T> = T extends unknown ? T[] : T[]' >ToArray</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99">number</span><span style="color: #000000">&gt;;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type B = number[] | string[] | false[] | true[]' >B</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type ToArray&lt;T> = T extends unknown ? T[] : T[]' >ToArray</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99">number</span><span style="color: #000000"> | </span><span style="color: #267F99">string</span><span style="color: #000000"> | </span><span style="color: #267F99">boolean</span><span style="color: #000000">&gt;;</span></div></code></div></pre>
<p>\u5229\u7528\u5206\u914D\u6027\u8D28\uFF0C\u4E5F\u53EF\u4EE5\u7528\u4E8E\u5B9E\u73B0\u4E00\u4E2A <code>Without</code> \u7C7B\u578B\uFF0C<code>Without&#x3C;T, U></code> \u5373\u4E3A <code>T</code> \u4E2D\u4E0D\u542B <code>U</code> \u7C7B\u578B\u7684\u7C7B\u578B\u3002</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Without&lt;T, U> = T extends U ? never : T' >Without</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type Without&lt;T, U>' >T</data-lsp></span><span style="color: #000000">, </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in type Without&lt;T, U>' >U</data-lsp></span><span style="color: #000000">&gt; = </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type Without&lt;T, U>' >T</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in type Without&lt;T, U>' >U</data-lsp></span><span style="color: #000000"> ? </span><span style="color: #267F99">never</span><span style="color: #000000"> : </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type Without&lt;T, U>' >T</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type NoAB = "b" | "c"' >NoAB</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type Without&lt;T, U> = T extends U ? never : T' >Without</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #A31515">&apos;a&apos;</span><span style="color: #000000"> | </span><span style="color: #A31515">&apos;b&apos;</span><span style="color: #000000"> | </span><span style="color: #A31515">&apos;c&apos;</span><span style="color: #000000">, </span><span style="color: #A31515">&apos;a&apos;</span><span style="color: #000000">&gt;; </span><span style="color: #008000">// &apos;b&apos; | &apos;c&apos;</span></div></code></div></pre>
<p>\u4E0A\u9762\u7684 NoAB \u7684\u8FD0\u7B97\u8FC7\u7A0B\uFF1A</p>
<pre class="shiki light-plus" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99">NoAB</span><span style="color: #000000"> = </span><span style="color: #267F99">Without</span><span style="color: #000000">&lt;</span><span style="color: #A31515">'a'</span><span style="color: #000000"> | </span><span style="color: #A31515">'b'</span><span style="color: #000000"> | </span><span style="color: #A31515">'c'</span><span style="color: #000000">, </span><span style="color: #A31515">'a'</span><span style="color: #000000">&gt;; </span><span style="color: #008000">// 'b' | 'c'</span></div><div class='line'><span style="color: #000000">          = </span><span style="color: #001080">Without</span><span style="color: #000000">&lt;</span><span style="color: #A31515">'a'</span><span style="color: #000000">, </span><span style="color: #A31515">'a'</span><span style="color: #000000">&gt; | </span><span style="color: #001080">Without</span><span style="color: #000000">&lt;</span><span style="color: #A31515">'b'</span><span style="color: #000000">, </span><span style="color: #A31515">'a'</span><span style="color: #000000">&gt; | </span><span style="color: #001080">Without</span><span style="color: #000000">&lt;</span><span style="color: #A31515">'c'</span><span style="color: #000000">, </span><span style="color: #A31515">'a'</span><span style="color: #000000">&gt;;</span></div><div class='line'><span style="color: #000000">          = </span><span style="color: #001080">never</span><span style="color: #000000"> | </span><span style="color: #A31515">'b'</span><span style="color: #000000"> | </span><span style="color: #A31515">'c'</span></div><div class='line'><span style="color: #000000">          = </span><span style="color: #A31515">'b'</span><span style="color: #000000"> | </span><span style="color: #A31515">'c'</span></div></code></div></pre>
<p>P177 \u4E2D\u8BF4\u5982\u679C\u6CA1\u6709\u5206\u914D\u7C7B\u578B\uFF0C\u4E0A\u9762\u7684 <code>NoAB</code> \u7C7B\u578B\u5C31\u4F1A\u662F <code>never</code> \u4E86\u3002\u4F46\u662F\u6211\u81EA\u5DF1\u611F\u89C9\u4E0D\u5E94\u8BE5\u8FD8\u662F <code>'a' | 'b' | 'c'</code> \u5417\uFF1F\u56E0\u4E3A <code>'a' | 'b' | 'c'</code> \u6574\u4F53\u662F\u4E0D\u80FD\u8D4B\u503C\u7ED9 <code>'a'</code> \u7684\uFF0C\u6240\u4EE5\u8FD4\u56DE\u7684\u662F\u4E09\u5143\u8868\u8FBE\u5F0F\u7684\u53F3\u5206\u652F\u3002</p>
<p>\u4E0B\u9762\u7684 <code>ElementType</code> \u53EF\u4EE5\u7528\u4E8E\u63D0\u53D6\u6570\u7EC4\u5143\u7D20\u7684\u7C7B\u578B\uFF1A</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type ElementType&lt;T> = T extends unknown[] ? T[number] : T' >ElementType</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ElementType&lt;T>' >T</data-lsp></span><span style="color: #000000">&gt; = </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ElementType&lt;T>' >T</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99">unknown</span><span style="color: #000000">[] ? </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ElementType&lt;T>' >T</data-lsp></span><span style="color: #000000">[</span><span style="color: #267F99">number</span><span style="color: #000000">] : </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ElementType&lt;T>' >T</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type E = number' >E</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type ElementType&lt;T> = T extends unknown[] ? T[number] : T' >ElementType</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99">number</span><span style="color: #000000">[]&gt;;</span></div></code></div></pre>
<p><code>[number]</code> \u53EF\u4EE5\u7528\u6765\u63D0\u53D6\u6570\u7EC4\u7684\u5143\u7D20\u7C7B\u578B\uFF0C\u56E0\u4E3A\u6570\u7EC4\u5728\u8FD9\u91CC\u548C\u5BF9\u8C61\u662F\u4E00\u6837\u7684\u7ED3\u6784\u3002</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Bool = boolean' >Bool</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99">boolean</span><span style="color: #000000">[][</span><span style="color: #267F99">number</span><span style="color: #000000">];</span></div></code></div></pre>
<p>\u9664\u4E86\u53EF\u4EE5\u5728\u5C16\u62EC\u53F7\u91CC\u58F0\u660E\u6CDB\u578B\u53D8\u91CF\uFF08\u5982 <code>&#x3C;T></code>\uFF09\uFF0C\u4E5F\u53EF\u4EE5\u5728\u6761\u4EF6\u7C7B\u578B\u4E2D\u4F7F\u7528 <code>infer</code> \u5173\u952E\u5B57\u58F0\u660E\u3002</p>
<p>\u4E0A\u6587\u4E2D\u7684 <code>ElementType</code> \u7C7B\u578B\u53EF\u4EE5\u4F7F\u7528 <code>infer</code> \u5173\u952E\u5B57\u91CD\u5199\uFF1A</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type ElementType2&lt;T> = T extends (infer U)[] ? U : T' >ElementType2</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ElementType2&lt;T>' >T</data-lsp></span><span style="color: #000000">&gt; = </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ElementType2&lt;T>' >T</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> (</span><span style="color: #0000FF">infer</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U' >U</data-lsp></span><span style="color: #000000">)[] ? </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U' >U</data-lsp></span><span style="color: #000000"> : </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type ElementType2&lt;T>' >T</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type E2 = boolean' >E2</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type ElementType2&lt;T> = T extends (infer U)[] ? U : T' >ElementType2</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99">boolean</span><span style="color: #000000">[]&gt;;</span></div></code></div></pre>
<p>\u53EF\u4EE5\u770B\u51FA\uFF0C<code>infer</code> \u7684\u4F5C\u7528\u662F\u6761\u4EF6\u7C7B\u578B\u4E2D\u7C7B\u578B\u63A8\u5BFC\u7684\u7ED3\u679C\u3002</p>
<p>\u53E6\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type SecondArg&lt;F> = F extends (a: any, b: infer B) => any ? B : never' >SecondArg</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) F in type SecondArg&lt;F>' >F</data-lsp></span><span style="color: #000000">&gt; = </span><span style="color: #267F99"><data-lsp lsp='(type parameter) F in type SecondArg&lt;F>' >F</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> (</span><span style="color: #001080"><data-lsp lsp='(parameter) a: any' >a</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">any</span><span style="color: #000000">, </span><span style="color: #001080"><data-lsp lsp='(parameter) b: B' >b</data-lsp></span><span style="color: #000000">: </span><span style="color: #0000FF">infer</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='(type parameter) B' >B</data-lsp></span><span style="color: #000000">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #267F99">any</span><span style="color: #000000"> ? </span><span style="color: #267F99"><data-lsp lsp='(type parameter) B' >B</data-lsp></span><span style="color: #000000"> : </span><span style="color: #267F99">never</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type F = (start?: number | undefined, end?: number | undefined) => any[]' >F</data-lsp></span><span style="color: #000000"> = </span><span style="color: #0000FF">typeof</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='var Array: ArrayConstructor' >Array</data-lsp></span><span style="color: #000000">[</span><span style="color: #A31515">&apos;prototype&apos;</span><span style="color: #000000">][</span><span style="color: #A31515">&apos;slice&apos;</span><span style="color: #000000">];</span></div><div class='line'><span style="color: #008000">// \u5F97\u5230\u4E86 Array.prototype.slice \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7C7B\u578B</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Arg2 = number | undefined' >Arg2</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type SecondArg&lt;F> = F extends (a: any, b: infer B) => any ? B : never' >SecondArg</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='type F = (start?: number | undefined, end?: number | undefined) => any[]' >F</data-lsp></span><span style="color: #000000">&gt;;</span></div></code></div></pre>
<p>\u5185\u7F6E\u7684\u6761\u4EF6\u7C7B\u578B\uFF08\u8BB0\u5F97\u5B66\u4E60\u4E00\u4E0B\u5B9E\u73B0\uFF0C\u90FD\u4E0D\u96BE\uFF09\uFF1A</p>
<ul>
<li>
<p><code>Exclude&#x3C;T, U></code>\uFF1A\u8BA1\u7B97\u5728 <code>T</code> \u4E2D\u800C\u4E0D\u5728 <code>U</code> \u4E2D\u7684\u7C7B\u578B</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type EXC = boolean' >EXC</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type Exclude&lt;T, U> = T extends U ? never : T' >Exclude</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99">boolean</span><span style="color: #000000"> | </span><span style="color: #267F99">number</span><span style="color: #000000">, </span><span style="color: #267F99">number</span><span style="color: #000000">&gt;;</span></div></code></div></pre>
</li>
<li>
<p><code>Extract&#x3C;T, U></code>\uFF1A\u8BA1\u7B97\u5728 <code>T</code> \u53EF\u4EE5\u8D4B\u503C\u7ED9 <code>U</code> \u7684\u7C7B\u578B\uFF0C\u5177\u4F53\u5B9E\u73B0\u5C31\u662F\u548C <code>Exclude</code> \u7684\u6761\u4EF6\u5206\u652F\u53CD\u8FC7\u6765</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type EXT = string | number' >EXT</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type Extract&lt;T, U> = T extends U ? T : never' >Extract</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99">boolean</span><span style="color: #000000"> | </span><span style="color: #267F99">number</span><span style="color: #000000"> | </span><span style="color: #267F99">string</span><span style="color: #000000">, </span><span style="color: #267F99">string</span><span style="color: #000000"> | </span><span style="color: #267F99">number</span><span style="color: #000000">&gt;;</span></div></code></div></pre>
</li>
<li>
<p><code>NonNullable&#x3C;T></code>\uFF1A\u4ECE <code>T</code> \u4E2D\u53BB\u9664 <code>null</code> \u548C <code>undefined</code>\uFF0C<code>undefined extends null</code> \u662F\u6210\u7ACB\u7684\u3002\u5B9E\u73B0\u5C31\u662F\u7528\u7684 <code>extends null</code> \u6761\u4EF6\u7C7B\u578B\u3002</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type NON = string | number' >NON</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type NonNullable&lt;T> = T extends null | undefined ? never : T' >NonNullable</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99">string</span><span style="color: #000000"> | </span><span style="color: #267F99">null</span><span style="color: #000000"> | </span><span style="color: #267F99">number</span><span style="color: #000000"> | </span><span style="color: #267F99">undefined</span><span style="color: #000000">&gt;;</span></div></code></div></pre>
</li>
<li>
<p><code>ReturnType&#x3C;T></code>\uFF1A\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\uFF08\u5BF9\u6CDB\u578B\u548C\u91CD\u8F7D\u7684\u51FD\u6570\u65E0\u6548\uFF09</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type RET = string' >RET</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type ReturnType&lt;T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any' >ReturnType</data-lsp></span><span style="color: #000000">&lt;() </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000"> </span><span style="color: #267F99">string</span><span style="color: #000000">&gt;;</span></div></code></div></pre>
</li>
<li>
<p><code>InstanceType&#x3C;T></code>\uFF1A\u83B7\u53D6\u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B\u7C7B\u578B\uFF0C\u5176\u5B9E\u5C31\u662F\u83B7\u53D6\u6784\u9020\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u4F7F\u7528 abstract new \u505A\u51FD\u6570\u7C7B\u578B\u524D\u7F00\u5224\u65AD\u662F\u4E0D\u662F\u6784\u9020\u51FD\u6570\uFF08\u770B\u8D77\u6765\u662F\u8FD9\u6837\uFF09</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #008000">// type InstanceType&lt;T extends abstract new (...args: any) =&gt; any&gt; = T extends abstract new (...args: any) =&gt; infer R ? R : any</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type INST_ARR = unknown[]' >INST_ARR</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type InstanceType&lt;T extends abstract new (...args: any) => any> = T extends abstract new (...args: any) => infer R ? R : any' >InstanceType</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #0000FF">typeof</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='var Array: ArrayConstructor' >Array</data-lsp></span><span style="color: #000000">&gt;;</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type INST_DATE = Date' >INST_DATE</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type InstanceType&lt;T extends abstract new (...args: any) => any> = T extends abstract new (...args: any) => infer R ? R : any' >InstanceType</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #0000FF">typeof</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='var Date: DateConstructor' >Date</data-lsp></span><span style="color: #000000">&gt;;</span></div></code></div></pre>
</li>
</ul>
<p>\u7C7B\u578B\u65AD\u8A00\u7684\u4E24\u79CD\u65B9\u5F0F\uFF1A</p>
<ol>
<li><code>as</code></li>
<li><T> \u524D\u7F00\uFF0C\u6BD4\u5982\u6709\u65F6\u5019\u4F1A\u9047\u5230\u8FD9\u6837\u7684\u5199\u6CD5\uFF1A<code>const canvas = &#x3C;HTMLCanvasElement> document.getElementById('#canvas');</code></li>
</ol>
<p>\u5C16\u62EC\u53F7\u524D\u7F00\u662F\u65E7\u8BED\u6CD5\uFF0C\u63A8\u8350\u4F7F\u7528 <code>as</code> \u64CD\u4F5C\u7B26\u3002</p>
<p>\u975E\u7A7A\u65AD\u8A00\uFF1A<code>Something!</code> \u8868\u793A\u786E\u5B9A <code>Something</code> \u662F\u975E\u7A7A\u7684\u3002
\u660E\u786E\u8D4B\u503C\u65AD\u8A00\uFF1A<code>let userId!: string;</code> \u8868\u793A\u786E\u5B9A <code>userId</code> \u5728\u4F7F\u7528\u65F6\u662F\u5DF2\u7ECF\u88AB\u8D4B\u503C\u7684\u3002</p>
<p>TypeScript \u7C7B\u578B\u7684\u4E0D\u652F\u6301\u540D\u4E49\u7C7B\u578B\uFF0C\u5373\u5982\u679C\u6709\u4E24\u4E2A\u7C7B\u578B\u58F0\u660E <code>type UserId = string</code>\u3001<code>type CompanyId = string</code>\uFF0C\u90A3\u4E48 <code>function get(id: UserId)</code> \u4E5F\u662F\u80FD\u63A5\u53D7 <code>CompanyId</code> \u7C7B\u578B\u7684\u53C2\u6570\u7684\u3002</p>
<p>\u4E00\u79CD\u89E3\u51B3\u7684\u65B9\u5F0F\uFF0C\u540D\u4E3A\u7C7B\u578B\u70D9\u5370\uFF08type branding\uFF09\uFF0C\u5373\u4F7F\u7528\u5982\u4E0B\u7684\u7C7B\u578B\u58F0\u660E\uFF1A</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type UserId = string &amp; {&#10;    readonly brand: unique symbol;&#10;}' >UserId</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99">string</span><span style="color: #000000"> & { </span><span style="color: #0000FF">readonly</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(property) brand: unique symbol' >brand</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">unique</span><span style="color: #000000"> </span><span style="color: #267F99">symbol</span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type CompanyId = string &amp; {&#10;    readonly brand: unique symbol;&#10;}' >CompanyId</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99">string</span><span style="color: #000000"> & { </span><span style="color: #0000FF">readonly</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(property) brand: unique symbol' >brand</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">unique</span><span style="color: #000000"> </span><span style="color: #267F99">symbol</span><span style="color: #000000"> };</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function UserId(id: string): UserId' >UserId</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) id: string' >id</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) id: string' >id</data-lsp></span><span style="color: #000000"> </span><span style="color: #AF00DB">as</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type UserId = string &amp; {&#10;    readonly brand: unique symbol;&#10;}' >UserId</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function CompanyId(id: string): CompanyId' >CompanyId</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) id: string' >id</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99">string</span><span style="color: #000000">) {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='(parameter) id: string' >id</data-lsp></span><span style="color: #000000"> </span><span style="color: #AF00DB">as</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type CompanyId = string &amp; {&#10;    readonly brand: unique symbol;&#10;}' >CompanyId</data-lsp></span><span style="color: #000000">;</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function getUserInfo(id: UserId): void' >getUserInfo</data-lsp></span><span style="color: #000000">(</span><span style="color: #001080"><data-lsp lsp='(parameter) id: UserId' >id</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='type UserId = string &amp; {&#10;    readonly brand: unique symbol;&#10;}' >UserId</data-lsp></span><span style="color: #000000">) {}</span></div><div class='line'><span style="color: #795E26"><data-lsp lsp='function getUserInfo(id: UserId): void' >getUserInfo</data-lsp></span><span style="color: #000000">(</span><span style="color: #795E26"><data-lsp lsp='function UserId(id: string): UserId' >UserId</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">&apos;123&apos;</span><span style="color: #000000">));</span></div><div class='line'><span style="color: #795E26"><data-lsp lsp='function getUserInfo(id: UserId): void' >getUserInfo</data-lsp></span><span style="color: #000000">(</span><span style="color: #795E26"><data-lsp lsp='function CompanyId(id: string): CompanyId' >CompanyId</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">&apos;123&apos;</span><span style="color: #000000">));</span></div><span class="error"><span>Argument of type 'CompanyId' is not assignable to parameter of type 'UserId'.
  Type 'CompanyId' is not assignable to type '{ readonly brand: unique symbol; }'.
    Types of property 'brand' are incompatible.
      Type 'typeof brand' is not assignable to type 'typeof brand'. Two different types with this name exist, but they are unrelated.</span><span class="code">2345</span></span><span class="error-behind">Argument of type 'CompanyId' is not assignable to parameter of type 'UserId'.
  Type 'CompanyId' is not assignable to type '{ readonly brand: unique symbol; }'.
    Types of property 'brand' are incompatible.
      Type 'typeof brand' is not assignable to type 'typeof brand'. Two different types with this name exist, but they are unrelated.</span></code></div></pre>
<p>\u4F7F\u7528 TypeScript \u63A5\u53E3\u5408\u5E76\u7684\u7279\u6027\u53EF\u4EE5\u6269\u5C55\u73B0\u6709\u7684\u63A5\u53E3\uFF0C\u5982\u4E3A Array \u7684\u539F\u578B\u6DFB\u52A0\u65B0\u7684\u65B9\u6CD5\u3002</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">interface</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='interface Array&lt;T>' >Array</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in Array&lt;T>' >T</data-lsp></span><span style="color: #000000">&gt; {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #795E26"><data-lsp lsp='(method) Array&lt;T>.zip&lt;U>(list: U[]): [T, U][]' >zip</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in Array&lt;T>.zip&lt;U>(list: U[]): [T, U][]' >U</data-lsp></span><span style="color: #000000">&gt;(</span><span style="color: #001080"><data-lsp lsp='(parameter) list: U[]' >list</data-lsp></span><span style="color: #000000">: </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in Array&lt;T>.zip&lt;U>(list: U[]): [T, U][]' >U</data-lsp></span><span style="color: #000000">[]): [</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in Array&lt;T>' >T</data-lsp></span><span style="color: #000000">, </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in Array&lt;T>.zip&lt;U>(list: U[]): [T, U][]' >U</data-lsp></span><span style="color: #000000">][];</span></div><div class='line'><span style="color: #000000">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #000000">[</span><span style="color: #098658">1</span><span style="color: #000000">].</span><span style="color: #795E26"><data-lsp lsp='(method) Array&lt;number>.zip&lt;boolean>(list: boolean[]): [number, boolean][]' >zip</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99">boolean</span><span style="color: #000000">&gt;([</span><span style="color: #0000FF">true</span><span style="color: #000000">]);</span></div></code></div></pre>
<p>\u5728 tsconfig \u6587\u4EF6\u4E2D\u4F7F\u7528 <code>exclude</code> \u5C06\u5B9A\u4E49\u6587\u4EF6\u6392\u9664\u5728\u5916\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u8981\u6C42\u5728\u5F00\u53D1\u8FC7\u7A0B\u4E2D\u5FC5\u987B\u5148 <code>import</code> \u624D\u80FD\u4F7F\u7528\u5B9A\u4E49\u3002\uFF08P189\uFF09</p>
<p><strong>Exercise 3</strong>\uFF1A\u8BA1\u7B97\u4E0D\u540C\u65F6\u5728 <code>T</code> \u548C <code>U</code> \u4E2D\u7684\u7C7B\u578B\uFF1A</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Exclusive&lt;T, U> = (T extends U ? never : T) | (U extends T ? never : U)' >Exclusive</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type Exclusive&lt;T, U>' >T</data-lsp></span><span style="color: #000000">, </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in type Exclusive&lt;T, U>' >U</data-lsp></span><span style="color: #000000">&gt; = (</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type Exclusive&lt;T, U>' >T</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in type Exclusive&lt;T, U>' >U</data-lsp></span><span style="color: #000000"> ? </span><span style="color: #267F99">never</span><span style="color: #000000"> : </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type Exclusive&lt;T, U>' >T</data-lsp></span><span style="color: #000000">) | (</span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in type Exclusive&lt;T, U>' >U</data-lsp></span><span style="color: #000000"> </span><span style="color: #0000FF">extends</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type Exclusive&lt;T, U>' >T</data-lsp></span><span style="color: #000000"> ? </span><span style="color: #267F99">never</span><span style="color: #000000"> : </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in type Exclusive&lt;T, U>' >U</data-lsp></span><span style="color: #000000">);</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type ExclusiveNumber = 1 | 4' >ExclusiveNumber</data-lsp></span><span style="color: #000000"> = </span><span style="color: #267F99"><data-lsp lsp='type Exclusive&lt;T, U> = (T extends U ? never : T) | (U extends T ? never : U)' >Exclusive</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #098658">1</span><span style="color: #000000"> | </span><span style="color: #098658">2</span><span style="color: #000000"> | </span><span style="color: #098658">3</span><span style="color: #000000">, </span><span style="color: #098658">2</span><span style="color: #000000"> | </span><span style="color: #098658">3</span><span style="color: #000000"> | </span><span style="color: #098658">4</span><span style="color: #000000">&gt;;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #008000">// \u4E0B\u9762\u662F\u66F4\u597D\u7684\u5199\u6CD5\uFF1A</span></div><div class='line'><span style="color: #0000FF">type</span><span style="color: #000000"> </span><span style="color: #267F99"><data-lsp lsp='type Exclusive2&lt;T, U> = Exclude&lt;T, U> | Exclude&lt;U, T>' >Exclusive2</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type Exclusive2&lt;T, U>' >T</data-lsp></span><span style="color: #000000">, </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in type Exclusive2&lt;T, U>' >U</data-lsp></span><span style="color: #000000">&gt; = </span><span style="color: #267F99"><data-lsp lsp='type Exclude&lt;T, U> = T extends U ? never : T' >Exclude</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type Exclusive2&lt;T, U>' >T</data-lsp></span><span style="color: #000000">, </span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in type Exclusive2&lt;T, U>' >U</data-lsp></span><span style="color: #000000">&gt; | </span><span style="color: #267F99"><data-lsp lsp='type Exclude&lt;T, U> = T extends U ? never : T' >Exclude</data-lsp></span><span style="color: #000000">&lt;</span><span style="color: #267F99"><data-lsp lsp='(type parameter) U in type Exclusive2&lt;T, U>' >U</data-lsp></span><span style="color: #000000">, </span><span style="color: #267F99"><data-lsp lsp='(type parameter) T in type Exclusive2&lt;T, U>' >T</data-lsp></span><span style="color: #000000">&gt;;</span></div></code></div></pre>
<p><strong>Exercise 4</strong>\uFF1A\u5C06 6.6.3 \u4E2D\u7684\u793A\u4F8B\u6539\u5199\u6210\u4E0D\u7528\u660E\u786E\u8D4B\u503C\u65AD\u8A00\uFF08<em>Definite Assignment Assertions</em>\uFF09\u7684\u5F62\u5F0F</p>
<pre class="shiki light-plus" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #008000">// \u4F7F\u7528\u660E\u786E\u8D4B\u503C\u65AD\u8A00</span></div><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080">userId</span><span style="color: #000000">!: </span><span style="color: #267F99">string</span><span style="color: #000000">;</span></div><div class='line'><span style="color: #795E26">fetchUser</span><span style="color: #000000">();</span></div><div class='line'><span style="color: #001080">userId</span><span style="color: #000000">.</span><span style="color: #795E26">toUpperCase</span><span style="color: #000000">();</span></div><div class='line'></div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26">fetchUser</span><span style="color: #000000">() {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #001080">userId</span><span style="color: #000000"> = </span><span style="color: #001080">localStorage</span><span style="color: #000000">.</span><span style="color: #795E26">getItem</span><span style="color: #000000">(</span><span style="color: #A31515">'userId'</span><span style="color: #000000">)!;</span></div><div class='line'><span style="color: #000000">}</span></div></code></div></pre>
<p>\u4E0D\u7528\u660E\u786E\u8D4B\u503C\u65AD\u8A00\u7684\u8BDD\uFF0C\u8FD8\u662F\u7528 <code>fetchUser()</code> \u7684\u8FD4\u56DE\u503C\u8D4B\u503C\u6BD4\u8F83\u597D\uFF1A</p>
<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #0000FF">let</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='let userId: string' >userId</data-lsp></span><span style="color: #000000"> = </span><span style="color: #795E26"><data-lsp lsp='function fetchUser(): string' >fetchUser</data-lsp></span><span style="color: #000000">();</span></div><div class='line'><span style="color: #001080"><data-lsp lsp='let userId: string' >userId</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) String.toUpperCase(): string' >toUpperCase</data-lsp></span><span style="color: #000000">();</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #0000FF">function</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp='function fetchUser(): string' >fetchUser</data-lsp></span><span style="color: #000000">() {</span></div><div class='line'><span style="color: #000000">  </span><span style="color: #AF00DB">return</span><span style="color: #000000"> </span><span style="color: #001080"><data-lsp lsp='var localStorage: Storage' >localStorage</data-lsp></span><span style="color: #000000">.</span><span style="color: #795E26"><data-lsp lsp='(method) Storage.getItem(key: string): string | null' >getItem</data-lsp></span><span style="color: #000000">(</span><span style="color: #A31515">&apos;userId&apos;</span><span style="color: #000000">)!;</span></div><div class='line'><span style="color: #000000">}</span></div></code></div></pre>`}})}function Yd(){return S("div",{className:"markdown-body",dangerouslySetInnerHTML:{__html:`<h1 style="margin-bottom: 30px">\u300ATypeScript \u7F16\u7A0B\u300B\u8BFB\u4E66\u7B14\u8BB0</h1>
<p>GitHub: <a href="https://github.com/banqinghe/programming-typescript-note/">https://github.com/banqinghe/programming-typescript-note/</a></p>`}})}function Fr(e){return S("svg",yl(dl({width:"1em",height:"1em",viewBox:"0 0 24 24"},e),{children:S("path",{fill:"currentColor",d:"M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33c.85 0 1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2Z"})}))}function Gd(e){return S("svg",yl(dl({width:"1em",height:"1em",viewBox:"0 0 256 256"},e),{children:S("path",{fill:"currentColor",d:"M80 64a8 8 0 0 1 8-8h128a8 8 0 0 1 0 16H88a8 8 0 0 1-8-8Zm136 56H88a8 8 0 0 0 0 16h128a8 8 0 0 0 0-16Zm0 64H88a8 8 0 0 0 0 16h128a8 8 0 0 0 0-16ZM44 52a12 12 0 1 0 12 12a12 12 0 0 0-12-12Zm0 64a12 12 0 1 0 12 12a12 12 0 0 0-12-12Zm0 64a12 12 0 1 0 12 12a12 12 0 0 0-12-12Z"})}))}function Xd(e){return S("svg",yl(dl({width:"4.1em",height:"1em",viewBox:"0 0 512 125"},e),{children:S("path",{fill:"#007ACC",d:"M63.818 11.338H37.254v82.283H26.402V11.338H0V1.62h63.818v9.718Zm50.05 16.522l-30.29 76.29c-5.345 13.605-12.957 20.408-22.676 20.408c-2.753 0-5.02-.324-6.803-.81v-9.394c2.268.81 4.374 1.134 6.155 1.134c5.345 0 9.233-3.24 11.986-9.557l5.184-12.472l-25.592-65.6h11.662L81.31 78.396c.162.648.648 2.268 1.296 5.022h.324c.162-.972.648-2.592 1.296-4.86l18.627-50.697h11.014Zm17.169 56.205h-.324v39.683h-10.528V27.86h10.528v11.5h.324c5.183-8.747 12.796-13.12 22.676-13.12c8.423 0 15.064 2.915 19.761 8.746c4.697 5.831 7.127 13.768 7.127 23.649c0 11.014-2.753 19.76-8.099 26.401c-5.345 6.641-12.634 9.88-21.866 9.88c-8.26.325-14.902-3.4-19.599-10.851Zm-.162-26.402v9.232c0 5.507 1.782 10.043 5.345 13.768c3.564 3.725 7.937 5.67 13.444 5.67c6.317 0 11.338-2.43 15.064-7.29c3.563-4.859 5.345-11.662 5.345-20.408c0-7.29-1.62-13.12-5.021-17.17c-3.402-4.211-7.937-6.155-13.768-6.155c-6.155 0-11.014 2.106-14.74 6.317c-3.887 4.212-5.669 9.557-5.669 16.036Zm114.192 5.669h-46.325c.162 7.289 2.106 12.958 5.831 17.007c3.726 4.05 8.909 5.993 15.55 5.993c7.45 0 14.253-2.43 20.408-7.289v9.88c-5.83 4.212-13.443 6.318-22.838 6.318c-9.232 0-16.521-2.916-21.866-8.909c-5.346-5.993-7.937-14.416-7.937-25.106c0-10.204 2.915-18.627 8.747-24.944c5.83-6.479 12.957-9.718 21.542-9.718s15.226 2.753 19.923 8.422c4.697 5.508 7.127 13.282 7.127 23.163l-.162 5.183Zm-10.853-8.909c0-6.155-1.457-10.852-4.373-14.253c-2.915-3.402-6.965-5.022-11.986-5.022c-5.021 0-9.232 1.782-12.634 5.346c-3.401 3.563-5.669 8.26-6.479 13.93h35.472Zm16.036 35.959v-7.29c6.64 4.212 13.282 6.318 20.085 6.318c7.127 0 12.634-1.458 16.36-4.536c3.724-3.077 5.506-7.126 5.506-12.472c0-4.697-1.296-8.422-3.725-11.338c-2.43-2.753-7.937-6.64-16.198-11.5c-9.394-5.507-15.225-10.042-17.655-13.606c-2.43-3.725-3.725-7.936-3.725-12.634c0-6.479 2.591-11.986 7.613-16.521C263.53 2.268 270.335 0 278.757 0c5.507 0 11.015.972 16.36 2.754v6.64c-5.345-2.43-11.176-3.725-17.331-3.725c-6.317 0-11.177 1.62-14.902 4.697c-3.726 3.24-5.507 7.127-5.507 11.986c0 4.698 1.296 8.423 3.725 11.177c2.43 2.753 7.937 6.64 16.198 11.338c8.584 4.859 14.253 9.232 17.169 12.958c2.915 3.725 4.211 8.098 4.211 13.12c0 7.126-2.43 12.796-7.289 17.33c-4.859 4.536-11.824 6.642-20.732 6.642c-3.24 0-6.803-.486-11.015-1.458c-4.21-.972-7.288-1.782-9.394-3.077Zm103.177.323c-4.859 2.916-10.69 4.536-17.493 4.536c-8.908 0-16.197-3.078-21.704-9.233c-5.507-6.155-8.261-14.092-8.261-24.134c0-10.366 3.078-18.95 9.233-25.592c6.155-6.64 14.091-10.042 23.81-10.042c5.02 0 9.88.972 14.577 3.077v6.641c-4.697-2.915-9.88-4.373-15.387-4.373c-7.775 0-13.93 2.754-18.79 8.26c-4.858 5.508-7.126 12.797-7.126 21.543c0 8.585 2.268 15.388 6.64 20.57c4.374 5.184 10.205 7.776 17.332 7.776c6.641 0 12.31-1.782 17.17-5.184v6.155Zm39.198-56.69c-1.944-1.458-4.211-2.106-6.965-2.106c-5.183 0-9.556 2.753-12.958 8.099c-3.563 5.345-5.183 12.958-5.183 22.838v30.937h-5.83V27.86h5.83v14.577h.324c1.458-5.021 3.887-8.908 7.127-11.662c3.24-2.753 6.965-4.211 11.338-4.211c2.43 0 4.697.324 6.48 1.134v6.317h-.163Zm9.395-22.677c-1.296 0-2.43-.486-3.402-1.458c-.972-.971-1.458-2.105-1.458-3.563c0-1.458.486-2.592 1.458-3.401c.972-.81 2.106-1.296 3.402-1.296c1.295 0 2.43.486 3.563 1.296c.972.81 1.458 1.943 1.458 3.401a5.025 5.025 0 0 1-1.458 3.563c-1.134.972-2.268 1.458-3.563 1.458Zm-2.916 82.283V27.86h5.831v65.76h-5.83Zm26.078-11.662h-.324v41.951h-5.831V27.86h5.831v13.605h.324c2.43-4.859 5.669-8.584 10.042-11.176c4.374-2.591 9.233-3.887 14.416-3.887c8.423 0 14.902 2.915 19.599 8.584c4.697 5.831 6.965 13.606 6.965 23.487c0 11.014-2.754 19.922-8.099 26.725c-5.345 6.803-12.472 10.205-21.219 10.205c-9.718-.162-17.007-4.536-21.704-13.444Zm-.324-24.458v8.26c0 6.641 2.106 12.31 6.155 17.008c4.211 4.697 9.556 7.127 16.36 7.127c6.64 0 12.147-2.916 16.359-8.585c4.211-5.831 6.317-13.282 6.317-22.676c0-8.261-1.944-14.74-5.831-19.6c-3.888-4.858-8.909-7.288-15.388-7.288c-7.613 0-13.606 2.592-17.817 7.775s-6.155 11.014-6.155 17.979ZM512 92.649c-3.078 1.458-5.993 2.106-8.585 2.106c-9.718 0-14.577-5.831-14.577-17.493V33.367h-11.824v-5.345h11.824v-17.17l2.915-.972l2.916-.971v19.113H512v5.345h-17.331v43.409c0 4.535.648 7.774 2.105 9.88c1.458 2.106 3.888 3.078 7.29 3.078c2.429 0 5.02-.81 7.936-2.43v5.345Z"})}))}var _i=[{title:"Intro",link:"/"},{title:"Chapter 3: \u7C7B\u578B\u5168\u89E3",link:"/chapter3"},{title:"Chapter 4: \u51FD\u6570",link:"/chapter4"},{title:"Chapter 5: \u7C7B\u548C\u63A5\u53E3",link:"/chapter5"},{title:"Chapter 6: \u7C7B\u578B\u8FDB\u9636",link:"/chapter6"}],Mi={exports:{}};/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/(function(e){(function(){var s={}.hasOwnProperty;function n(){for(var l=[],t=0;t<arguments.length;t++){var a=arguments[t];if(!!a){var o=typeof a;if(o==="string"||o==="number")l.push(a);else if(Array.isArray(a)){if(a.length){var r=n.apply(null,a);r&&l.push(r)}}else if(o==="object")if(a.toString===Object.prototype.toString)for(var p in a)s.call(a,p)&&a[p]&&l.push(p);else l.push(a.toString())}}return l.join(" ")}e.exports?(n.default=n,e.exports=n):window.classNames=n})()})(Mi);var e0=Mi.exports;function mr(e){const{link:s,nativeLink:n=!1,children:l,className:t=""}=e;return S(Kd,{children:n?S("a",{className:e0("block py-2 px-4 hover:bg-light-400 rounded",t),target:"_blank",href:s,children:l}):S(Li,{className:e0("block py-2 px-4 hover:bg-light-400 rounded",t),to:s,children:l})})}function Jd(){return Ve("header",{className:"sticky top-0 z-10 flex justify-between items-center h-[var(--header-height)] px-4 md:px-8 bg-white border-b",children:[Ve("h1",{className:"flex items-center gap-4 text-lg text-bg-gray-700",style:{fontFamily:"Consolas"},children:["Programming",S(Xd,{className:"transform scale-x-110 text-2xl"}),S("sup",{children:"Note"})]}),S("a",{className:"hidden md:inline",href:"https://github.com/banqinghe/programming-typescript-note/",target:"_blank",children:S(Fr,{style:{fontSize:24}})}),Ve("div",{className:"dropdown dropdown-end !md:hidden ",children:[S("button",{className:"btn m-1",children:S(Gd,{className:"text-[24px]"})}),Ve("ul",{tabIndex:0,className:"dropdown-content menu px-2 py-2 shadow bg-white rounded w-max",children:[_i.map(e=>S("li",{children:S(mr,{link:e.link,children:e.title})},e.link)),Ve("li",{children:[S("hr",{className:"my-1"}),Ve(mr,{nativeLink:!0,link:"https://github.com/banqinghe/programming-typescript-note/",className:"flex justify-center items-center gap-3",children:[S(Fr,{className:"text-lg"}),"GitHub"]})]})]})]})]})}function ey(){const e=pl();return S("aside",{className:"min-w-max border-r hidden md:block",children:S("ul",{className:"sticky top-[var(--header-height)] py-4 text-base space-y-1",style:{fontFamily:"Helvetica"},children:_i.map(s=>S("li",{className:e0("border-l-4 hover:bg-[#fbfbfb]",{"border-indigo-300 text-indigo-500":e.pathname===s.link,"border-transparent":e.pathname!==s.link}),children:S(Li,{className:"block px-6 py-3 ",to:s.link,children:s.title})},s.link))})})}function sy(){return Ve("div",{className:"min-h-screen flex flex-col",children:[S(Jd,{}),Ve("div",{className:"flex-1 flex",children:[S(ey,{}),S("div",{className:"py-6 px-3 md:px-0 w-12/12 md:w-9/12 xl:w-6/12 mx-0 md:mx-auto",children:Ve(Nd,{children:[S(Ws,{path:"/",element:S(Yd,{})}),S(Ws,{path:"/chapter3",element:S(qd,{})}),S(Ws,{path:"/chapter4",element:S(Vd,{})}),S(Ws,{path:"/chapter5",element:S(Qd,{})}),S(Ws,{path:"/chapter6",element:S(Zd,{})})]})})]})]})}oa.createRoot(document.getElementById("root")).render(S(lu.StrictMode,{children:S(Ud,{children:S(sy,{})})}));
